@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.JSInterop

@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
<style>
.log-in-screen {
    justify-content: center;
    align-items: center;
    align-self: center;
    text-align: center;
    left: 21%;
    position: absolute;
    width: 60%;
    font-size: large;
    
}
.card-body{
    background: -webkit-linear-gradient(#005C97,#363795);
    border-radius: 1rem;
    padding: 2rem;
}

.log-in-screen h2 {
    font-size: 2rem;
    color: white !important;
}


.log-in-screen p{
    font-size: 1.5rem;
    color: white !important;
}

.log-in-screen a{
    color: white;
    font-size: 1.5rem;
    border-radius: 1rem;
    border: 1px solid white;
    &:hover {
        border: 1px solid white;
        background-color: #00AEEF;
        color: white;
    }
}

.btn-outline-danger:hover {
  background-color: rgb(105, 205, 239);
  color: rgb(0, 0, 0);
}

</style>
<link rel="stylesheet" href="https://unpkg.com/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" />

<div class="log-in-screen">
<section class="p-3 p-md-4 p-xl-5 w-100 p-3">
  <div class="container-fluid">
    <div class="row justify-content-center">
      <div class="col-12 col-md-9 col-lg-7 col-xl-6 col-xxl-5">
        <div class="card border border-light-subtle rounded-4">
          <div class="card-body p-3 p-md-4 p-xl-5">
            <div class="row">
              <div class="col-12">
                <div class="mb-5">
                  <div class="text-center mb-4">
                     <img src="img/binder_RGB_logotype_white_transparent_1135x512.png" width="175" height="57"/>
                  </div>
                  <h2 class="text-center">Sign in to see your dashboard</h2>
                  <p class="mt-5 mb-5"> Sign in with your work or school account</p>
                </div>
              </div>
            </div>
           
            <div class="row">
              <div class="col-12">
                <div class="right-content-bar">
                    <button @onclick="Login" style="color:white;">Log in</button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

</div>



@code {
    private bool isInTeams = false;

    private async Task Login()
    {
        isInTeams = false;
        // Call the JavaScript function and get the result
        var result = await JSRuntime.InvokeAsync<dynamic>("getAccessToken", isInTeams);

        // Retrieve the token and inTeamsTrue value from the result
        var token = result.token;
        isInTeams = result.isInTeams;

        if (isInTeams)
        {
             Navigation.NavigateTo("authentication/login?token=" + token);
        }
        else
        {
            Navigation.NavigateTo("authentication/login");
        }
    }

    private async Task BeginLogout(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateToLogout("authentication/logout");
    }
}