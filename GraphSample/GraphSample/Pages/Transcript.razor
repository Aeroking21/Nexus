@page "/AiTranscript"
@using System.Security.Authentication
@using System.IO;
@using GrapeCity.Documents.Pdf;
@using DocumentFormat.OpenXml.Packaging;
@using Azure
@using Azure.AI.OpenAI
@using System.Text
@using Microsoft.Graph.Beta
@inject GraphSampleBeta.Graph.GraphClientFactoryBeta clientFactory

<style>
    h3 {
       color:cyan; 
    }

</style>

<AuthorizeView>
    <Authorized>

        <div>
            <h3> Transcript Ai </h3>
        </div>


    </Authorized>

    <NotAuthorized>
        <RedirectToLogin />
    </NotAuthorized>
</AuthorizeView>

@code{

    [CascadingParameter]
    protected Task<AuthenticationState>? authenticationStateTask { get; set; }
    private GraphServiceClient? graphClient;

    protected override async Task OnInitializedAsync()
    {

        if (authenticationStateTask == null)
        {
            throw new AuthenticationException(
                "Unable to access authentication state");
        }

        var user = (await authenticationStateTask).User;
        graphClient = clientFactory.GetAuthenticatedClient();

        var result = await graphClient.Me.OnlineMeetings.GetAsync((requestConfiguration) =>
        {
            requestConfiguration.QueryParameters.Filter = "joinMeetingIdSettings/joinMeetingId eq '1234567890'";
        });


        Console.WriteLine(result);
    }
}
