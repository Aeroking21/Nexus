import { Accordion } from '@microsoft/fast-foundation';
import { AccordionItem } from '@microsoft/fast-foundation';
import { Anchor } from '@microsoft/fast-foundation';
import { AnchoredRegion } from '@microsoft/fast-foundation';
import { Badge } from '@microsoft/fast-foundation';
import { BaseProgress } from '@microsoft/fast-foundation';
import { Breadcrumb } from '@microsoft/fast-foundation';
import { BreadcrumbItem } from '@microsoft/fast-foundation';
import { Button } from '@microsoft/fast-foundation';
import { Checkbox } from '@microsoft/fast-foundation';
import { ColorRGBA64 } from '@microsoft/fast-colors';
import { Combobox } from '@microsoft/fast-foundation';
import { CSSCustomPropertyBehavior } from '@microsoft/fast-foundation';
import { DataGrid } from '@microsoft/fast-foundation';
import { DataGridCell } from '@microsoft/fast-foundation';
import { DataGridRow } from '@microsoft/fast-foundation';
import { DesignSystemProvider } from '@microsoft/fast-foundation';
import { Dialog } from '@microsoft/fast-foundation';
import { Direction } from '@microsoft/fast-web-utilities';
import { Divider } from '@microsoft/fast-foundation';
import { ElementStyles } from '@microsoft/fast-element';
import { Flipper } from '@microsoft/fast-foundation';
import { HorizontalScroll } from '@microsoft/fast-foundation';
import { Listbox } from '@microsoft/fast-foundation';
import { ListboxOption } from '@microsoft/fast-foundation';
import { Menu } from '@microsoft/fast-foundation';
import { MenuItem } from '@microsoft/fast-foundation';
import { NumberField } from '@microsoft/fast-foundation';
import { Radio } from '@microsoft/fast-foundation';
import { RadioGroup } from '@microsoft/fast-foundation';
import { Select } from '@microsoft/fast-foundation';
import { Skeleton } from '@microsoft/fast-foundation';
import { Slider } from '@microsoft/fast-foundation';
import { SliderLabel } from '@microsoft/fast-foundation';
import { Switch } from '@microsoft/fast-foundation';
import { Tab } from '@microsoft/fast-foundation';
import { TabPanel } from '@microsoft/fast-foundation';
import { Tabs } from '@microsoft/fast-foundation';
import { TextArea } from '@microsoft/fast-foundation';
import { TextField } from '@microsoft/fast-foundation';
import { Tooltip } from '@microsoft/fast-foundation';
import { TreeItem } from '@microsoft/fast-foundation';
import { TreeView } from '@microsoft/fast-foundation';

/**
 * @internal
 */
export declare const AccentButtonStyles: ElementStyles;

/**
 * @internal
 */
export declare const accentFill: SwatchFamilyResolver<FillSwatchFamily>;

/**
 * @internal
 */
export declare const accentFillActive: SwatchRecipe;

/**
 * Behavior to resolve and make available the accent-fill-active CSS custom property.
 * @public
 */
export declare const accentFillActiveBehavior: CSSCustomPropertyBehavior;

/**
 * Behavior to resolve and make available the accent-fill-focus CSS custom property.
 * @public
 */
export declare const accentFillFocusBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const accentFillHover: SwatchRecipe;

/**
 * Behavior to resolve and make available the accent-fill-hover CSS custom property.
 * @public
 */
export declare const accentFillHoverBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const accentFillLarge: SwatchFamilyResolver<FillSwatchFamily>;

/**
 * @internal
 */
export declare const accentFillLargeActive: SwatchRecipe;

/**
 * Behavior to resolve and make available the accent-fill-large-active CSS custom property.
 * @public
 */
export declare const accentFillLargeActiveBehavior: CSSCustomPropertyBehavior;

/**
 * Behavior to resolve and make available the accent-fill-large-focus CSS custom property.
 * @public
 */
export declare const accentFillLargeFocusBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const accentFillLargeHover: SwatchRecipe;

/**
 * Behavior to resolve and make available the accent-fill-large-hover CSS custom property.
 * @public
 */
export declare const accentFillLargeHoverBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const accentFillLargeRest: SwatchRecipe;

/**
 * Behavior to resolve and make available the accent-fill-large-rest CSS custom property.
 * @public
 */
export declare const accentFillLargeRestBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const accentFillLargeSelected: SwatchRecipe;

/**
 * Behavior to resolve and make available the accent-fill-large-selected CSS custom property.
 * @public
 */
export declare const accentFillLargeSelectedBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const accentFillRest: SwatchRecipe;

/**
 * Behavior to resolve and make available the accent-fill-rest CSS custom property.
 * @public
 */
export declare const accentFillRestBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const accentFillSelected: SwatchRecipe;

/**
 * Behavior to resolve and make available the accent-fill-selected CSS custom property.
 * @public
 */
export declare const accentFillSelectedBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const accentForeground: SwatchFamilyResolver;

/**
 * @internal
 */
export declare const accentForegroundActive: SwatchRecipe;

/**
 * Behavior to resolve and make available the accent-foreground-active CSS custom property.
 * @public
 */
export declare const accentForegroundActiveBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 * Cut text for normal sized text, less than 18pt normal weight
 */
export declare const accentForegroundCut: SwatchRecipe;

/**
 * @internal
 * Cut text for large sized text, greater than 18pt or 16pt and bold
 */
export declare const accentForegroundCutLarge: SwatchRecipe;

/**
 * Behavior to resolve and make available the accent-foreground-cut-rest CSS custom property.
 * @public
 */
export declare const accentForegroundCutRestBehavior: CSSCustomPropertyBehavior;

/**
 * Behavior to resolve and make available the accent-foreground-focus CSS custom property.
 * @public
 */
export declare const accentForegroundFocusBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const accentForegroundHover: SwatchRecipe;

/**
 * Behavior to resolve and make available the accent-foreground-hover CSS custom property.
 * @public
 */
export declare const accentForegroundHoverBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const accentForegroundLarge: SwatchFamilyResolver;

/**
 * @internal
 */
export declare const accentForegroundLargeActive: SwatchRecipe;

/**
 * Behavior to resolve and make available the accent-foreground-large-active CSS custom property.
 * @public
 */
export declare const accentForegroundLargeActiveBehavior: CSSCustomPropertyBehavior;

/**
 * Behavior to resolve and make available the accent-foreground-large-focus CSS custom property.
 * @public
 */
export declare const accentForegroundLargeFocusBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const accentForegroundLargeHover: SwatchRecipe;

/**
 * Behavior to resolve and make available the accent-foreground-large-hover CSS custom property.
 * @public
 */
export declare const accentForegroundLargeHoverBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const accentForegroundLargeRest: SwatchRecipe;

/**
 * Behavior to resolve and make available the accent-foreground-large-rest CSS custom property.
 * @public
 */
export declare const accentForegroundLargeRestBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const accentForegroundRest: SwatchRecipe;

/**
 * Behavior to resolve and make available the accent-foreground-rest CSS custom property.
 * @public
 */
export declare const accentForegroundRestBehavior: CSSCustomPropertyBehavior;

/**
 * Styles for AccordionItem
 * @public
 */
export declare const AccordionItemStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for Accordion
 * @public
 */
export declare const AccordionStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Define shadow algorithms.
 *
 * TODO: The --background-luminance will need to be derived from JavaScript. For now
 * this is hard-coded to a 1, the relative luminance of pure white.
 * https://github.com/microsoft/fast/issues/2778
 *
 * @internal
 */
export declare const ambientShadow = "0 0 calc((var(--elevation) * 0.225px) + 2px) rgba(0, 0, 0, calc(.11 * (2 - var(--background-luminance, 1))))";

/**
 * Types of anchor appearance.
 * @public
 */
export declare type AnchorAppearance = ButtonAppearance | 'hypertext';

/**
 * Styles for AnchoredRegion
 * @public
 */
export declare const AnchoredRegionStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for Anchor
 * @public
 */
export declare const AnchorStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Badge appearance options.
 * @public
 */
export declare type BadgeAppearance = 'accent' | 'lightweight' | 'neutral' | string;

/**
 * Styles for Badge
 * @public
 */
export declare const BadgeStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * @internal
 */
export declare const BaseButtonStyles: ElementStyles;

/**
 * Styles for BreadcrumbItem
 * @public
 */
export declare const BreadcrumbItemStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for Breadcrumb
 * @public
 */
export declare const BreadcrumbStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Types of button appearance.
 * @public
 */
export declare type ButtonAppearance = 'accent' | 'lightweight' | 'neutral' | 'outline' | 'stealth';

/**
 * Styles for Button
 * @public
 */
export declare const ButtonStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for Card
 * @public
 */
export declare const CardStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for Checkbox
 * @public
 */
export declare const CheckboxStyles: import("@microsoft/fast-element").ElementStyles;

declare type ColorRecipe<T> = DesignSystemResolver<T> & DesignSystemResolverFromSwatchResolver<T>;

/**
 * Combobox appearances
 * @public
 */
export declare type ComboboxAppearance = SelectAppearance;

/**
 * Styles for combobox
 * @public
 */
export declare const ComboboxStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Creates a color palette from a provided source color
 * @param baseColor - ColorRGBA64
 * @returns string[]
 *
 * @public
 */
export declare function createColorPalette(baseColor: any): string[];

/**
 * Styles for DataGrid cell
 * @public
 */
export declare const DataGridCellStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for DataGrid row
 * @public
 */
export declare const DataGridRowStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for DataGrid
 * @public
 */
export declare const DataGridStyles: import("@microsoft/fast-element").ElementStyles;

declare type DensityOffset = -3 | -2 | -1 | 0 | 1 | 2 | 3;

/**
 * Defines the properties in the FAST Design System
 * @public
 */
export declare interface DesignSystem {
    /**
     * Type-ramp font-size and line-height values
     */
    typeRampMinus2FontSize: string;
    typeRampMinus2LineHeight: string;
    typeRampMinus1FontSize: string;
    typeRampMinus1LineHeight: string;
    typeRampBaseFontSize: string;
    typeRampBaseLineHeight: string;
    typeRampPlus1FontSize: string;
    typeRampPlus1LineHeight: string;
    typeRampPlus2FontSize: string;
    typeRampPlus2LineHeight: string;
    typeRampPlus3FontSize: string;
    typeRampPlus3LineHeight: string;
    typeRampPlus4FontSize: string;
    typeRampPlus4LineHeight: string;
    typeRampPlus5FontSize: string;
    typeRampPlus5LineHeight: string;
    typeRampPlus6FontSize: string;
    typeRampPlus6LineHeight: string;
    /**
     * The background color of the current context.
     * May be used to draw an actual background or not. Color recipes evaluated within this context will use this as their basis.
     */
    backgroundColor: string;
    /**
     * The neutral color, which the neutral palette is based on.
     * Keep this value in sync with neutralPalette.
     */
    neutralBaseColor: string;
    /**
     * The accent color, which the accent palette is based on.
     * Keep this value in sync with accentPalette.
     */
    accentBaseColor: string;
    /**
     * An array of colors in a ramp from light to dark, used to look up values for neutral color recipes.
     * Keep this value in sync with neutralBaseColor.
     * Generate by calling createColorPalette.
     */
    neutralPalette: string[];
    /**
     * An array of colors in a ramp from light to dark, used to lookup values for accent color recipes.
     * Keep this value in sync with accentBaseColor.
     * Generate by calling createColorPalette.
     */
    accentPalette: string[];
    /**
     * The density offset, used with designUnit to calculate height and spacing.
     */
    density: number;
    /**
     * The grid-unit that UI dimensions are derived from in pixels.
     */
    designUnit: number;
    /**
     * The primary document direction.
     */
    direction: Direction;
    /**
     * The number of designUnits used for component height at the base density.
     */
    baseHeightMultiplier: number;
    /**
     * The number of designUnits used for horizontal spacing at the base density.
     */
    baseHorizontalSpacingMultiplier: number;
    /**
     * The corner radius applied to controls.
     */
    cornerRadius: number;
    /**
     * The corner radius applied to elevated surfaces or controls.
     */
    elevatedCornerRadius?: number;
    /**
     * The width of the standard outline applied to outline components in pixels.
     */
    outlineWidth: number;
    /**
     * The width of the standard focus outline in pixels.
     */
    focusOutlineWidth: number;
    /**
     * The opacity of a disabled control.
     */
    disabledOpacity: number;
    /**
     * Color swatch deltas for the accent-fill recipe.
     */
    accentFillRestDelta: number;
    accentFillHoverDelta: number;
    accentFillActiveDelta: number;
    accentFillFocusDelta: number;
    accentFillSelectedDelta: number;
    /**
     * Color swatch deltas for the accent-foreground recipe.
     */
    accentForegroundRestDelta: number;
    accentForegroundHoverDelta: number;
    accentForegroundActiveDelta: number;
    accentForegroundFocusDelta: number;
    neutralFillRestDelta: number;
    neutralFillHoverDelta: number;
    neutralFillActiveDelta: number;
    neutralFillFocusDelta: number;
    neutralFillSelectedDelta: number;
    /**
     * Color swatch deltas for the neutral-fill-input recipe.
     */
    neutralFillInputRestDelta: number;
    neutralFillInputHoverDelta: number;
    neutralFillInputActiveDelta: number;
    neutralFillInputFocusDelta: number;
    neutralFillInputSelectedDelta: number;
    /**
     * Color swatch deltas for the neutral-fill-stealth recipe.
     */
    neutralFillStealthRestDelta: number;
    neutralFillStealthHoverDelta: number;
    neutralFillStealthActiveDelta: number;
    neutralFillStealthFocusDelta: number;
    neutralFillStealthSelectedDelta: number;
    /**
     * Configuration for the neutral-fill-toggle recipe.
     */
    neutralFillToggleHoverDelta: number;
    neutralFillToggleActiveDelta: number;
    neutralFillToggleFocusDelta: number;
    /**
     * The luminance value to base layer recipes on.
     * Sets the luminance value for the L1 layer recipe in a manner that can adjust to variable contrast.
     *
     * Currently defaults to -1 to turn the feature off and use backgroundColor for layer colors instead.
     */
    baseLayerLuminance: number;
    /**
     * Color swatch deltas for the neutral-fill-card recipe.
     */
    neutralFillCardDelta: number;
    /**
     * Color swatch delta for neutral-foreground recipe.
     */
    neutralForegroundHoverDelta: number;
    neutralForegroundActiveDelta: number;
    neutralForegroundFocusDelta: number;
    /**
     * Color swatch delta for the neutral-divider recipe.
     */
    neutralDividerRestDelta: number;
    /**
     * Color swatch deltas for the neutral-outline recipe.
     */
    neutralOutlineRestDelta: number;
    neutralOutlineHoverDelta: number;
    neutralOutlineActiveDelta: number;
    neutralOutlineFocusDelta: number;
    neutralContrastFillRestDelta: number;
    neutralContrastFillHoverDelta: number;
    neutralContrastFillActiveDelta: number;
    neutralContrastFillFocusDelta: number;
}

/**
 * The default values for {@link DesignSystem}
 * @public
 */
export declare const DesignSystemDefaults: DesignSystem;

declare type DesignSystemResolver<T, Y = DesignSystem> = (d: Y) => T;

/**
 * A function type that resolves a Swatch from a SwatchResolver
 * and applies it to the backgroundColor property of the design system
 * of the returned DesignSystemResolver
 */
declare type DesignSystemResolverFromSwatchResolver<T> = (resolver: SwatchResolver) => DesignSystemResolver<T>;

/**
 * Styles for Dialog
 * @public
 */
export declare const DialogStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * @internal
 */
export declare const directionalShadow = "0 calc(var(--elevation) * 0.4px) calc((var(--elevation) * 0.9px)) rgba(0, 0, 0, calc(.13 * (2 - var(--background-luminance, 1))))";

/**
 * Styles for Divider
 * @public
 */
export declare const DividerStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Applies the box-shadow CSS rule set to the elevation formula.
 * Control this formula with the --elevation CSS Custom Property
 * by setting --elevation to a number.
 *
 * @public
 */
export declare const elevation: string;

/**
 * @internal
 */
export declare const FillStateStyles: ElementStyles;

/**
 * Interface describing a family of swatches applied as fills
 */
declare interface FillSwatchFamily extends SwatchFamily {
    /**
     * The swatch to apply to the selected state
     */
    selected: Swatch;
}

/**
 * Styles for Flipper
 * @public
 */
export declare const FlipperStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * The FluentUI Accordion Element. Implements {@link @microsoft/fast-foundation#Accordion},
 * {@link @microsoft/fast-foundation#AccordionTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-accordion\>
 */
export declare class FluentAccordion extends Accordion {
}

/**
 * The Fluent Accordion Item Element. Implements {@link @microsoft/fast-foundation#AccordionItem},
 * {@link @microsoft/fast-foundation#AccordionItemTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-accordion-item\>
 */
export declare class FluentAccordionItem extends AccordionItem {
}

/**
 * The Fluent Anchor Element. Implements {@link @microsoft/fast-foundation#Anchor},
 * {@link @microsoft/fast-foundation#AnchorTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-anchor\>
 *
 * {@link https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus | delegatesFocus}
 */
export declare class FluentAnchor extends Anchor {
    /**
     * The appearance the anchor should have.
     *
     * @public
     * @remarks
     * HTML Attribute: appearance
     */
    appearance: AnchorAppearance;
    appearanceChanged(oldValue: AnchorAppearance, newValue: AnchorAppearance): void;
    /**
     * @internal
     */
    connectedCallback(): void;
    /**
     * Applies 'icon-only' class when there is only an SVG in the default slot
     *
     * @internal
     */
    defaultSlottedContentChanged(): void;
}

/**
 * The Fluent AnchoredRegion Element. Implements {@link @microsoft/fast-foundation#AnchoredRegion},
 * {@link @microsoft/fast-foundation#AnchoredRegionTemplate}
 *
 *
 * @beta
 * @remarks
 * HTML Element: \<fluent-anchored-region\>
 */
export declare class FluentAnchoredRegion extends AnchoredRegion {
}

/**
 * The Fluent Badge Element. Implements {@link @microsoft/fast-foundation#Badge},
 * {@link @microsoft/fast-foundation#BadgeTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-badge\>
 */
export declare class FluentBadge extends Badge {
    appearance: BadgeAppearance;
    private appearanceChanged;
}

/**
 * The Fluent Breadcrumb Element. Implements {@link @microsoft/fast-foundation#Breadcrumb},
 * {@link @microsoft/fast-foundation#BreadcrumbTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-breadcrumb\>
 */
export declare class FluentBreadcrumb extends Breadcrumb {
}

/**
 * The Fluent BreadcrumbItem Element. Implements {@link @microsoft/fast-foundation#BreadcrumbItem},
 * {@link @microsoft/fast-foundation#BreadcrumbItemTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-breadcrumb-item\>
 */
export declare class FluentBreadcrumbItem extends BreadcrumbItem {
}

/**
 * The Fluent Button Element. Implements {@link @microsoft/fast-foundation#Button},
 * {@link @microsoft/fast-foundation#ButtonTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-button\>
 *
 * {@link https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus | delegatesFocus}
 */
export declare class FluentButton extends Button {
    /**
     * The appearance the button should have.
     *
     * @public
     * @remarks
     * HTML Attribute: appearance
     */
    appearance: ButtonAppearance;
    appearanceChanged(oldValue: ButtonAppearance, newValue: ButtonAppearance): void;
    /**
     * @internal
     */
    connectedCallback(): void;
    /**
     * Applies 'icon-only' class when there is only an SVG in the default slot
     *
     * @internal
     */
    defaultSlottedContentChanged(): void;
}

/**
 * The Fluent Card Element. Implements {@link @microsoft/fast-foundation#Card},
 * {@link @microsoft/fast-foundation#CardTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-card\>
 */
export declare class FluentCard extends FluentDesignSystemProvider {
    /**
     * Background color for the card component. Sets context for the design system.
     * @public
     * @remarks
     * HTML Attribute: card-background-color
     */
    cardBackgroundColor: string;
    private cardBackgroundColorChanged;
    /**
     * @internal
     */
    handleChange(source: DesignSystem, name: string): void;
    connectedCallback(): void;
}

/**
 * The Fluent Checkbox Element. Implements {@link @microsoft/fast-foundation#Checkbox},
 * {@link @microsoft/fast-foundation#CheckboxTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-checkbox\>
 */
export declare class FluentCheckbox extends Checkbox {
}

/**
 * The Fluent Combobox Custom Element. Implements {@link @microsoft/fast-foundation#Combobox|Combobox},
 * {@link @microsoft/fast-foundation#ComboboxTemplate|ComboboxTemplate}
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-combobox\>
 *
 */
export declare class FluentCombobox extends Combobox {
    /**
     * The appearance of the element.
     *
     * @public
     * @remarks
     * HTML Attribute: appearance
     */
    appearance: ComboboxAppearance;
    /**
     * @internal
     */
    appearanceChanged(oldValue: ComboboxAppearance, newValue: ComboboxAppearance): void;
    /**
     * @internal
     */
    connectedCallback(): void;
}

/**
 * The Fluent Data Grid Element.
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-data-grid\>
 */
export declare class FluentDataGrid extends DataGrid {
}

/**
 * The Fluent Data Grid Cell Element.
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-data-grid-cell\>
 */
export declare class FluentDataGridCell extends DataGridCell {
}

/**
 * The Fluent Data Grid Row Element.
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-data-grid-row\>
 */
export declare class FluentDataGridRow extends DataGridRow {
}

/**
 * The Fluent Design System
 * @public
 */
export declare type FluentDesignSystem = Omit<DesignSystem, 'contrast' | 'fontWeight' | 'neutralForegroundDarkIndex' | 'neutralForegroundLightIndex'>;

/**
 * The Fluent DesignSystemProvider Element. Implements {@link @microsoft/fast-foundation#DesignSystemProvider},
 * {@link @microsoft/fast-foundation#DesignSystemProviderTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-design-system-provider\>
 */
export declare class FluentDesignSystemProvider extends DesignSystemProvider implements Omit<DesignSystem, 'contrast' | 'fontWeight' | 'neutralForegroundDarkIndex' | 'neutralForegroundLightIndex'> {
    /**
     * Used to instruct the FASTDesignSystemProvider
     * that it should not set the CSS
     * background-color and color properties
     *
     * @remarks
     * HTML boolean boolean attribute: no-paint
     */
    noPaint: boolean;
    private noPaintChanged;
    /**
     * Define design system property attributes
     */
    backgroundColor: string;
    protected backgroundColorChanged(): void;
    neutralBaseColor: string;
    protected neutralBaseColorChanged(oldValue: string, newValue: string): void;
    accentBaseColor: string;
    protected accentBaseColorChanged(oldValue: string, newValue: string): void;
    neutralPalette: string[];
    accentPalette: string[];
    density: DensityOffset;
    designUnit: number;
    direction: Direction;
    baseHeightMultiplier: number;
    baseHorizontalSpacingMultiplier: number;
    cornerRadius: number;
    elevatedCornerRadius: number;
    outlineWidth: number;
    focusOutlineWidth: number;
    disabledOpacity: number;
    typeRampMinus2FontSize: string;
    typeRampMinus2LineHeight: string;
    typeRampMinus1FontSize: string;
    typeRampMinus1LineHeight: string;
    typeRampBaseFontSize: string;
    typeRampBaseLineHeight: string;
    typeRampPlus1FontSize: string;
    typeRampPlus1LineHeight: string;
    typeRampPlus2FontSize: string;
    typeRampPlus2LineHeight: string;
    typeRampPlus3FontSize: string;
    typeRampPlus3LineHeight: string;
    typeRampPlus4FontSize: string;
    typeRampPlus4LineHeight: string;
    typeRampPlus5FontSize: string;
    typeRampPlus5LineHeight: string;
    typeRampPlus6FontSize: string;
    typeRampPlus6LineHeight: string;
    accentFillRestDelta: number;
    accentFillHoverDelta: number;
    accentFillActiveDelta: number;
    accentFillFocusDelta: number;
    accentFillSelectedDelta: number;
    accentForegroundRestDelta: number;
    accentForegroundHoverDelta: number;
    accentForegroundActiveDelta: number;
    accentForegroundFocusDelta: number;
    neutralFillRestDelta: number;
    neutralFillHoverDelta: number;
    neutralFillActiveDelta: number;
    neutralFillFocusDelta: number;
    neutralFillSelectedDelta: number;
    neutralFillInputRestDelta: number;
    neutralFillInputHoverDelta: number;
    neutralFillInputActiveDelta: number;
    neutralFillInputFocusDelta: number;
    neutralFillInputSelectedDelta: number;
    neutralFillStealthRestDelta: number;
    neutralFillStealthHoverDelta: number;
    neutralFillStealthActiveDelta: number;
    neutralFillStealthFocusDelta: number;
    neutralFillStealthSelectedDelta: number;
    neutralFillToggleHoverDelta: number;
    neutralFillToggleActiveDelta: number;
    neutralFillToggleFocusDelta: number;
    baseLayerLuminance: number;
    neutralFillCardDelta: number;
    neutralForegroundHoverDelta: number;
    neutralForegroundActiveDelta: number;
    neutralForegroundFocusDelta: number;
    neutralDividerRestDelta: number;
    neutralOutlineRestDelta: number;
    neutralOutlineHoverDelta: number;
    neutralOutlineActiveDelta: number;
    neutralOutlineFocusDelta: number;
    /**
     * The distance from the resolved neutral contrast fill color for the rest state of the neutral-contrast-fill recipe. See {@link @microsoft/fast-components#neutralContrastFillRestBehavior} for usage in CSS.
     *
     * @remarks
     * HTML attribute: neutral-contrast-fill-rest-delta
     *
     * CSS custom property: N/A
     */
    neutralContrastFillRestDelta: number;
    /**
     * The distance from the resolved neutral contrast fill color for the rest state of the neutral-contrast-fillrecipe. See {@link @microsoft/fast-components#neutralContrastFillHoverBehavior} for usage in CSS.
     *
     * @remarks
     * HTML attribute: neutral-contrast-fill-hover-delta
     *
     * CSS custom property: N/A
     */
    neutralContrastFillHoverDelta: number;
    /**
     * The distance from the resolved neutral contrast fill color for the rest state of the neutral-contrast-fill recipe. See {@link @microsoft/fast-components#neutralContrastFillActiveBehavior} for usage in CSS.
     *
     * @remarks
     * HTML attribute: neutral-contrast-fill-active-delta
     *
     * CSS custom property: N/A
     */
    neutralContrastFillActiveDelta: number;
    /**
     * The distance from the resolved neutral contrast fill color for the rest state of the neutral-contrast-fill recipe. See {@link @microsoft/fast-components#neutralContrastFillFocusBehavior} for usage in CSS.
     *
     * @remarks
     * HTML attribute: neutral-contrast-fill-focus-delta
     *
     * CSS custom property: N/A
     */
    neutralContrastFillFocusDelta: number;
}

/**
 * The Fluent Dialog Element. Implements {@link @microsoft/fast-foundation#Dialog},
 * {@link @microsoft/fast-foundation#DialogTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-dialog\>
 */
export declare class FluentDialog extends Dialog {
}

/**
 * The Fluent Divider Element. Implements {@link @microsoft/fast-foundation#Divider},
 * {@link @microsoft/fast-foundation#DividerTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-divider\>
 */
export declare class FluentDivider extends Divider {
}

/**
 * The Fluent Flipper Element. Implements {@link @microsoft/fast-foundation#Flipper},
 * {@link @microsoft/fast-foundation#FlipperTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-flipper\>
 */
export declare class FluentFlipper extends Flipper {
}

/**
 * The Fluent Horizontal Scroll Element. Implements {@link @microsoft/fast-foundation#HorizontalScrol},
 * {@link @microsoft/fast-foundation#HorizontalScrollTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-horizontal-scroll\>
 */
export declare class FluentHorizontalScroll extends HorizontalScroll {
    /**
     * @public
     */
    connectedCallback(): void;
}

/**
 * The Fluent Listbox Element. Implements {@link @microsoft/fast-foundation#Listbox},
 * {@link @microsoft/fast-foundation#ListboxTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-listbox\>
 */
export declare class FluentListbox extends Listbox {
}

/**
 * The Fluent Menu Element. Implements {@link @microsoft/fast-foundation#Menu},
 * {@link @microsoft/fast-foundation#MenuTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-menu\>
 */
export declare class FluentMenu extends Menu {
}

/**
 * The Fluent Menu Item Element. Implements {@link @microsoft/fast-foundation#MenuItem},
 * {@link @microsoft/fast-foundation#MenuItemTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-menu-item\>
 */
export declare class FluentMenuItem extends MenuItem {
}

/**
 * The Fluent Number Field Custom Element. Implements {@link @microsoft/fast-foundation#NumberField},
 * {@link @microsoft/fast-foundation#NumberFieldTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-number-field\>
 *
 * {@link https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus | delegatesFocus}
 */
export declare class FluentNumberField extends NumberField {
    /**
     * The appearance of the element.
     *
     * @public
     * @remarks
     * HTML Attribute: appearance
     */
    appearance: NumberFieldAppearance;
    /**
     * @internal
     */
    connectedCallback(): void;
}

/**
 * The Fluent ListboxOption Element. Implements {@link @microsoft/fast-foundation#ListboxOption},
 * {@link @microsoft/fast-foundation#ListboxOptionTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-option\>
 */
export declare class FluentOption extends ListboxOption {
}

/**
 * The Fluent Progress Element. Implements {@link @microsoft/fast-foundation#BaseProgress},
 * {@link @microsoft/fast-foundation#ProgressTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-progress\>
 */
export declare class FluentProgress extends BaseProgress {
}

/**
 * The Fluent Progress Ring Element. Implements {@link @microsoft/fast-foundation#BaseProgress},
 * {@link @microsoft/fast-foundation#ProgressRingTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-progress-ring\>
 */
export declare class FluentProgressRing extends BaseProgress {
}

/**
 * The Fluent Radio Element. Implements {@link @microsoft/fast-foundation#Radio},
 * {@link @microsoft/fast-foundation#RadioTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-radio\>
 */
export declare class FluentRadio extends Radio {
}

/**
 * The Fluent Radio Group Element. Implements {@link @microsoft/fast-foundation#RadioGroup},
 * {@link @microsoft/fast-foundation#RadioGroupTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-radio-group\>
 */
export declare class FluentRadioGroup extends RadioGroup {
}

/**
 * The Fluent Select Element. Implements {@link @microsoft/fast-foundation#Select},
 * {@link @microsoft/fast-foundation#SelectTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-select\>
 */
export declare class FluentSelect extends Select {
    /**
     * The appearance of the element.
     *
     * @public
     * @remarks
     * HTML Attribute: appearance
     */
    appearance: SelectAppearance;
    /**
     * @internal
     */
    appearanceChanged(oldValue: SelectAppearance, newValue: SelectAppearance): void;
    /**
     * @internal
     */
    connectedCallback(): void;
}

/**
 * The Fluent Skeleton Element. Implements {@link @microsoft/fast-foundation#Skeleton},
 * {@link @microsoft/fast-foundation#SkeletonTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-skeleton\>
 */
export declare class FluentSkeleton extends Skeleton {
}

/**
 * The Fluent Slider Custom Element. Implements {@link @microsoft/fast-foundation#Slider},
 * {@link @microsoft/fast-foundation#SliderTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-slider\>
 */
export declare class FluentSlider extends Slider {
}

/**
 * The Fluent Slider Label Custom Element. Implements {@link @microsoft/fast-foundation#SliderLabel},
 * {@link @microsoft/fast-foundation#SliderLabelTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-slider-label\>
 */
export declare class FluentSliderLabel extends SliderLabel {
}

/**
 * The Fluent Switch Custom Element. Implements {@link @microsoft/fast-foundation#Switch},
 * {@link @microsoft/fast-foundation#SwitchTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-switch\>
 */
export declare class FluentSwitch extends Switch {
}

/**
 * The Fluent Tab Custom Element. Implements {@link @microsoft/fast-foundation#Tab},
 * {@link @microsoft/fast-foundation#TabTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-tab\>
 */
export declare class FluentTab extends Tab {
}

/**
 * The Fluent Tab Panel Custom Element. Implements {@link @microsoft/fast-foundation#TabPanel},
 * {@link @microsoft/fast-foundation#TabPanelTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-tab-panel\>
 */
export declare class FluentTabPanel extends TabPanel {
}

/**
 * The Fluent Tabs Custom Element. Implements {@link @microsoft/fast-foundation#Tabs},
 * {@link @microsoft/fast-foundation#TabsTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-tabs\>
 */
export declare class FluentTabs extends Tabs {
}

/**
 * The Fluent Text Area Custom Element. Implements {@link @microsoft/fast-foundation#TextArea},
 * {@link @microsoft/fast-foundation#TextAreaTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-text-area\>
 *
 * {@link https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus | delegatesFocus}
 */
export declare class FluentTextArea extends TextArea {
    /**
     * The appearance of the element.
     *
     * @public
     * @remarks
     * HTML Attribute: appearance
     */
    appearance: TextAreaAppearance;
    /**
     * @internal
     */
    appearanceChanged(oldValue: TextAreaAppearance, newValue: TextAreaAppearance): void;
    /**
     * @internal
     */
    connectedCallback(): void;
}

/**
 * The Fluent Text Field Custom Element. Implements {@link @microsoft/fast-foundation#TextField},
 * {@link @microsoft/fast-foundation#TextFieldTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-text-field\>
 *
 * {@link https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus | delegatesFocus}
 */
export declare class FluentTextField extends TextField {
    /**
     * The appearance of the element.
     *
     * @public
     * @remarks
     * HTML Attribute: appearance
     */
    appearance: TextFieldAppearance;
    /**
     * @internal
     */
    appearanceChanged(oldValue: TextFieldAppearance, newValue: TextFieldAppearance): void;
    /**
     * @internal
     */
    connectedCallback(): void;
}

/**
 * The Fluent Tooltip Custom Element. Implements {@link @microsoft/fast-foundation#Tooltip},
 * {@link @microsoft/fast-foundation#Tooltip}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-tooltip\>
 */
export declare class FluentTooltip extends Tooltip {
}

/**
 * The Fluent Tree Item Custom Element. Implements {@link @microsoft/fast-foundation#TreeItem},
 * {@link @microsoft/fast-foundation#TreeItem}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-tree-item\>
 */
export declare class FluentTreeItem extends TreeItem {
}

/**
 * The Fluent Tree View Custom Element. Implements {@link @microsoft/fast-foundation#TreeView},
 * {@link @microsoft/fast-foundation#TreeView}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-tree-view\>
 */
export declare class FluentTreeView extends TreeView {
}

/**
 * The height of height of a standard control (expressed as a number) to be used in CSS.
 * @public
 */
export declare const heightNumber = "(var(--base-height-multiplier) + var(--density)) * var(--design-unit)";

/**
 * Styles for Horizontal Scroll
 * @public
 */
export declare const HorizontalScrollStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * @internal
 */
export declare const HypertextStyles: ElementStyles;

/**
 * Behavior to resolve and make available the inline-end CSS custom property.
 *
 * @remarks
 * Replaces the inline-end value for the {@link https://developer.mozilla.org/en-US/docs/Web/CSS/float | float} property
 * when the native value is not supported.
 *
 * @public
 * @example
 * ```ts
 * import { css } from "@microsoft/fast-element";
 * import { inlineEndBehavior } from "@microsoft/fast-components-msft";
 *
 * css`
 *   :host {
 *     float: ${inlineEndBehavior.var};
 *   }
 * `.withBehaviors(inlineEndBehavior)
 * ```
 */
export declare const inlineEndBehavior: CSSCustomPropertyBehavior;

/**
 * Behavior to resolve and make available the inline-start CSS custom property.
 *
 * @remarks
 * Replaces the inline-start value for the {@link https://developer.mozilla.org/en-US/docs/Web/CSS/float | float} property
 * when the native value is not supported.
 *
 * @public
 * @example
 * ```ts
 * import { css } from "@microsoft/fast-element";
 * import { inlineStartBehavior } from "@microsoft/fast-components-msft";
 *
 * css`
 *   :host {
 *     float: ${inlineStartBehavior.var};
 *   }
 * `.withBehaviors(inlineStartBehavior)
 * ```
 */
export declare const inlineStartBehavior: CSSCustomPropertyBehavior;

/**
 * @public
 * @privateRemarks
 * Determines if the design-system should be considered in "dark mode".
 * We're in dark mode if we have more contrast between #000000 and our background
 * color than #FFFFFF and our background color. That threshold can be expressed as a relative luminance
 * using the contrast formula as (1 + 0.5) / (bg + 0.05) === (bg + 0.05) / (0 + 0.05),
 * which reduces to the following, where bg is the relative luminance of the background color
 */
export declare function isDarkMode(designSystem: DesignSystem): boolean;

/**
 * @internal
 */
export declare const LightweightButtonStyles: ElementStyles;

/**
 * Styles for Listbox
 * @public
 */
export declare const ListboxStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for MenuItem
 * @public
 */
export declare const MenuItemStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for Menu
 * @public
 */
export declare const MenuStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * @internal
 */
export declare const neutralContrastFill: SwatchFamilyResolver;

/**
 * @internal
 */
export declare const neutralContrastFillActive: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-contrast-fill-active CSS custom property.
 * @public
 */
export declare const neutralContrastFillActiveBehavior: CSSCustomPropertyBehavior;

/**
 * Behavior to resolve and make available the neutral-contrast-fill-focus CSS custom property.
 * @public
 */
export declare const neutralContrastFillFocusBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralContrastFillHover: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-contrast-fill-hover CSS custom property.
 * @public
 */
export declare const neutralContrastFillHoverBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralContrastFillRest: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-contrast-fill-rest CSS custom property.
 * @public
 */
export declare const neutralContrastFillRestBehavior: CSSCustomPropertyBehavior;

/**
 * Behavior to resolve and make available the neutral-contrast-foreground-rest CSS custom property.
 * @public
 */
export declare const neutralContrastForegroundRestBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralDividerRest: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-divider-rest CSS custom property.
 * @public
 */
export declare const neutralDividerRestBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralFill: ColorRecipe<FillSwatchFamily>;

/**
 * @internal
 */
export declare const neutralFillActive: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-fill-active CSS custom property.
 * @public
 */
export declare const neutralFillActiveBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare function neutralFillCard(designSystem: DesignSystem): Swatch;

/**
 * @internal
 */
export declare function neutralFillCard(backgroundResolver: SwatchResolver): SwatchResolver;

/**
 * Behavior to resolve and make available the neutral-fill-card-rest CSS custom property.
 * @public
 */
export declare const neutralFillCardRestBehavior: CSSCustomPropertyBehavior;

/**
 * Behavior to resolve and make available the neutral-fill-focus CSS custom property.
 * @public
 */
export declare const neutralFillFocusBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralFillHover: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-fill-hover CSS custom property.
 * @public
 */
export declare const neutralFillHoverBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralFillInput: ColorRecipe<FillSwatchFamily>;

/**
 * @internal
 */
export declare const neutralFillInputActive: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-fill-input-active CSS custom property.
 * @public
 */
export declare const neutralFillInputActiveBehavior: CSSCustomPropertyBehavior;

/**
 * Behavior to resolve and make available the neutral-fill-input-focus CSS custom property.
 * @public
 */
export declare const neutralFillInputFocusBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralFillInputHover: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-fill-input-hover CSS custom property.
 * @public
 */
export declare const neutralFillInputHoverBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralFillInputRest: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-fill-input-rest CSS custom property.
 * @public
 */
export declare const neutralFillInputRestBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralFillInputSelected: SwatchRecipe;

/**
 * @internal
 */
export declare const neutralFillRest: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-fill-rest CSS custom property.
 * @public
 */
export declare const neutralFillRestBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralFillSelected: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-fill-selected CSS custom property.
 * @public
 */
export declare const neutralFillSelectedBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralFillStealth: ColorRecipe<FillSwatchFamily>;

/**
 * @internal
 */
export declare const neutralFillStealthActive: ColorRecipe<Swatch>;

/**
 * Behavior to resolve and make available the neutral-fill-stealth-active CSS custom property.
 * @public
 */
export declare const neutralFillStealthActiveBehavior: CSSCustomPropertyBehavior;

/**
 * Behavior to resolve and make available the neutral-fill-stealth-focus CSS custom property.
 * @public
 */
export declare const neutralFillStealthFocusBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralFillStealthHover: ColorRecipe<Swatch>;

/**
 * Behavior to resolve and make available the neutral-fill-stealth-hover CSS custom property.
 * @public
 */
export declare const neutralFillStealthHoverBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralFillStealthRest: ColorRecipe<Swatch>;

/**
 * Behavior to resolve and make available the neutral-fill-stealth-rest CSS custom property.
 * @public
 */
export declare const neutralFillStealthRestBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralFillStealthSelected: ColorRecipe<Swatch>;

/**
 * Behavior to resolve and make available the neutral-fill-stealth-selected CSS custom property.
 * @public
 */
export declare const neutralFillStealthSelectedBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralFillToggle: SwatchFamilyResolver;

/**
 * @internal
 */
export declare const neutralFillToggleActive: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-fill-toggle-active CSS custom property.
 * @public
 */
export declare const neutralFillToggleActiveBehavior: CSSCustomPropertyBehavior;

/**
 * Behavior to resolve and make available the neutral-fill-toggle-focus CSS custom property.
 * @public
 */
export declare const neutralFillToggleFocusBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralFillToggleHover: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-fill-toggle-hover CSS custom property.
 * @public
 */
export declare const neutralFillToggleHoverBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralFillToggleRest: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-fill-toggle-rest CSS custom property.
 * @public
 */
export declare const neutralFillToggleRestBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralFocus: ColorRecipe<Swatch>;

/**
 * Behavior to resolve and make available the neutral-focus CSS custom property.
 * @public
 */
export declare const neutralFocusBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare function neutralFocusInnerAccent(accentFillColor: DesignSystemResolver<string>): DesignSystemResolver<string>;

/**
 * Behavior to resolve and make available the neutral-focus-inner-accent CSS custom property.
 * @public
 */
export declare const neutralFocusInnerAccentBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralForeground: SwatchFamilyResolver;

/**
 * @internal
 */
export declare const neutralForegroundActive: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-foreground-active CSS custom property.
 * @public
 */
export declare const neutralForegroundActiveBehavior: CSSCustomPropertyBehavior;

/**
 * Behavior to resolve and make available the neutral-foreground-focus CSS custom property.
 * @public
 */
export declare const neutralForegroundFocusBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 * Hint text for normal sized text, less than 18pt normal weight
 */
export declare const neutralForegroundHint: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-foreground-hint CSS custom property.
 * @public
 */
export declare const neutralForegroundHintBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 * Hint text for large sized text, greater than 18pt or 16pt and bold
 */
export declare const neutralForegroundHintLarge: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-foreground-hint-large CSS custom property.
 * @public
 */
export declare const neutralForegroundHintLargeBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralForegroundHover: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-foreground-hover CSS custom property.
 * @public
 */
export declare const neutralForegroundHoverBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralForegroundRest: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-foreground-rest CSS custom property.
 * @public
 */
export declare const neutralForegroundRestBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 * Toggle text for normal sized text, less than 18pt normal weight
 */
export declare const neutralForegroundToggle: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-foreground-toggle CSS custom property.
 * @public
 */
export declare const neutralForegroundToggleBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 * Toggle text for large sized text, greater than 18pt or 16pt and bold
 */
export declare const neutralForegroundToggleLarge: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-foreground-toggle-large CSS custom property.
 * @public
 */
export declare const neutralForegroundToggleLargeBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 * Used as the background color for cards. Pair with `neutralLayerCardContainer` for the container background.
 */
export declare const neutralLayerCard: ColorRecipe<Swatch>;

/**
 * Behavior to resolve and make available the neutral-layer-card CSS custom property.
 * @public
 */
export declare const neutralLayerCardBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 * Used as the background color for card containers. Pair with `neutralLayerCard` for the card backgrounds.
 */
export declare const neutralLayerCardContainer: ColorRecipe<Swatch>;

/**
 * Behavior to resolve and make available the neutral-layer-card-container CSS custom property.
 * @public
 */
export declare const neutralLayerCardContainerBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 * Used as the background color for floating layers like context menus and flyouts.
 */
export declare const neutralLayerFloating: ColorRecipe<Swatch>;

/**
 * Behavior to resolve and make available the neutral-layer-floating CSS custom property.
 * @public
 */
export declare const neutralLayerFloatingBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 * Used as the background color for the primary content layer (L1).
 */
export declare const neutralLayerL1: ColorRecipe<Swatch>;

/**
 * @internal
 * Alternate darker color for L1 surfaces. Currently the same as card container, but use
 * the most applicable semantic named recipe.
 */
export declare const neutralLayerL1Alt: ColorRecipe<Swatch>;

/**
 * Behavior to resolve and make available the neutral-layer-l1-alt CSS custom property.
 * @public
 */
export declare const neutralLayerL1AltBehavior: CSSCustomPropertyBehavior;

/**
 * Behavior to resolve and make available the neutral-layer-l1 CSS custom property.
 * @public
 */
export declare const neutralLayerL1Behavior: CSSCustomPropertyBehavior;

/**
 * @internal
 * Used as the background for the top command surface, logically below L1.
 */
export declare const neutralLayerL2: ColorRecipe<Swatch>;

/**
 * Behavior to resolve and make available the neutral-layer-l2 CSS custom property.
 * @public
 */
export declare const neutralLayerL2Behavior: CSSCustomPropertyBehavior;

/**
 * @internal
 * Used as the background for secondary command surfaces, logically below L2.
 */
export declare const neutralLayerL3: ColorRecipe<Swatch>;

/**
 * Behavior to resolve and make available the neutral-layer-l3 CSS custom property.
 * @public
 */
export declare const neutralLayerL3Behavior: CSSCustomPropertyBehavior;

/**
 * @internal
 * Used as the background for the lowest command surface or title bar, logically below L3.
 */
export declare const neutralLayerL4: ColorRecipe<Swatch>;

/**
 * Behavior to resolve and make available the neutral-layer-l4 CSS custom property.
 * @public
 */
export declare const neutralLayerL4Behavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralOutline: ColorRecipe<SwatchFamily>;

/**
 * @internal
 */
export declare const neutralOutlineActive: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-outline-active CSS custom property.
 * @public
 */
export declare const neutralOutlineActiveBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralOutlineContrast: ColorRecipe<SwatchFamily>;

/**
 * @internal
 */
export declare const neutralOutlineContrastActive: SwatchRecipe;

/**
 * @internal
 */
export declare const neutralOutlineContrastHover: SwatchRecipe;

/**
 * @internal
 */
export declare const neutralOutlineContrastRest: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-outline-focus CSS custom property.
 * @public
 */
export declare const neutralOutlineFocusBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralOutlineHover: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-outline-hover CSS custom property.
 * @public
 */
export declare const neutralOutlineHoverBehavior: CSSCustomPropertyBehavior;

/**
 * @internal
 */
export declare const neutralOutlineRest: SwatchRecipe;

/**
 * Behavior to resolve and make available the neutral-outline-rest CSS custom property.
 * @public
 */
export declare const neutralOutlineRestBehavior: CSSCustomPropertyBehavior;

/**
 * Number field appearances
 * @public
 */
export declare type NumberFieldAppearance = 'filled' | 'outline';

/**
 * Styles for NumberField
 * @public
 */
export declare const NumberFieldStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for Option
 * @public
 */
export declare const OptionStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * @internal
 */
export declare const OutlineButtonStyles: ElementStyles;

/**
 * The structure of a color palette
 *
 * @public
 */
export declare type Palette = Swatch[];

/**
 * Retrieves a palette by name. This function returns a function that accepts
 * a design system, returning a palette a palette or null
 * @deprecated - use neutralPalette and accentPalette functions instead
 * @internal
 */
export declare function palette(paletteType: PaletteType): DesignSystemResolver<Palette>;

/**
 * The named palettes of the MSFT design system
 * @deprecated - use neutralPalette and accentPalette functions instead
 * @public
 */
export declare enum PaletteType {
    neutral = "neutral",
    accent = "accent"
}

/**
 * Converts a color string into a ColorRGBA64 instance.
 * Supports #RRGGBB and rgb(r, g, b) formats
 *
 * @public
 */
export declare function parseColorString(color: string): ColorRGBA64;

/**
 * Styles for ProgressRing
 * @public
 */
export declare const ProgressRingStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for Progress
 * @public
 */
export declare const ProgressStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for RadioGroup
 * @public
 */
export declare const RadioGroupStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for Radio
 * @public
 */
export declare const RadioStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Select appearances
 * @public
 */
export declare type SelectAppearance = 'filled' | 'outline';

/**
 * Styles for Select
 * @public
 */
export declare const SelectStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for Skeleton
 * @public
 */
export declare const SkeletonStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for SliderLabel
 * @public
 */
export declare const SliderLabelStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for Slider
 * @public
 */
export declare const SliderStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * @public
 * Recommended values for light and dark mode for `baseLayerLuminance` in the design system.
 */
export declare enum StandardLuminance {
    LightMode = 1,
    DarkMode = 0.23
}

/**
 * @internal
 */
export declare const StealthButtonStyles: ElementStyles;

/**
 * Describes the format of a single color in a palette
 */
declare type Swatch = string;

/**
 * Interface describing a family of swatches.
 */
declare interface SwatchFamily {
    /**
     * The swatch to apply to the rest state
     */
    rest: Swatch;
    /**
     * The swatch to apply to the hover state
     */
    hover: Swatch;
    /**
     * The swatch to apply to the active state
     */
    active: Swatch;
    /**
     * The swatch to apply to the focus state
     */
    focus: Swatch;
}

/**
 * A function that accepts a design system and resolves a SwatchFamily or FillSwatchFamily
 */
declare type SwatchFamilyResolver<T extends SwatchFamily = SwatchFamily> = DesignSystemResolver<T>;

/**
 * A function to apply a named style or recipe. A ColorRecipe has several behaviors:
 * 1. When provided a callback function, the color Recipe returns a function that expects a design-system.
 * When called, the returned function will call the callback function with the input design-system and apply
 * the result of that function as background to the recipe. This is useful for applying text recipes to colors
 * other than the design system backgroundColor
 * 2. When provided a design system, the recipe will use that design-system to generate the color
 */
declare type SwatchRecipe = ColorRecipe<Swatch>;

/**
 * A DesignSystemResolver that resolves a Swatch
 */
declare type SwatchResolver = DesignSystemResolver<Swatch>;

/**
 * Styles for Switch
 * @public
 */
export declare const SwitchStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for TabPanel
 * @public
 */
export declare const TabPanelStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for Tabs
 * @public
 */
export declare const TabsStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for Tab
 * @public
 */
export declare const TabStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Text area appearances
 * @public
 */
export declare type TextAreaAppearance = 'filled' | 'outline';

/**
 * Styles for TextArea
 * @public
 */
export declare const TextAreaStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Text field appearances
 * @public
 */
export declare type TextFieldAppearance = 'filled' | 'outline';

/**
 * Styles for TextField
 * @public
 */
export declare const TextFieldStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for Tooltip
 * @public
 */
export declare const TooltipStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for TreeItem
 * @public
 */
export declare const TreeItemStyles: import("@microsoft/fast-element").ElementStyles;

/**
 * Styles for TreeView
 * @public
 */
export declare const TreeViewStyles: import("@microsoft/fast-element").ElementStyles;

export { }
