import { __decorate } from "tslib";
import { attr, customElement } from '@microsoft/fast-element';
import { Select, SelectTemplate as template } from '@microsoft/fast-foundation';
import { SelectStyles as styles } from './select.styles';
/**
 * The Fluent Select Element. Implements {@link @microsoft/fast-foundation#Select},
 * {@link @microsoft/fast-foundation#SelectTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-select\>
 */
let FluentSelect = class FluentSelect extends Select {
    /**
     * @internal
     */
    appearanceChanged(oldValue, newValue) {
        if (oldValue !== newValue) {
            this.classList.add(newValue);
            this.classList.remove(oldValue);
        }
    }
    /**
     * @internal
     */
    connectedCallback() {
        super.connectedCallback();
        if (!this.appearance) {
            this.appearance = 'outline';
        }
    }
};
__decorate([
    attr({ mode: 'fromView' })
], FluentSelect.prototype, "appearance", void 0);
FluentSelect = __decorate([
    customElement({
        name: 'fluent-select',
        template,
        styles,
    })
], FluentSelect);
export { FluentSelect };
/**
 * Styles for Select
 * @public
 */
export const SelectStyles = styles;
