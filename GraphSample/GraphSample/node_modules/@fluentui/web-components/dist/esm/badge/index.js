import { __decorate } from "tslib";
import { attr, customElement, DOM } from '@microsoft/fast-element';
import { Badge, BadgeTemplate as template } from '@microsoft/fast-foundation';
import { BadgeStyles as styles } from './badge.styles';
/**
 * The Fluent Badge Element. Implements {@link @microsoft/fast-foundation#Badge},
 * {@link @microsoft/fast-foundation#BadgeTemplate}
 *
 *
 * @public
 * @remarks
 * HTML Element: \<fluent-badge\>
 */
let FluentBadge = class FluentBadge extends Badge {
    constructor() {
        super(...arguments);
        this.appearance = 'lightweight';
    }
    appearanceChanged(oldValue, newValue) {
        if (oldValue !== newValue) {
            DOM.queueUpdate(() => {
                this.classList.add(newValue);
                this.classList.remove(oldValue);
            });
        }
    }
};
__decorate([
    attr({ mode: 'fromView' })
], FluentBadge.prototype, "appearance", void 0);
FluentBadge = __decorate([
    customElement({
        name: 'fluent-badge',
        template,
        styles,
        shadowOptions: {
            mode: 'closed',
        },
    })
], FluentBadge);
export { FluentBadge };
/**
 * Styles for Badge
 * @public
 */
export const BadgeStyles = styles;
