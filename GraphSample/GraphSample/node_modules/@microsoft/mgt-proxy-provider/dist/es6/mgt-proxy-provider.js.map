{"version":3,"file":"mgt-proxy-provider.js","sourceRoot":"src/","sources":["mgt-proxy-provider.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;;;;;;;AAEH,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACtD,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AACpE,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAEhD;;;;;;GAMG;AAEI,IAAM,gBAAgB,GAAtB,MAAM,gBAAiB,SAAQ,eAAe;IASnD;;;;;OAKG;IACH,IAAW,WAAW;QACpB,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;OAKG;IACO,kBAAkB;QAC1B,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS,EAAE;YACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACtD,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC1C;IACH,CAAC;CACF,CAAA;AAxBC;IAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,iBAAiB,EAAE,CAAC;;uDAA8B;AAP9D,gBAAgB;IAD5B,aAAa,CAAC,oBAAoB,CAAC;GACvB,gBAAgB,CA+B5B;SA/BY,gBAAgB","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { customElement, property } from 'lit-element';\nimport { Providers, MgtBaseProvider } from '@microsoft/mgt-element';\nimport { ProxyProvider } from './ProxyProvider';\n\n/**\n * Authentication component for ProxyProvider\n *\n * @export\n * @class MgtProxyProvider\n * @extends {LitElement}\n */\n@customElement('mgt-proxy-provider')\nexport class MgtProxyProvider extends MgtBaseProvider {\n  /**\n   * The base url to the proxy api\n   *\n   * @type {string}\n   * @memberof MgtProxyProvider\n   */\n  @property({ attribute: 'graph-proxy-url' }) public graphProxyUrl: string;\n\n  /**\n   * Gets whether this provider can be used in this environment\n   *\n   * @readonly\n   * @memberof MgtMsalProvider\n   */\n  public get isAvailable() {\n    return true;\n  }\n\n  /**\n   * method called to initialize the provider. Each derived class should provide their own implementation.\n   *\n   * @protected\n   * @memberof MgtProxyProvider\n   */\n  protected initializeProvider() {\n    if (this.graphProxyUrl !== undefined) {\n      this.provider = new ProxyProvider(this.graphProxyUrl);\n      Providers.globalProvider = this.provider;\n    }\n  }\n}\n"]}