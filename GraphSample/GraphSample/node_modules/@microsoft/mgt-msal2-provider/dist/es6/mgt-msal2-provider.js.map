{"version":3,"file":"mgt-msal2-provider.js","sourceRoot":"src/","sources":["mgt-msal2-provider.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { customElement, property } from 'lit-element';\nimport { Providers, LoginType, MgtBaseProvider } from '@microsoft/mgt-element';\nimport { Msal2Config, Msal2Provider, PromptType } from './Msal2Provider';\n/**\n * Authentication Library Provider for Microsoft personal accounts\n *\n * @export\n * @class MgtMsalProvider\n * @extends {MgtBaseProvider}\n */\n@customElement('mgt-msal2-provider')\nexport class MgtMsal2Provider extends MgtBaseProvider {\n  /**\n   * String alphanumerical value relation to a specific user\n   *\n   * @memberof MgtMsalProvider\n   */\n  @property({\n    attribute: 'client-id',\n    type: String\n  })\n  public clientId = '';\n\n  /**\n   * The login type that should be used: popup or redirect\n   *\n   * @memberof MgtMsal2Provider\n   */\n  @property({\n    attribute: 'login-type',\n    type: String\n  })\n  public loginType;\n\n  /**\n   * The authority to use.\n   *\n   * @memberof MgtMsal2Provider\n   */\n  @property() public authority;\n\n  /**\n   * Comma separated list of scopes\n   *\n   * @memberof MgtMsal2Provider\n   */\n  @property({\n    attribute: 'scopes',\n    type: String\n  })\n  public scopes;\n\n  /**\n   * The redirect uri to use\n   *\n   * @memberof MgtMsal2Provider\n   */\n  @property({\n    attribute: 'redirect-uri',\n    type: String\n  })\n  public redirectUri;\n\n  /**\n   * Type of prompt for login\n   *\n   * @memberof MgtMsal2Provider\n   */\n  @property({\n    attribute: 'prompt',\n    type: String\n  })\n  public prompt: string;\n\n  /**\n   * Disables incremental consent\n   *\n   * @memberof MgtMsal2Provider\n   */\n  @property({\n    attribute: 'incremental-consent-disabled',\n    type: Boolean\n  })\n  public isIncrementalConsentDisabled: boolean;\n\n  /**\n   * Gets whether this provider can be used in this environment\n   *\n   * @readonly\n   * @memberof MgtMsal2Provider\n   */\n  public get isAvailable() {\n    return true;\n  }\n\n  /**\n   * method called to initialize the provider. Each derived class should provide their own implementation.\n   *\n   * @protected\n   * @memberof MgtMsal2Provider\n   */\n  protected initializeProvider() {\n    if (this.clientId) {\n      const config: Msal2Config = {\n        clientId: this.clientId\n      };\n\n      if (this.loginType && this.loginType.length > 1) {\n        let loginType: string = this.loginType.toLowerCase();\n        loginType = loginType[0].toUpperCase() + loginType.slice(1);\n        const loginTypeEnum = LoginType[loginType];\n        config.loginType = loginTypeEnum;\n      }\n\n      if (this.authority) {\n        config.authority = this.authority;\n      }\n\n      if (this.scopes) {\n        const scope = this.scopes.split(',');\n        if (scope && scope.length > 0) {\n          config.scopes = scope;\n        }\n      }\n\n      if (this.redirectUri) {\n        config.redirectUri = this.redirectUri;\n      }\n\n      if (this.prompt) {\n        let prompt: string = this.prompt.toUpperCase();\n        const promptEnum = PromptType[prompt];\n        config.prompt = promptEnum;\n      }\n\n      if (this.isIncrementalConsentDisabled) {\n        config.isIncrementalConsentDisabled = true;\n      }\n\n      this.provider = new Msal2Provider(config);\n      Providers.globalProvider = this.provider;\n    }\n  }\n}\n"]}