{"version":3,"file":"graph.files.js","sourceRoot":"src/","sources":["graph/graph.files.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;;;;;;;AAEH,OAAO,EAAa,YAAY,EAAc,iBAAiB,EAAU,UAAU,EAAE,MAAM,wBAAwB,CAAC;AAEpH,OAAO,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,mCAAmC,CAAC;AACjE,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAwC9C;;GAEG;AACH,MAAM,UAAU,eAAe;IAC7B,IAAI,KAAgC,CAAC;IACrC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACpG,KAAK,CAAC,UAAU,EAAE,CAAC;AACrB,CAAC;AAED;;GAEG;AACH,MAAM,CAAC,MAAM,uBAAuB,GAAG,GAAW,EAAE,CAClD,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,IAAI,YAAY,CAAC,MAAM,CAAC,yBAAyB,CAAC;AAEhG;;GAEG;AACH,MAAM,CAAC,MAAM,sBAAsB,GAAG,GAAY,EAAE,CAClD,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,IAAI,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC;AAEvE;;GAEG;AACH,MAAM,CAAC,MAAM,2BAA2B,GAAG,GAAW,EAAE,CACtD,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,IAAI,YAAY,CAAC,MAAM,CAAC,yBAAyB,CAAC;AAEpG;;GAEG;AACH,MAAM,CAAC,MAAM,0BAA0B,GAAG,GAAY,EAAE,CACtD,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,IAAI,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC;AAE3E,MAAM,UAAgB,mBAAmB,CAAC,KAAa,EAAE,QAAgB;;QACvE,iBAAiB;QACjB,IAAI,KAA4B,CAAC;QACjC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAY,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC1F,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,IAAI,UAAU,EAAE;YACd,OAAO,UAAU,CAAC;SACnB;QAED,yBAAyB;QACzB,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,QAAQ,CAAC;QACb,IAAI;YACF,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAEjF,IAAI,sBAAsB,EAAE,EAAE;gBAC5B,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC9D;SACF;QAAC,WAAM,GAAE;QAEV,OAAO,QAAQ,IAAI,IAAI,CAAC;IAC1B,CAAC;CAAA;AAED,yCAAyC;AACzC,MAAM,UAAgB,gBAAgB,CAAC,KAAa,EAAE,OAAe,EAAE,MAAc;;QACnF,MAAM,QAAQ,GAAG,WAAW,OAAO,UAAU,MAAM,EAAE,CAAC;QAEtD,iBAAiB;QACjB,IAAI,KAA4B,CAAC;QACjC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAY,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACzF,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,IAAI,UAAU,EAAE;YACd,OAAO,UAAU,CAAC;SACnB;QAED,yBAAyB;QACzB,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,QAAQ,CAAC;QACb,IAAI;YACF,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAEjF,IAAI,sBAAsB,EAAE,EAAE;gBAC5B,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC9D;SACF;QAAC,WAAM,GAAE;QACV,OAAO,QAAQ,IAAI,IAAI,CAAC;IAC1B,CAAC;CAAA;AAED,2CAA2C;AAC3C,MAAM,UAAgB,kBAAkB,CAAC,KAAa,EAAE,OAAe,EAAE,QAAgB;;QACvF,MAAM,QAAQ,GAAG,WAAW,OAAO,UAAU,QAAQ,EAAE,CAAC;QAExD,iBAAiB;QACjB,IAAI,KAA4B,CAAC;QACjC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAY,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACzF,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,IAAI,UAAU,EAAE;YACd,OAAO,UAAU,CAAC;SACnB;QAED,yBAAyB;QACzB,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,QAAQ,CAAC;QACb,IAAI;YACF,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAEjF,IAAI,sBAAsB,EAAE,EAAE;gBAC5B,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC9D;SACF;QAAC,WAAM,GAAE;QACV,OAAO,QAAQ,IAAI,IAAI,CAAC;IAC1B,CAAC;CAAA;AAED,+CAA+C;AAC/C,MAAM,UAAgB,qBAAqB,CAAC,KAAa,EAAE,OAAe,EAAE,MAAc;;QACxF,MAAM,QAAQ,GAAG,WAAW,OAAO,gBAAgB,MAAM,EAAE,CAAC;QAC5D,iBAAiB;QACjB,IAAI,KAA4B,CAAC;QACjC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAY,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACzF,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,IAAI,UAAU,EAAE;YACd,OAAO,UAAU,CAAC;SACnB;QAED,yBAAyB;QACzB,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,QAAQ,CAAC;QACb,IAAI;YACF,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAEjF,IAAI,sBAAsB,EAAE,EAAE;gBAC5B,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC9D;SACF;QAAC,WAAM,GAAE;QACV,OAAO,QAAQ,IAAI,IAAI,CAAC;IAC1B,CAAC;CAAA;AAED,iDAAiD;AACjD,MAAM,UAAgB,uBAAuB,CAAC,KAAa,EAAE,OAAe,EAAE,QAAgB;;QAC5F,MAAM,QAAQ,GAAG,WAAW,OAAO,gBAAgB,QAAQ,EAAE,CAAC;QAC9D,iBAAiB;QACjB,IAAI,KAA4B,CAAC;QACjC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAY,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACzF,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,IAAI,UAAU,EAAE;YACd,OAAO,UAAU,CAAC;SACnB;QAED,yBAAyB;QACzB,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,QAAQ,CAAC;QACb,IAAI;YACF,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAEjF,IAAI,sBAAsB,EAAE,EAAE;gBAC5B,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC9D;SACF;QAAC,WAAM,GAAE;QACV,OAAO,QAAQ,IAAI,IAAI,CAAC;IAC1B,CAAC;CAAA;AAED,gCAAgC;AAChC,MAAM,UAAgB,kBAAkB,CAAC,KAAa,EAAE,MAAc;;QACpE,MAAM,QAAQ,GAAG,mBAAmB,MAAM,EAAE,CAAC;QAC7C,iBAAiB;QACjB,IAAI,KAA4B,CAAC;QACjC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAY,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACxF,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,IAAI,UAAU,EAAE;YACd,OAAO,UAAU,CAAC;SACnB;QAED,yBAAyB;QACzB,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,QAAQ,CAAC;QACb,IAAI;YACF,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAEjF,IAAI,sBAAsB,EAAE,EAAE;gBAC5B,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC9D;SACF;QAAC,WAAM,GAAE;QACV,OAAO,QAAQ,IAAI,IAAI,CAAC;IAC1B,CAAC;CAAA;AAED,kCAAkC;AAClC,MAAM,UAAgB,oBAAoB,CAAC,KAAa,EAAE,QAAgB;;QACxE,MAAM,QAAQ,GAAG,mBAAmB,QAAQ,EAAE,CAAC;QAC/C,iBAAiB;QACjB,IAAI,KAA4B,CAAC;QACjC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAY,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACxF,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,IAAI,UAAU,EAAE;YACd,OAAO,UAAU,CAAC;SACnB;QAED,yBAAyB;QACzB,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,QAAQ,CAAC;QACb,IAAI;YACF,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAEjF,IAAI,sBAAsB,EAAE,EAAE;gBAC5B,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC9D;SACF;QAAC,WAAM,GAAE;QACV,OAAO,QAAQ,IAAI,IAAI,CAAC;IAC1B,CAAC;CAAA;AAED,6CAA6C;AAC7C,MAAM,UAAgB,oBAAoB,CAAC,KAAa,EAAE,MAAc,EAAE,MAAc;;QACtF,MAAM,QAAQ,GAAG,UAAU,MAAM,gBAAgB,MAAM,EAAE,CAAC;QAC1D,iBAAiB;QACjB,IAAI,KAA4B,CAAC;QACjC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAY,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACxF,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,IAAI,UAAU,EAAE;YACd,OAAO,UAAU,CAAC;SACnB;QAED,yBAAyB;QACzB,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,QAAQ,CAAC;QACb,IAAI;YACF,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAEjF,IAAI,sBAAsB,EAAE,EAAE;gBAC5B,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC9D;SACF;QAAC,WAAM,GAAE;QACV,OAAO,QAAQ,IAAI,IAAI,CAAC;IAC1B,CAAC;CAAA;AAED,+CAA+C;AAC/C,MAAM,UAAgB,sBAAsB,CAAC,KAAa,EAAE,MAAc,EAAE,QAAgB;;QAC1F,MAAM,QAAQ,GAAG,UAAU,MAAM,gBAAgB,QAAQ,EAAE,CAAC;QAC5D,iBAAiB;QACjB,IAAI,KAA4B,CAAC;QACjC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAY,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACxF,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,IAAI,UAAU,EAAE;YACd,OAAO,UAAU,CAAC;SACnB;QAED,yBAAyB;QACzB,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,QAAQ,CAAC;QACb,IAAI;YACF,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAEjF,IAAI,sBAAsB,EAAE,EAAE;gBAC5B,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC9D;SACF;QAAC,WAAM,GAAE;QACV,OAAO,QAAQ,IAAI,IAAI,CAAC;IAC1B,CAAC;CAAA;AAED,iEAAiE;AACjE,MAAM,UAAgB,oBAAoB,CACxC,KAAa,EACb,MAAc,EACd,MAAc,EACd,MAAc;;QAEd,MAAM,QAAQ,GAAG,UAAU,MAAM,UAAU,MAAM,UAAU,MAAM,YAAY,CAAC;QAC9E,iBAAiB;QACjB,IAAI,KAA4B,CAAC;QACjC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAY,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACxF,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,IAAI,UAAU,EAAE;YACd,OAAO,UAAU,CAAC;SACnB;QAED,yBAAyB;QACzB,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,QAAQ,CAAC;QACb,IAAI;YACF,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAEjF,IAAI,sBAAsB,EAAE,EAAE;gBAC5B,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC9D;SACF;QAAC,WAAM,GAAE;QACV,OAAO,QAAQ,IAAI,IAAI,CAAC;IAC1B,CAAC;CAAA;AAED,6CAA6C;AAC7C,MAAM,UAAgB,oBAAoB,CAAC,KAAa,EAAE,MAAc,EAAE,MAAc;;QACtF,MAAM,QAAQ,GAAG,UAAU,MAAM,gBAAgB,MAAM,EAAE,CAAC;QAC1D,iBAAiB;QACjB,IAAI,KAA4B,CAAC;QACjC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAY,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACxF,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,IAAI,UAAU,EAAE;YACd,OAAO,UAAU,CAAC;SACnB;QAED,yBAAyB;QACzB,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,QAAQ,CAAC;QACb,IAAI;YACF,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAEjF,IAAI,sBAAsB,EAAE,EAAE;gBAC5B,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC9D;SACF;QAAC,WAAM,GAAE;QACV,OAAO,QAAQ,IAAI,IAAI,CAAC;IAC1B,CAAC;CAAA;AAED,+CAA+C;AAC/C,MAAM,UAAgB,sBAAsB,CAAC,KAAa,EAAE,MAAc,EAAE,QAAgB;;QAC1F,MAAM,QAAQ,GAAG,UAAU,MAAM,gBAAgB,QAAQ,EAAE,CAAC;QAC5D,iBAAiB;QACjB,IAAI,KAA4B,CAAC;QACjC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAY,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACxF,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,IAAI,UAAU,EAAE;YACd,OAAO,UAAU,CAAC;SACnB;QAED,yBAAyB;QACzB,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,QAAQ,CAAC;QACb,IAAI;YACF,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAEjF,IAAI,sBAAsB,EAAE,EAAE;gBAC5B,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC9D;SACF;QAAC,WAAM,GAAE;QACV,OAAO,QAAQ,IAAI,IAAI,CAAC;IAC1B,CAAC;CAAA;AAED,0CAA0C;AAC1C,sCAAsC;AACtC,wCAAwC;AACxC,MAAM,UAAgB,0BAA0B,CAAC,KAAa,EAAE,WAAmB,EAAE,EAAU;;QAC7F,MAAM,QAAQ,GAAG,gBAAgB,WAAW,IAAI,EAAE,WAAW,CAAC;QAC9D,iBAAiB;QACjB,IAAI,KAA4B,CAAC;QACjC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAY,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC3F,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,IAAI,UAAU,EAAE;YACd,OAAO,UAAU,CAAC;SACnB;QAED,yBAAyB;QACzB,MAAM,MAAM,GAAG,gBAAgB,CAAC;QAChC,IAAI,QAAQ,CAAC;QACb,IAAI;YACF,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAEjF,IAAI,sBAAsB,EAAE,EAAE;gBAC5B,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC9D;SACF;QAAC,WAAM,GAAE;QACV,OAAO,QAAQ,IAAI,IAAI,CAAC;IAC1B,CAAC;CAAA;AAED,2FAA2F;AAC3F,MAAM,UAAgB,4BAA4B,CAChD,KAAa,EACb,MAAc,EACd,WAAmB,EACnB,EAAU;;QAEV,MAAM,QAAQ,GAAG,UAAU,MAAM,aAAa,WAAW,IAAI,EAAE,WAAW,CAAC;QAC3E,iBAAiB;QACjB,IAAI,KAA4B,CAAC;QACjC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAY,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC3F,MAAM,UAAU,GAAG,MAAM,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,IAAI,UAAU,EAAE;YACd,OAAO,UAAU,CAAC;SACnB;QAED,yBAAyB;QACzB,MAAM,MAAM,GAAG,gBAAgB,CAAC;QAChC,IAAI,QAAQ,CAAC;QACb,IAAI;YACF,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAEjF,IAAI,sBAAsB,EAAE,EAAE;gBAC5B,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC9D;SACF;QAAC,WAAM,GAAE;QACV,OAAO,QAAQ,IAAI,IAAI,CAAC;IAC1B,CAAC;CAAA;AAED,8BAA8B;AAC9B,MAAM,UAAgB,gBAAgB,CAAC,KAAa,EAAE,GAAY;;QAChE,MAAM,QAAQ,GAAG,yBAAyB,CAAC;QAC3C,IAAI,iBAAiB,CAAC;QAEtB,kCAAkC;QAClC,IAAI,KAAgC,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;QACtD,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5E,MAAM,QAAQ,GAAG,MAAM,oBAAoB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QACzE,IAAI,QAAQ,EAAE;YACZ,iBAAiB,GAAG,MAAM,6BAA6B,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAElG,OAAO,iBAAiB,CAAC;SAC1B;QAED,kCAAkC;QAClC,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,OAAO,CAAC;QACZ,IAAI;YACF,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACpE,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;YACD,iBAAiB,GAAG,MAAM,+BAA+B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAE1E,IAAI,0BAA0B,EAAE,EAAE;gBAChC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC;aACrG;SACF;QAAC,WAAM,GAAE;QACV,OAAO,iBAAiB,IAAI,IAAI,CAAC;IACnC,CAAC;CAAA;AAED,kDAAkD;AAClD,MAAM,UAAgB,yBAAyB,CAC7C,KAAa,EACb,OAAe,EACf,MAAc,EACd,GAAY;;QAEZ,MAAM,QAAQ,GAAG,WAAW,OAAO,UAAU,MAAM,WAAW,CAAC;QAC/D,IAAI,iBAAiB,CAAC;QAEtB,kCAAkC;QAClC,IAAI,KAAgC,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;QACtD,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5E,MAAM,QAAQ,GAAG,MAAM,oBAAoB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QACzE,IAAI,QAAQ,EAAE;YACZ,iBAAiB,GAAG,MAAM,6BAA6B,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAElG,OAAO,iBAAiB,CAAC;SAC1B;QAED,kCAAkC;QAClC,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,OAAO,CAAC;QACZ,IAAI;YACF,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACpE,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;YACD,iBAAiB,GAAG,MAAM,+BAA+B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAE1E,IAAI,0BAA0B,EAAE,EAAE;gBAChC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC;aACrG;SACF;QAAC,WAAM,GAAE;QACV,OAAO,iBAAiB,IAAI,IAAI,CAAC;IACnC,CAAC;CAAA;AAED,qDAAqD;AACrD,MAAM,UAAgB,2BAA2B,CAC/C,KAAa,EACb,OAAe,EACf,QAAgB,EAChB,GAAY;;QAEZ,MAAM,QAAQ,GAAG,WAAW,OAAO,UAAU,QAAQ,YAAY,CAAC;QAClE,IAAI,iBAAiB,CAAC;QAEtB,kCAAkC;QAClC,IAAI,KAAgC,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;QACtD,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5E,MAAM,QAAQ,GAAG,MAAM,oBAAoB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QACzE,IAAI,QAAQ,EAAE;YACZ,iBAAiB,GAAG,MAAM,6BAA6B,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAElG,OAAO,iBAAiB,CAAC;SAC1B;QAED,kCAAkC;QAClC,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,OAAO,CAAC;QACZ,IAAI;YACF,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACpE,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;YACD,iBAAiB,GAAG,MAAM,+BAA+B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAE1E,IAAI,0BAA0B,EAAE,EAAE;gBAChC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC;aACrG;SACF;QAAC,WAAM,GAAE;QACV,OAAO,iBAAiB,IAAI,IAAI,CAAC;IACnC,CAAC;CAAA;AAED,wDAAwD;AACxD,MAAM,UAAgB,yBAAyB,CAC7C,KAAa,EACb,OAAe,EACf,MAAc,EACd,GAAY;;QAEZ,MAAM,QAAQ,GAAG,WAAW,OAAO,gBAAgB,MAAM,WAAW,CAAC;QACrE,IAAI,iBAAiB,CAAC;QAEtB,kCAAkC;QAClC,IAAI,KAAgC,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;QACtD,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5E,MAAM,QAAQ,GAAG,MAAM,oBAAoB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QACzE,IAAI,QAAQ,EAAE;YACZ,iBAAiB,GAAG,MAAM,6BAA6B,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAElG,OAAO,iBAAiB,CAAC;SAC1B;QAED,kCAAkC;QAClC,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,OAAO,CAAC;QACZ,IAAI;YACF,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACpE,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;YACD,iBAAiB,GAAG,MAAM,+BAA+B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAE1E,IAAI,0BAA0B,EAAE,EAAE;gBAChC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC;aACrG;SACF;QAAC,WAAM,GAAE;QACV,OAAO,iBAAiB,IAAI,IAAI,CAAC;IACnC,CAAC;CAAA;AAED,2DAA2D;AAC3D,MAAM,UAAgB,2BAA2B,CAC/C,KAAa,EACb,OAAe,EACf,QAAgB,EAChB,GAAY;;QAEZ,MAAM,QAAQ,GAAG,WAAW,OAAO,gBAAgB,QAAQ,YAAY,CAAC;QACxE,IAAI,iBAAiB,CAAC;QAEtB,kCAAkC;QAClC,IAAI,KAAgC,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;QACtD,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5E,MAAM,QAAQ,GAAG,MAAM,oBAAoB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QACzE,IAAI,QAAQ,EAAE;YACZ,iBAAiB,GAAG,MAAM,6BAA6B,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAElG,OAAO,iBAAiB,CAAC;SAC1B;QAED,kCAAkC;QAClC,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,OAAO,CAAC;QACZ,IAAI;YACF,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACpE,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;YACD,iBAAiB,GAAG,MAAM,+BAA+B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAE1E,IAAI,0BAA0B,EAAE,EAAE;gBAChC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC;aACrG;SACF;QAAC,WAAM,GAAE;QACV,OAAO,iBAAiB,IAAI,IAAI,CAAC;IACnC,CAAC;CAAA;AAED,yCAAyC;AACzC,MAAM,UAAgB,oBAAoB,CACxC,KAAa,EACb,MAAc,EACd,GAAY;;QAEZ,MAAM,QAAQ,GAAG,mBAAmB,MAAM,WAAW,CAAC;QACtD,IAAI,iBAAiB,CAAC;QAEtB,kCAAkC;QAClC,IAAI,KAAgC,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;QACtD,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5E,MAAM,QAAQ,GAAG,MAAM,oBAAoB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QACzE,IAAI,QAAQ,EAAE;YACZ,iBAAiB,GAAG,MAAM,6BAA6B,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAElG,OAAO,iBAAiB,CAAC;SAC1B;QAED,kCAAkC;QAClC,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,OAAO,CAAC;QACZ,IAAI;YACF,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACpE,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;YACD,iBAAiB,GAAG,MAAM,+BAA+B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAE1E,IAAI,0BAA0B,EAAE,EAAE;gBAChC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC;aACrG;SACF;QAAC,WAAM,GAAE;QACV,OAAO,iBAAiB,IAAI,IAAI,CAAC;IACnC,CAAC;CAAA;AAED,4CAA4C;AAC5C,MAAM,UAAgB,sBAAsB,CAC1C,KAAa,EACb,QAAgB,EAChB,GAAY;;QAEZ,MAAM,QAAQ,GAAG,mBAAmB,QAAQ,YAAY,CAAC;QACzD,IAAI,iBAAiB,CAAC;QAEtB,kCAAkC;QAClC,IAAI,KAAgC,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;QACtD,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5E,MAAM,QAAQ,GAAG,MAAM,oBAAoB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QACzE,IAAI,QAAQ,EAAE;YACZ,iBAAiB,GAAG,MAAM,6BAA6B,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAElG,OAAO,iBAAiB,CAAC;SAC1B;QAED,kCAAkC;QAClC,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,OAAO,CAAC;QACZ,IAAI;YACF,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACpE,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;YACD,iBAAiB,GAAG,MAAM,+BAA+B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAE1E,IAAI,0BAA0B,EAAE,EAAE;gBAChC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC;aACrG;SACF;QAAC,WAAM,GAAE;QACV,OAAO,iBAAiB,IAAI,IAAI,CAAC;IACnC,CAAC;CAAA;AAED,sDAAsD;AACtD,MAAM,UAAgB,wBAAwB,CAC5C,KAAa,EACb,MAAc,EACd,MAAc,EACd,GAAY;;QAEZ,MAAM,QAAQ,GAAG,UAAU,MAAM,gBAAgB,MAAM,WAAW,CAAC;QACnE,IAAI,iBAAiB,CAAC;QAEtB,kCAAkC;QAClC,IAAI,KAAgC,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;QACtD,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5E,MAAM,QAAQ,GAAG,MAAM,oBAAoB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QACzE,IAAI,QAAQ,EAAE;YACZ,iBAAiB,GAAG,MAAM,6BAA6B,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAElG,OAAO,iBAAiB,CAAC;SAC1B;QAED,kCAAkC;QAClC,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,OAAO,CAAC;QACZ,IAAI;YACF,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACpE,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;YACD,iBAAiB,GAAG,MAAM,+BAA+B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAE1E,IAAI,0BAA0B,EAAE,EAAE;gBAChC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC;aACrG;SACF;QAAC,WAAM,GAAE;QACV,OAAO,iBAAiB,IAAI,IAAI,CAAC;IACnC,CAAC;CAAA;AAED,yDAAyD;AACzD,MAAM,UAAgB,0BAA0B,CAC9C,KAAa,EACb,MAAc,EACd,QAAgB,EAChB,GAAY;;QAEZ,MAAM,QAAQ,GAAG,UAAU,MAAM,gBAAgB,QAAQ,YAAY,CAAC;QACtE,IAAI,iBAAiB,CAAC;QAEtB,kCAAkC;QAClC,IAAI,KAAgC,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;QACtD,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5E,MAAM,QAAQ,GAAG,MAAM,oBAAoB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QACzE,IAAI,QAAQ,EAAE;YACZ,iBAAiB,GAAG,MAAM,6BAA6B,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAElG,OAAO,iBAAiB,CAAC;SAC1B;QAED,kCAAkC;QAClC,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,OAAO,CAAC;QACZ,IAAI;YACF,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACpE,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;YACD,iBAAiB,GAAG,MAAM,+BAA+B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAE1E,IAAI,0BAA0B,EAAE,EAAE;gBAChC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC;aACrG;SACF;QAAC,WAAM,GAAE;QACV,OAAO,iBAAiB,IAAI,IAAI,CAAC;IACnC,CAAC;CAAA;AAED,sDAAsD;AACtD,MAAM,UAAgB,wBAAwB,CAC5C,KAAa,EACb,MAAc,EACd,MAAc,EACd,GAAY;;QAEZ,MAAM,QAAQ,GAAG,UAAU,MAAM,gBAAgB,MAAM,WAAW,CAAC;QACnE,IAAI,iBAAiB,CAAC;QAEtB,kCAAkC;QAClC,IAAI,KAAgC,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;QACtD,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5E,MAAM,QAAQ,GAAG,MAAM,oBAAoB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QACzE,IAAI,QAAQ,EAAE;YACZ,iBAAiB,GAAG,MAAM,6BAA6B,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAElG,OAAO,iBAAiB,CAAC;SAC1B;QAED,kCAAkC;QAClC,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,OAAO,CAAC;QACZ,IAAI;YACF,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACpE,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;YACD,iBAAiB,GAAG,MAAM,+BAA+B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAE1E,IAAI,0BAA0B,EAAE,EAAE;gBAChC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC;aACrG;SACF;QAAC,WAAM,GAAE;QACV,OAAO,iBAAiB,IAAI,IAAI,CAAC;IACnC,CAAC;CAAA;AAED,yDAAyD;AACzD,MAAM,UAAgB,0BAA0B,CAC9C,KAAa,EACb,MAAc,EACd,QAAgB,EAChB,GAAY;;QAEZ,MAAM,QAAQ,GAAG,UAAU,MAAM,gBAAgB,QAAQ,YAAY,CAAC;QACtE,IAAI,iBAAiB,CAAC;QAEtB,kCAAkC;QAClC,IAAI,KAAgC,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;QACtD,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5E,MAAM,QAAQ,GAAG,MAAM,oBAAoB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QACzE,IAAI,QAAQ,EAAE;YACZ,iBAAiB,GAAG,MAAM,6BAA6B,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAElG,OAAO,iBAAiB,CAAC;SAC1B;QAED,kCAAkC;QAClC,MAAM,MAAM,GAAG,YAAY,CAAC;QAC5B,IAAI,OAAO,CAAC;QACZ,IAAI;YACF,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YACpE,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;YACD,iBAAiB,GAAG,MAAM,+BAA+B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAE1E,IAAI,0BAA0B,EAAE,EAAE;gBAChC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC;aACrG;SACF;QAAC,WAAM,GAAE;QACV,OAAO,iBAAiB,IAAI,IAAI,CAAC;IACnC,CAAC;CAAA;AAED,MAAM,UAAgB,2BAA2B,CAC/C,KAAa,EACb,SAAiB,EACjB,GAAY;;QAEZ,IAAI,iBAAiB,CAAC;QAEtB,kCAAkC;QAClC,IAAI,KAAgC,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;QACtD,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5E,MAAM,QAAQ,GAAG,MAAM,oBAAoB,CAAC,KAAK,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;QAC1E,IAAI,QAAQ,EAAE;YACZ,iBAAiB,GAAG,MAAM,6BAA6B,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAElG,OAAO,iBAAiB,CAAC;SAC1B;QAED,kCAAkC;QAClC,MAAM,MAAM,GAAG,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;QAChD,IAAI,OAAO,CAAC;QAEZ,IAAI;YACF,OAAO,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;YAC9E,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;YACD,iBAAiB,GAAG,MAAM,+BAA+B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAE1E,IAAI,0BAA0B,EAAE,EAAE;gBAChC,KAAK,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,KAAK,EAAE,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC;aACtG;SACF;QAAC,WAAM,GAAE;QACV,OAAO,iBAAiB,IAAI,IAAI,CAAC;IACnC,CAAC;CAAA;AAED,8CAA8C;AAC9C,MAAM,UAAgB,kBAAkB,CAAC,KAAa,EAAE,WAAmB;;QACzE,MAAM,QAAQ,GAAG,gBAAgB,WAAW,EAAE,CAAC;QAE/C,+BAA+B;QAC/B,IAAI,KAAgC,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC;QAC7D,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5E,MAAM,QAAQ,GAAG,MAAM,oBAAoB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QACzE,IAAI,QAAQ,EAAE;YACZ,OAAO,QAAQ,CAAC,KAAoB,CAAC;SACtC;QAED,+BAA+B;QAC/B,MAAM,MAAM,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAClC,IAAI,eAAe,CAAC;QACpB,IAAI;YACF,eAAe,GAAG,MAAM,KAAK;iBAC1B,GAAG,CAAC,QAAQ,CAAC;iBACb,MAAM,CAAC,uDAAuD,CAAC;iBAC/D,iBAAiB,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,CAAC;iBACxC,GAAG,EAAE,CAAC;SACV;QAAC,WAAM,GAAE;QAEV,MAAM,MAAM,GAAG,MAAM,uBAAuB,CAAC,KAAK,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;QAC7E,IAAI,0BAA0B,EAAE,EAAE;YAChC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;SAC7C;QAED,OAAO,MAAM,IAAI,IAAI,CAAC;IACxB,CAAC;CAAA;AAED,0EAA0E;AAC1E,MAAM,UAAgB,oBAAoB,CAAC,KAAa,EAAE,MAAc,EAAE,WAAmB;;QAC3F,IAAI,QAAQ,CAAC;QACb,IAAI,MAAM,CAAC;QAEX,IAAI,WAAW,KAAK,QAAQ,EAAE;YAC5B,QAAQ,GAAG,qBAAqB,CAAC;YACjC,MAAM,GAAG,gCAAgC,MAAM,iEAAiE,CAAC;SAClH;aAAM;YACL,QAAQ,GAAG,UAAU,MAAM,aAAa,WAAW,EAAE,CAAC;YACtD,MAAM,GAAG,uDAAuD,CAAC;SAClE;QAED,MAAM,GAAG,GAAG,GAAG,QAAQ,YAAY,MAAM,EAAE,CAAC;QAE5C,+BAA+B;QAC/B,IAAI,KAAgC,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC;QAC7D,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5E,MAAM,QAAQ,GAAG,MAAM,oBAAoB,CAAC,KAAK,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;QACpE,IAAI,QAAQ,EAAE;YACZ,OAAO,QAAQ,CAAC,KAAoB,CAAC;SACtC;QAED,+BAA+B;QAC/B,MAAM,MAAM,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAClC,IAAI,eAAe,CAAC;QAEpB,IAAI;YACF,eAAe,GAAG,MAAM,KAAK;iBAC1B,GAAG,CAAC,QAAQ,CAAC;iBACb,MAAM,CAAC,MAAM,CAAC;iBACd,iBAAiB,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,CAAC;iBACxC,GAAG,EAAE,CAAC;SACV;QAAC,WAAM,GAAE;QAEV,MAAM,MAAM,GAAG,MAAM,uBAAuB,CAAC,KAAK,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;QAC7E,IAAI,0BAA0B,EAAE,EAAE;YAChC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;SAC7C;QAED,OAAO,MAAM,IAAI,IAAI,CAAC;IACxB,CAAC;CAAA;AAED,MAAM,UAAgB,iBAAiB,CAAC,KAAa,EAAE,WAAqB;;QAC1E,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5C,OAAO,EAAE,CAAC;SACX;QAED,MAAM,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAClC,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,MAAM,MAAM,GAAG,CAAC,YAAY,CAAC,CAAC;QAC9B,IAAI,KAA4B,CAAC;QACjC,IAAI,UAAqB,CAAC;QAC1B,IAAI,sBAAsB,EAAE,EAAE;YAC5B,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAY,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC3F;QAED,KAAK,MAAM,SAAS,IAAI,WAAW,EAAE;YACnC,IAAI,sBAAsB,EAAE,EAAE;gBAC5B,UAAU,GAAG,MAAM,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO;aACtD;YAED,IAAI,sBAAsB,EAAE,IAAI,UAAU,IAAI,uBAAuB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,UAAU,CAAC,UAAU,EAAE;gBAC5G,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;aACzC;iBAAM,IAAI,SAAS,KAAK,EAAE,EAAE;gBAC3B,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;aACzC;SACF;QAED,IAAI;YACF,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,UAAU,EAAE,CAAC;YAE3C,KAAK,MAAM,SAAS,IAAI,WAAW,EAAE;gBACnC,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBAC1C,IAAI,QAAQ,IAAI,QAAQ,CAAC,OAAO,EAAE;oBAChC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;oBAC7B,IAAI,sBAAsB,EAAE,EAAE;wBAC5B,KAAK,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;qBACvE;iBACF;aACF;YAED,OAAO,KAAK,CAAC;SACd;QAAC,OAAO,CAAC,EAAE;YACV,IAAI;gBACF,OAAO,OAAO,CAAC,GAAG,CAChB,WAAW;qBACR,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,IAAI,SAAS,KAAK,EAAE,CAAC;qBAClD,GAAG,CAAC,CAAM,SAAS,EAAC,EAAE;oBACrB,MAAM,IAAI,GAAG,MAAM,mBAAmB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;oBACzD,IAAI,IAAI,EAAE;wBACR,IAAI,sBAAsB,EAAE,EAAE;4BAC5B,KAAK,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;yBAC3D;wBACD,OAAO,IAAI,CAAC;qBACb;gBACH,CAAC,CAAA,CAAC,CACL,CAAC;aACH;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,EAAE,CAAC;aACX;SACF;IACH,CAAC;CAAA;AAED,SAAe,uBAAuB,CAAC,KAAa,EAAE,eAAe,EAAE,MAAM;;QAC3E,IAAI,CAAC,eAAe,EAAE;YACpB,OAAO,EAAE,CAAC;SACX;QAED,MAAM,YAAY,GAAG,eAAe,CAAC,KAAK,CAAC;QAC3C,MAAM,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAClC,MAAM,UAAU,GAAG,EAAE,CAAC;QACtB,KAAK,MAAM,IAAI,IAAI,YAAY,EAAE;YAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC;YAC9C,IAAI,WAAW,KAAK,EAAE,EAAE;gBACtB,KAAK,CAAC,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;aAC7C;SACF;QAED,IAAI;YACF,MAAM,kBAAkB,GAAG,MAAM,KAAK,CAAC,UAAU,EAAE,CAAC;YAEpD,KAAK,MAAM,IAAI,IAAI,YAAY,EAAE;gBAC/B,MAAM,iBAAiB,GAAG,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;gBAC5E,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,OAAO,EAAE;oBAClD,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;iBAC5C;aACF;YACD,OAAO,UAAU,CAAC;SACnB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI;gBACF,OAAO,OAAO,CAAC,GAAG,CAChB,YAAY;qBACT,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,iBAAiB,CAAC,EAAE,IAAI,WAAW,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,CAAC;qBAClG,GAAG,CAAC,CAAM,WAAW,EAAC,EAAE;oBACvB,MAAM,kBAAkB,GAAG,MAAM,KAAK;yBACnC,GAAG,CAAC,WAAW,CAAC,iBAAiB,CAAC,EAAE,CAAC;yBACrC,iBAAiB,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,CAAC;yBACxC,GAAG,EAAE,CAAC;oBACT,IAAI,kBAAkB,IAAI,kBAAkB,CAAC,MAAM,EAAE;wBACnD,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;qBACtC;gBACH,CAAC,CAAA,CAAC,CACL,CAAC;aACH;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,EAAE,CAAC;aACX;SACF;IACH,CAAC;CAAA;AAED,SAAe,+BAA+B,CAAC,KAAa,EAAE,OAAO;;QACnE,OAAO,iBAAiB,CAAC,MAAM,CAAY,KAAK,EAAE,OAAO,CAAC,CAAC;IAC7D,CAAC;CAAA;AAED,SAAe,6BAA6B,CAAC,KAAa,EAAE,KAAK,EAAE,QAAQ;;QACzE,OAAO,iBAAiB,CAAC,eAAe,CAAY,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC9E,CAAC;CAAA;AAED,SAAe,gBAAgB,CAAC,KAA4B,EAAE,GAAW;;QACvE,IAAI,sBAAsB,EAAE,EAAE;YAC5B,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAEvC,IAAI,IAAI,IAAI,uBAAuB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE;gBACpE,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACzC,OAAO,UAAU,CAAC;aACnB;SACF;QAED,OAAO,IAAI,CAAC;IACd,CAAC;CAAA;AAED,MAAM,UAAgB,oBAAoB,CAAC,KAAgC,EAAE,KAAa,EAAE,GAAW;;QACrG,IAAI,CAAC,KAAK,EAAE;YACV,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;SACxE;QAED,IAAI,0BAA0B,EAAE,EAAE;YAChC,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAE3C,IAAI,QAAQ,IAAI,2BAA2B,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,UAAU,EAAE;gBAChF,OAAO,QAAQ,CAAC;aACjB;SACF;QAED,OAAO,IAAI,CAAC;IACd,CAAC;CAAA;AAED,iFAAiF;AACjF,MAAM,UAAgB,qCAAqC,CAAC,iBAAiB;;QAC3E,MAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC;QAE7C,IAAI,iBAAiB,CAAC,OAAO,EAAE;YAC7B,MAAM,iBAAiB,CAAC,IAAI,EAAE,CAAC;SAChC;QACD,IAAI,0BAA0B,EAAE,EAAE;YAChC,IAAI,KAAgC,CAAC;YACrC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAgB,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAEpG,4GAA4G;YAC5G,MAAM,GAAG,GAAG,iDAAiD,CAAC;YAC9D,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACnC,MAAM,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAEvB,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC;SAChG;IACH,CAAC;CAAA;AAED;;;;;;GAMG;AACH,MAAM,UAAgB,oBAAoB,CAAC,KAAa,EAAE,QAAgB,EAAE,MAAgB;;QAC1F,IAAI;YACF,MAAM,QAAQ,GAAG,CAAC,MAAM,KAAK;iBAC1B,GAAG,CAAC,QAAQ,CAAC;iBACb,YAAY,CAAC,YAAY,CAAC,GAAG,CAAC;iBAC9B,iBAAiB,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,CAAC;iBACxC,GAAG,EAAE,CAAa,CAAC;YAEtB,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC3B,mDAAmD;gBACnD,oCAAoC;gBACpC,4CAA4C;gBAC5C,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;aACxC;iBAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;gBACvB,OAAO,IAAI,CAAC;aACb;YAED,MAAM,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC1C,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;YACvD,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;SAClC;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,IAAI,CAAC;SACb;IACH,CAAC;CAAA;AAED;;;;;;GAMG;AACH,MAAM,UAAgB,YAAY,CAAC,KAAa,EAAE,QAAgB;;QAChE,IAAI;YACF,yBAAyB;YACzB,MAAM,MAAM,GAAG,YAAY,CAAC;YAC5B,IAAI,QAAQ,CAAC;YACb,IAAI;gBACF,QAAQ,GAAG,MAAM,KAAK;qBACnB,GAAG,CAAC,QAAQ,CAAC;qBACb,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;qBACrC,GAAG,EAAE;qBACL,KAAK,CAAC,KAAK,CAAC,EAAE;oBACb,OAAO,IAAI,CAAC;gBACd,CAAC,CAAC,CAAC;aACN;YAAC,WAAM,GAAE;YAEV,OAAO,QAAQ,IAAI,IAAI,CAAC;SACzB;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,IAAI,CAAC;SACb;IACH,CAAC;CAAA;AAED;;;;;;GAMG;AACH,MAAM,UAAgB,gBAAgB,CACpC,KAAa,EACb,QAAgB,EAChB,gBAAwB;;QAExB,IAAI;YACF,yBAAyB;YACzB,MAAM,MAAM,GAAG,iBAAiB,CAAC;YACjC,MAAM,cAAc,GAAG;gBACrB,IAAI,EAAE;oBACJ,mCAAmC,EAAE,gBAAgB,KAAK,CAAC,IAAI,gBAAgB,KAAK,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;iBAChH;aACF,CAAC;YACF,IAAI,QAAQ,CAAC;YACb,IAAI;gBACF,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC;aACjH;YAAC,WAAM,GAAE;YAEV,OAAO,QAAQ,IAAI,IAAI,CAAC;SACzB;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,IAAI,CAAC;SACb;IACH,CAAC;CAAA;AAED;;;;;;;GAOG;AACH,MAAM,UAAgB,cAAc,CAClC,KAAa,EACb,QAAgB,EAChB,aAAqB,EACrB,YAAoB,EACpB,IAAU;;QAEV,IAAI;YACF,yBAAyB;YACzB,MAAM,MAAM,GAAG,iBAAiB,CAAC;YACjC,MAAM,MAAM,GAAG;gBACb,gBAAgB,EAAE,aAAa;gBAC/B,eAAe,EAAE,YAAY;aAC9B,CAAC;YACF,IAAI,QAAQ,CAAC;YACb,IAAI;gBACF,QAAQ,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;aAC7G;YAAC,WAAM,GAAE;YAEV,OAAO,QAAQ,IAAI,IAAI,CAAC;SACzB;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,IAAI,CAAC;SACb;IACH,CAAC;CAAA;AAED;;;;;;;GAOG;AACH,MAAM,UAAgB,eAAe,CAAC,KAAa,EAAE,QAAgB,EAAE,IAAU;;QAC/E,IAAI;YACF,yBAAyB;YACzB,MAAM,MAAM,GAAG,iBAAiB,CAAC;YACjC,IAAI,QAAQ,CAAC;YACb,IAAI;gBACF,QAAQ,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;aAC7F;YAAC,WAAM,GAAE;YAEV,OAAO,QAAQ,IAAI,IAAI,CAAC;SACzB;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,IAAI,CAAC;SACb;IACH,CAAC;CAAA;AAED;;;;;;GAMG;AACH,MAAM,UAAgB,iBAAiB,CAAC,KAAa,EAAE,QAAgB;;QACrE,IAAI;YACF,yBAAyB;YACzB,MAAM,MAAM,GAAG,iBAAiB,CAAC;YACjC,IAAI,QAAQ,CAAC;YACb,IAAI;gBACF,QAAQ,GAAG,MAAM,KAAK,CAAC,MAAM;qBAC1B,GAAG,CAAC,QAAQ,CAAC;qBACb,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;qBACrC,MAAM,CAAC,QAAQ,CAAC,EAAE;oBACjB,OAAO,QAAQ,CAAC;gBAClB,CAAC,CAAC,CAAC;aACN;YAAC,WAAM,GAAE;YAEV,OAAO,QAAQ,IAAI,IAAI,CAAC;SACzB;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,IAAI,CAAC;SACb;IACH,CAAC;CAAA","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { CacheItem, CacheService, CacheStore, GraphPageIterator, IGraph, prepScopes } from '@microsoft/mgt-element';\nimport { DriveItem, UploadSession } from '@microsoft/microsoft-graph-types';\nimport { schemas } from './cacheStores';\nimport { ResponseType } from '@microsoft/microsoft-graph-client';\nimport { blobToBase64 } from '../utils/Utils';\n\n/**\n * Object to be stored in cache\n */\ninterface CacheFile extends CacheItem {\n  /**\n   * stringified json representing a file\n   */\n  file?: string;\n}\n\n/**\n * Object to be stored in cache\n */\ninterface CacheFileList extends CacheItem {\n  /**\n   * stringified json representing a list of files\n   */\n  files?: string[];\n  /**\n   * nextLink string to get next page\n   */\n  nextLink?: string;\n}\n\n/**\n * document thumbnail object stored in cache\n */\nexport interface CacheThumbnail extends CacheItem {\n  /**\n   * tag associated with thumbnail\n   */\n  eTag?: string;\n  /**\n   * document thumbnail\n   */\n  thumbnail?: string;\n}\n\n/**\n * Clear Cache of FileList\n */\nexport function clearFilesCache() {\n  let cache: CacheStore<CacheFileList>;\n  cache = CacheService.getCache<CacheFileList>(schemas.fileLists, schemas.fileLists.stores.fileLists);\n  cache.clearStore();\n}\n\n/**\n * Defines the time it takes for objects in the cache to expire\n */\nexport const getFileInvalidationTime = (): number =>\n  CacheService.config.files.invalidationPeriod || CacheService.config.defaultInvalidationPeriod;\n\n/**\n * Whether or not the cache is enabled\n */\nexport const getIsFilesCacheEnabled = (): boolean =>\n  CacheService.config.files.isEnabled && CacheService.config.isEnabled;\n\n/**\n * Defines the time it takes for objects in the cache to expire\n */\nexport const getFileListInvalidationTime = (): number =>\n  CacheService.config.fileLists.invalidationPeriod || CacheService.config.defaultInvalidationPeriod;\n\n/**\n * Whether or not the cache is enabled\n */\nexport const getIsFileListsCacheEnabled = (): boolean =>\n  CacheService.config.fileLists.isEnabled && CacheService.config.isEnabled;\n\nexport async function getDriveItemByQuery(graph: IGraph, resource: string): Promise<DriveItem> {\n  // get from cache\n  let cache: CacheStore<CacheFile>;\n  cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.fileQueries);\n  const cachedFile = await getFileFromCache(cache, resource);\n  if (cachedFile) {\n    return cachedFile;\n  }\n\n  // get from graph request\n  const scopes = 'files.read';\n  let response;\n  try {\n    response = await graph.api(resource).middlewareOptions(prepScopes(scopes)).get();\n\n    if (getIsFilesCacheEnabled()) {\n      cache.putValue(resource, { file: JSON.stringify(response) });\n    }\n  } catch {}\n\n  return response || null;\n}\n\n// GET /drives/{drive-id}/items/{item-id}\nexport async function getDriveItemById(graph: IGraph, driveId: string, itemId: string): Promise<DriveItem> {\n  const endpoint = `/drives/${driveId}/items/${itemId}`;\n\n  // get from cache\n  let cache: CacheStore<CacheFile>;\n  cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.driveFiles);\n  const cachedFile = await getFileFromCache(cache, endpoint);\n  if (cachedFile) {\n    return cachedFile;\n  }\n\n  // get from graph request\n  const scopes = 'files.read';\n  let response;\n  try {\n    response = await graph.api(endpoint).middlewareOptions(prepScopes(scopes)).get();\n\n    if (getIsFilesCacheEnabled()) {\n      cache.putValue(endpoint, { file: JSON.stringify(response) });\n    }\n  } catch {}\n  return response || null;\n}\n\n// GET /drives/{drive-id}/root:/{item-path}\nexport async function getDriveItemByPath(graph: IGraph, driveId: string, itemPath: string): Promise<DriveItem> {\n  const endpoint = `/drives/${driveId}/root:/${itemPath}`;\n\n  // get from cache\n  let cache: CacheStore<CacheFile>;\n  cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.driveFiles);\n  const cachedFile = await getFileFromCache(cache, endpoint);\n  if (cachedFile) {\n    return cachedFile;\n  }\n\n  // get from graph request\n  const scopes = 'files.read';\n  let response;\n  try {\n    response = await graph.api(endpoint).middlewareOptions(prepScopes(scopes)).get();\n\n    if (getIsFilesCacheEnabled()) {\n      cache.putValue(endpoint, { file: JSON.stringify(response) });\n    }\n  } catch {}\n  return response || null;\n}\n\n// GET /groups/{group-id}/drive/items/{item-id}\nexport async function getGroupDriveItemById(graph: IGraph, groupId: string, itemId: string): Promise<DriveItem> {\n  const endpoint = `/groups/${groupId}/drive/items/${itemId}`;\n  // get from cache\n  let cache: CacheStore<CacheFile>;\n  cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.groupFiles);\n  const cachedFile = await getFileFromCache(cache, endpoint);\n  if (cachedFile) {\n    return cachedFile;\n  }\n\n  // get from graph request\n  const scopes = 'files.read';\n  let response;\n  try {\n    response = await graph.api(endpoint).middlewareOptions(prepScopes(scopes)).get();\n\n    if (getIsFilesCacheEnabled()) {\n      cache.putValue(endpoint, { file: JSON.stringify(response) });\n    }\n  } catch {}\n  return response || null;\n}\n\n// GET /groups/{group-id}/drive/root:/{item-path}\nexport async function getGroupDriveItemByPath(graph: IGraph, groupId: string, itemPath: string): Promise<DriveItem> {\n  const endpoint = `/groups/${groupId}/drive/root:/${itemPath}`;\n  // get from cache\n  let cache: CacheStore<CacheFile>;\n  cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.groupFiles);\n  const cachedFile = await getFileFromCache(cache, endpoint);\n  if (cachedFile) {\n    return cachedFile;\n  }\n\n  // get from graph request\n  const scopes = 'files.read';\n  let response;\n  try {\n    response = await graph.api(endpoint).middlewareOptions(prepScopes(scopes)).get();\n\n    if (getIsFilesCacheEnabled()) {\n      cache.putValue(endpoint, { file: JSON.stringify(response) });\n    }\n  } catch {}\n  return response || null;\n}\n\n// GET /me/drive/items/{item-id}\nexport async function getMyDriveItemById(graph: IGraph, itemId: string): Promise<DriveItem> {\n  const endpoint = `/me/drive/items/${itemId}`;\n  // get from cache\n  let cache: CacheStore<CacheFile>;\n  cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.userFiles);\n  const cachedFile = await getFileFromCache(cache, endpoint);\n  if (cachedFile) {\n    return cachedFile;\n  }\n\n  // get from graph request\n  const scopes = 'files.read';\n  let response;\n  try {\n    response = await graph.api(endpoint).middlewareOptions(prepScopes(scopes)).get();\n\n    if (getIsFilesCacheEnabled()) {\n      cache.putValue(endpoint, { file: JSON.stringify(response) });\n    }\n  } catch {}\n  return response || null;\n}\n\n// GET /me/drive/root:/{item-path}\nexport async function getMyDriveItemByPath(graph: IGraph, itemPath: string): Promise<DriveItem> {\n  const endpoint = `/me/drive/root:/${itemPath}`;\n  // get from cache\n  let cache: CacheStore<CacheFile>;\n  cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.userFiles);\n  const cachedFile = await getFileFromCache(cache, endpoint);\n  if (cachedFile) {\n    return cachedFile;\n  }\n\n  // get from graph request\n  const scopes = 'files.read';\n  let response;\n  try {\n    response = await graph.api(endpoint).middlewareOptions(prepScopes(scopes)).get();\n\n    if (getIsFilesCacheEnabled()) {\n      cache.putValue(endpoint, { file: JSON.stringify(response) });\n    }\n  } catch {}\n  return response || null;\n}\n\n// GET /sites/{site-id}/drive/items/{item-id}\nexport async function getSiteDriveItemById(graph: IGraph, siteId: string, itemId: string): Promise<DriveItem> {\n  const endpoint = `/sites/${siteId}/drive/items/${itemId}`;\n  // get from cache\n  let cache: CacheStore<CacheFile>;\n  cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.siteFiles);\n  const cachedFile = await getFileFromCache(cache, endpoint);\n  if (cachedFile) {\n    return cachedFile;\n  }\n\n  // get from graph request\n  const scopes = 'files.read';\n  let response;\n  try {\n    response = await graph.api(endpoint).middlewareOptions(prepScopes(scopes)).get();\n\n    if (getIsFilesCacheEnabled()) {\n      cache.putValue(endpoint, { file: JSON.stringify(response) });\n    }\n  } catch {}\n  return response || null;\n}\n\n// GET /sites/{site-id}/drive/root:/{item-path}\nexport async function getSiteDriveItemByPath(graph: IGraph, siteId: string, itemPath: string): Promise<DriveItem> {\n  const endpoint = `/sites/${siteId}/drive/root:/${itemPath}`;\n  // get from cache\n  let cache: CacheStore<CacheFile>;\n  cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.siteFiles);\n  const cachedFile = await getFileFromCache(cache, endpoint);\n  if (cachedFile) {\n    return cachedFile;\n  }\n\n  // get from graph request\n  const scopes = 'files.read';\n  let response;\n  try {\n    response = await graph.api(endpoint).middlewareOptions(prepScopes(scopes)).get();\n\n    if (getIsFilesCacheEnabled()) {\n      cache.putValue(endpoint, { file: JSON.stringify(response) });\n    }\n  } catch {}\n  return response || null;\n}\n\n// GET /sites/{site-id}/lists/{list-id}/items/{item-id}/driveItem\nexport async function getListDriveItemById(\n  graph: IGraph,\n  siteId: string,\n  listId: string,\n  itemId: string\n): Promise<DriveItem> {\n  const endpoint = `/sites/${siteId}/lists/${listId}/items/${itemId}/driveItem`;\n  // get from cache\n  let cache: CacheStore<CacheFile>;\n  cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.siteFiles);\n  const cachedFile = await getFileFromCache(cache, endpoint);\n  if (cachedFile) {\n    return cachedFile;\n  }\n\n  // get from graph request\n  const scopes = 'files.read';\n  let response;\n  try {\n    response = await graph.api(endpoint).middlewareOptions(prepScopes(scopes)).get();\n\n    if (getIsFilesCacheEnabled()) {\n      cache.putValue(endpoint, { file: JSON.stringify(response) });\n    }\n  } catch {}\n  return response || null;\n}\n\n// GET /users/{user-id}/drive/items/{item-id}\nexport async function getUserDriveItemById(graph: IGraph, userId: string, itemId: string): Promise<DriveItem> {\n  const endpoint = `/users/${userId}/drive/items/${itemId}`;\n  // get from cache\n  let cache: CacheStore<CacheFile>;\n  cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.userFiles);\n  const cachedFile = await getFileFromCache(cache, endpoint);\n  if (cachedFile) {\n    return cachedFile;\n  }\n\n  // get from graph request\n  const scopes = 'files.read';\n  let response;\n  try {\n    response = await graph.api(endpoint).middlewareOptions(prepScopes(scopes)).get();\n\n    if (getIsFilesCacheEnabled()) {\n      cache.putValue(endpoint, { file: JSON.stringify(response) });\n    }\n  } catch {}\n  return response || null;\n}\n\n// GET /users/{user-id}/drive/root:/{item-path}\nexport async function getUserDriveItemByPath(graph: IGraph, userId: string, itemPath: string): Promise<DriveItem> {\n  const endpoint = `/users/${userId}/drive/root:/${itemPath}`;\n  // get from cache\n  let cache: CacheStore<CacheFile>;\n  cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.userFiles);\n  const cachedFile = await getFileFromCache(cache, endpoint);\n  if (cachedFile) {\n    return cachedFile;\n  }\n\n  // get from graph request\n  const scopes = 'files.read';\n  let response;\n  try {\n    response = await graph.api(endpoint).middlewareOptions(prepScopes(scopes)).get();\n\n    if (getIsFilesCacheEnabled()) {\n      cache.putValue(endpoint, { file: JSON.stringify(response) });\n    }\n  } catch {}\n  return response || null;\n}\n\n// GET /me/insights/trending/{id}/resource\n// GET /me/insights/used/{id}/resource\n// GET /me/insights/shared/{id}/resource\nexport async function getMyInsightsDriveItemById(graph: IGraph, insightType: string, id: string): Promise<DriveItem> {\n  const endpoint = `/me/insights/${insightType}/${id}/resource`;\n  // get from cache\n  let cache: CacheStore<CacheFile>;\n  cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.insightFiles);\n  const cachedFile = await getFileFromCache(cache, endpoint);\n  if (cachedFile) {\n    return cachedFile;\n  }\n\n  // get from graph request\n  const scopes = 'sites.read.all';\n  let response;\n  try {\n    response = await graph.api(endpoint).middlewareOptions(prepScopes(scopes)).get();\n\n    if (getIsFilesCacheEnabled()) {\n      cache.putValue(endpoint, { file: JSON.stringify(response) });\n    }\n  } catch {}\n  return response || null;\n}\n\n// GET /users/{id or userPrincipalName}/insights/{trending or used or shared}/{id}/resource\nexport async function getUserInsightsDriveItemById(\n  graph: IGraph,\n  userId: string,\n  insightType: string,\n  id: string\n): Promise<DriveItem> {\n  const endpoint = `/users/${userId}/insights/${insightType}/${id}/resource`;\n  // get from cache\n  let cache: CacheStore<CacheFile>;\n  cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.insightFiles);\n  const cachedFile = await getFileFromCache(cache, endpoint);\n  if (cachedFile) {\n    return cachedFile;\n  }\n\n  // get from graph request\n  const scopes = 'sites.read.all';\n  let response;\n  try {\n    response = await graph.api(endpoint).middlewareOptions(prepScopes(scopes)).get();\n\n    if (getIsFilesCacheEnabled()) {\n      cache.putValue(endpoint, { file: JSON.stringify(response) });\n    }\n  } catch {}\n  return response || null;\n}\n\n// GET /me/drive/root/children\nexport async function getFilesIterator(graph: IGraph, top?: number): Promise<GraphPageIterator<DriveItem>> {\n  const endpoint = '/me/drive/root/children';\n  let filesPageIterator;\n\n  // get iterator from cached values\n  let cache: CacheStore<CacheFileList>;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  cache = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, endpoint);\n  if (fileList) {\n    filesPageIterator = await getFilesPageIteratorFromCache(graph, fileList.files, fileList.nextLink);\n\n    return filesPageIterator;\n  }\n\n  // get iterator from graph request\n  const scopes = 'files.read';\n  let request;\n  try {\n    request = graph.api(endpoint).middlewareOptions(prepScopes(scopes));\n    if (top) {\n      request.top(top);\n    }\n    filesPageIterator = await getFilesPageIteratorFromRequest(graph, request);\n\n    if (getIsFileListsCacheEnabled()) {\n      cache.putValue(endpoint, { files: filesPageIterator.value, nextLink: filesPageIterator._nextLink });\n    }\n  } catch {}\n  return filesPageIterator || null;\n}\n\n// GET /drives/{drive-id}/items/{item-id}/children\nexport async function getDriveFilesByIdIterator(\n  graph: IGraph,\n  driveId: string,\n  itemId: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> {\n  const endpoint = `/drives/${driveId}/items/${itemId}/children`;\n  let filesPageIterator;\n\n  // get iterator from cached values\n  let cache: CacheStore<CacheFileList>;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  cache = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, endpoint);\n  if (fileList) {\n    filesPageIterator = await getFilesPageIteratorFromCache(graph, fileList.files, fileList.nextLink);\n\n    return filesPageIterator;\n  }\n\n  // get iterator from graph request\n  const scopes = 'files.read';\n  let request;\n  try {\n    request = graph.api(endpoint).middlewareOptions(prepScopes(scopes));\n    if (top) {\n      request.top(top);\n    }\n    filesPageIterator = await getFilesPageIteratorFromRequest(graph, request);\n\n    if (getIsFileListsCacheEnabled()) {\n      cache.putValue(endpoint, { files: filesPageIterator.value, nextLink: filesPageIterator._nextLink });\n    }\n  } catch {}\n  return filesPageIterator || null;\n}\n\n// GET /drives/{drive-id}/root:/{item-path}:/children\nexport async function getDriveFilesByPathIterator(\n  graph: IGraph,\n  driveId: string,\n  itemPath: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> {\n  const endpoint = `/drives/${driveId}/root:/${itemPath}:/children`;\n  let filesPageIterator;\n\n  // get iterator from cached values\n  let cache: CacheStore<CacheFileList>;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  cache = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, endpoint);\n  if (fileList) {\n    filesPageIterator = await getFilesPageIteratorFromCache(graph, fileList.files, fileList.nextLink);\n\n    return filesPageIterator;\n  }\n\n  // get iterator from graph request\n  const scopes = 'files.read';\n  let request;\n  try {\n    request = graph.api(endpoint).middlewareOptions(prepScopes(scopes));\n    if (top) {\n      request.top(top);\n    }\n    filesPageIterator = await getFilesPageIteratorFromRequest(graph, request);\n\n    if (getIsFileListsCacheEnabled()) {\n      cache.putValue(endpoint, { files: filesPageIterator.value, nextLink: filesPageIterator._nextLink });\n    }\n  } catch {}\n  return filesPageIterator || null;\n}\n\n// GET /groups/{group-id}/drive/items/{item-id}/children\nexport async function getGroupFilesByIdIterator(\n  graph: IGraph,\n  groupId: string,\n  itemId: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> {\n  const endpoint = `/groups/${groupId}/drive/items/${itemId}/children`;\n  let filesPageIterator;\n\n  // get iterator from cached values\n  let cache: CacheStore<CacheFileList>;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  cache = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, endpoint);\n  if (fileList) {\n    filesPageIterator = await getFilesPageIteratorFromCache(graph, fileList.files, fileList.nextLink);\n\n    return filesPageIterator;\n  }\n\n  // get iterator from graph request\n  const scopes = 'files.read';\n  let request;\n  try {\n    request = graph.api(endpoint).middlewareOptions(prepScopes(scopes));\n    if (top) {\n      request.top(top);\n    }\n    filesPageIterator = await getFilesPageIteratorFromRequest(graph, request);\n\n    if (getIsFileListsCacheEnabled()) {\n      cache.putValue(endpoint, { files: filesPageIterator.value, nextLink: filesPageIterator._nextLink });\n    }\n  } catch {}\n  return filesPageIterator || null;\n}\n\n// GET /groups/{group-id}/drive/root:/{item-path}:/children\nexport async function getGroupFilesByPathIterator(\n  graph: IGraph,\n  groupId: string,\n  itemPath: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> {\n  const endpoint = `/groups/${groupId}/drive/root:/${itemPath}:/children`;\n  let filesPageIterator;\n\n  // get iterator from cached values\n  let cache: CacheStore<CacheFileList>;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  cache = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, endpoint);\n  if (fileList) {\n    filesPageIterator = await getFilesPageIteratorFromCache(graph, fileList.files, fileList.nextLink);\n\n    return filesPageIterator;\n  }\n\n  // get iterator from graph request\n  const scopes = 'files.read';\n  let request;\n  try {\n    request = graph.api(endpoint).middlewareOptions(prepScopes(scopes));\n    if (top) {\n      request.top(top);\n    }\n    filesPageIterator = await getFilesPageIteratorFromRequest(graph, request);\n\n    if (getIsFileListsCacheEnabled()) {\n      cache.putValue(endpoint, { files: filesPageIterator.value, nextLink: filesPageIterator._nextLink });\n    }\n  } catch {}\n  return filesPageIterator || null;\n}\n\n// GET /me/drive/items/{item-id}/children\nexport async function getFilesByIdIterator(\n  graph: IGraph,\n  itemId: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> {\n  const endpoint = `/me/drive/items/${itemId}/children`;\n  let filesPageIterator;\n\n  // get iterator from cached values\n  let cache: CacheStore<CacheFileList>;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  cache = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, endpoint);\n  if (fileList) {\n    filesPageIterator = await getFilesPageIteratorFromCache(graph, fileList.files, fileList.nextLink);\n\n    return filesPageIterator;\n  }\n\n  // get iterator from graph request\n  const scopes = 'files.read';\n  let request;\n  try {\n    request = graph.api(endpoint).middlewareOptions(prepScopes(scopes));\n    if (top) {\n      request.top(top);\n    }\n    filesPageIterator = await getFilesPageIteratorFromRequest(graph, request);\n\n    if (getIsFileListsCacheEnabled()) {\n      cache.putValue(endpoint, { files: filesPageIterator.value, nextLink: filesPageIterator._nextLink });\n    }\n  } catch {}\n  return filesPageIterator || null;\n}\n\n// GET /me/drive/root:/{item-path}:/children\nexport async function getFilesByPathIterator(\n  graph: IGraph,\n  itemPath: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> {\n  const endpoint = `/me/drive/root:/${itemPath}:/children`;\n  let filesPageIterator;\n\n  // get iterator from cached values\n  let cache: CacheStore<CacheFileList>;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  cache = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, endpoint);\n  if (fileList) {\n    filesPageIterator = await getFilesPageIteratorFromCache(graph, fileList.files, fileList.nextLink);\n\n    return filesPageIterator;\n  }\n\n  // get iterator from graph request\n  const scopes = 'files.read';\n  let request;\n  try {\n    request = graph.api(endpoint).middlewareOptions(prepScopes(scopes));\n    if (top) {\n      request.top(top);\n    }\n    filesPageIterator = await getFilesPageIteratorFromRequest(graph, request);\n\n    if (getIsFileListsCacheEnabled()) {\n      cache.putValue(endpoint, { files: filesPageIterator.value, nextLink: filesPageIterator._nextLink });\n    }\n  } catch {}\n  return filesPageIterator || null;\n}\n\n// GET /sites/{site-id}/drive/items/{item-id}/children\nexport async function getSiteFilesByIdIterator(\n  graph: IGraph,\n  siteId: string,\n  itemId: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> {\n  const endpoint = `/sites/${siteId}/drive/items/${itemId}/children`;\n  let filesPageIterator;\n\n  // get iterator from cached values\n  let cache: CacheStore<CacheFileList>;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  cache = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, endpoint);\n  if (fileList) {\n    filesPageIterator = await getFilesPageIteratorFromCache(graph, fileList.files, fileList.nextLink);\n\n    return filesPageIterator;\n  }\n\n  // get iterator from graph request\n  const scopes = 'files.read';\n  let request;\n  try {\n    request = graph.api(endpoint).middlewareOptions(prepScopes(scopes));\n    if (top) {\n      request.top(top);\n    }\n    filesPageIterator = await getFilesPageIteratorFromRequest(graph, request);\n\n    if (getIsFileListsCacheEnabled()) {\n      cache.putValue(endpoint, { files: filesPageIterator.value, nextLink: filesPageIterator._nextLink });\n    }\n  } catch {}\n  return filesPageIterator || null;\n}\n\n// GET /sites/{site-id}/drive/root:/{item-path}:/children\nexport async function getSiteFilesByPathIterator(\n  graph: IGraph,\n  siteId: string,\n  itemPath: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> {\n  const endpoint = `/sites/${siteId}/drive/root:/${itemPath}:/children`;\n  let filesPageIterator;\n\n  // get iterator from cached values\n  let cache: CacheStore<CacheFileList>;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  cache = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, endpoint);\n  if (fileList) {\n    filesPageIterator = await getFilesPageIteratorFromCache(graph, fileList.files, fileList.nextLink);\n\n    return filesPageIterator;\n  }\n\n  // get iterator from graph request\n  const scopes = 'files.read';\n  let request;\n  try {\n    request = graph.api(endpoint).middlewareOptions(prepScopes(scopes));\n    if (top) {\n      request.top(top);\n    }\n    filesPageIterator = await getFilesPageIteratorFromRequest(graph, request);\n\n    if (getIsFileListsCacheEnabled()) {\n      cache.putValue(endpoint, { files: filesPageIterator.value, nextLink: filesPageIterator._nextLink });\n    }\n  } catch {}\n  return filesPageIterator || null;\n}\n\n// GET /users/{user-id}/drive/items/{item-id}/children\nexport async function getUserFilesByIdIterator(\n  graph: IGraph,\n  userId: string,\n  itemId: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> {\n  const endpoint = `/users/${userId}/drive/items/${itemId}/children`;\n  let filesPageIterator;\n\n  // get iterator from cached values\n  let cache: CacheStore<CacheFileList>;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  cache = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, endpoint);\n  if (fileList) {\n    filesPageIterator = await getFilesPageIteratorFromCache(graph, fileList.files, fileList.nextLink);\n\n    return filesPageIterator;\n  }\n\n  // get iterator from graph request\n  const scopes = 'files.read';\n  let request;\n  try {\n    request = graph.api(endpoint).middlewareOptions(prepScopes(scopes));\n    if (top) {\n      request.top(top);\n    }\n    filesPageIterator = await getFilesPageIteratorFromRequest(graph, request);\n\n    if (getIsFileListsCacheEnabled()) {\n      cache.putValue(endpoint, { files: filesPageIterator.value, nextLink: filesPageIterator._nextLink });\n    }\n  } catch {}\n  return filesPageIterator || null;\n}\n\n// GET /users/{user-id}/drive/root:/{item-path}:/children\nexport async function getUserFilesByPathIterator(\n  graph: IGraph,\n  userId: string,\n  itemPath: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> {\n  const endpoint = `/users/${userId}/drive/root:/${itemPath}:/children`;\n  let filesPageIterator;\n\n  // get iterator from cached values\n  let cache: CacheStore<CacheFileList>;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  cache = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, endpoint);\n  if (fileList) {\n    filesPageIterator = await getFilesPageIteratorFromCache(graph, fileList.files, fileList.nextLink);\n\n    return filesPageIterator;\n  }\n\n  // get iterator from graph request\n  const scopes = 'files.read';\n  let request;\n  try {\n    request = graph.api(endpoint).middlewareOptions(prepScopes(scopes));\n    if (top) {\n      request.top(top);\n    }\n    filesPageIterator = await getFilesPageIteratorFromRequest(graph, request);\n\n    if (getIsFileListsCacheEnabled()) {\n      cache.putValue(endpoint, { files: filesPageIterator.value, nextLink: filesPageIterator._nextLink });\n    }\n  } catch {}\n  return filesPageIterator || null;\n}\n\nexport async function getFilesByListQueryIterator(\n  graph: IGraph,\n  listQuery: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> {\n  let filesPageIterator;\n\n  // get iterator from cached values\n  let cache: CacheStore<CacheFileList>;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  cache = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, listQuery);\n  if (fileList) {\n    filesPageIterator = await getFilesPageIteratorFromCache(graph, fileList.files, fileList.nextLink);\n\n    return filesPageIterator;\n  }\n\n  // get iterator from graph request\n  const scopes = ['files.read', 'sites.read.all'];\n  let request;\n\n  try {\n    request = await graph.api(listQuery).middlewareOptions(prepScopes(...scopes));\n    if (top) {\n      request.top(top);\n    }\n    filesPageIterator = await getFilesPageIteratorFromRequest(graph, request);\n\n    if (getIsFileListsCacheEnabled()) {\n      cache.putValue(listQuery, { files: filesPageIterator.value, nextLink: filesPageIterator._nextLink });\n    }\n  } catch {}\n  return filesPageIterator || null;\n}\n\n// GET /me/insights/{trending\t| used | shared}\nexport async function getMyInsightsFiles(graph: IGraph, insightType: string): Promise<DriveItem[]> {\n  const endpoint = `/me/insights/${insightType}`;\n\n  // get files from cached values\n  let cache: CacheStore<CacheFileList>;\n  const cacheStore = schemas.fileLists.stores.insightfileLists;\n  cache = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, endpoint);\n  if (fileList) {\n    return fileList.files as DriveItem[];\n  }\n\n  // get files from graph request\n  const scopes = ['sites.read.all'];\n  let insightResponse;\n  try {\n    insightResponse = await graph\n      .api(endpoint)\n      .filter(`resourceReference/type eq 'microsoft.graph.driveItem'`)\n      .middlewareOptions(prepScopes(...scopes))\n      .get();\n  } catch {}\n\n  const result = await getDriveItemsByInsights(graph, insightResponse, scopes);\n  if (getIsFileListsCacheEnabled()) {\n    cache.putValue(endpoint, { files: result });\n  }\n\n  return result || null;\n}\n\n// GET /users/{id | userPrincipalName}/insights/{trending\t| used | shared}\nexport async function getUserInsightsFiles(graph: IGraph, userId: string, insightType: string): Promise<DriveItem[]> {\n  let endpoint;\n  let filter;\n\n  if (insightType === 'shared') {\n    endpoint = `/me/insights/shared`;\n    filter = `((lastshared/sharedby/id eq '${userId}') and (resourceReference/type eq 'microsoft.graph.driveItem'))`;\n  } else {\n    endpoint = `/users/${userId}/insights/${insightType}`;\n    filter = `resourceReference/type eq 'microsoft.graph.driveItem'`;\n  }\n\n  const key = `${endpoint}?$filter=${filter}`;\n\n  // get files from cached values\n  let cache: CacheStore<CacheFileList>;\n  const cacheStore = schemas.fileLists.stores.insightfileLists;\n  cache = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, key);\n  if (fileList) {\n    return fileList.files as DriveItem[];\n  }\n\n  // get files from graph request\n  const scopes = ['sites.read.all'];\n  let insightResponse;\n\n  try {\n    insightResponse = await graph\n      .api(endpoint)\n      .filter(filter)\n      .middlewareOptions(prepScopes(...scopes))\n      .get();\n  } catch {}\n\n  const result = await getDriveItemsByInsights(graph, insightResponse, scopes);\n  if (getIsFileListsCacheEnabled()) {\n    cache.putValue(endpoint, { files: result });\n  }\n\n  return result || null;\n}\n\nexport async function getFilesByQueries(graph: IGraph, fileQueries: string[]): Promise<DriveItem[]> {\n  if (!fileQueries || fileQueries.length === 0) {\n    return [];\n  }\n\n  const batch = graph.createBatch();\n  const files = [];\n  const scopes = ['files.read'];\n  let cache: CacheStore<CacheFile>;\n  let cachedFile: CacheFile;\n  if (getIsFilesCacheEnabled()) {\n    cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.fileQueries);\n  }\n\n  for (const fileQuery of fileQueries) {\n    if (getIsFilesCacheEnabled()) {\n      cachedFile = await cache.getValue(fileQuery); // todo\n    }\n\n    if (getIsFilesCacheEnabled() && cachedFile && getFileInvalidationTime() > Date.now() - cachedFile.timeCached) {\n      files.push(JSON.parse(cachedFile.file));\n    } else if (fileQuery !== '') {\n      batch.get(fileQuery, fileQuery, scopes);\n    }\n  }\n\n  try {\n    const responses = await batch.executeAll();\n\n    for (const fileQuery of fileQueries) {\n      const response = responses.get(fileQuery);\n      if (response && response.content) {\n        files.push(response.content);\n        if (getIsFilesCacheEnabled()) {\n          cache.putValue(fileQuery, { file: JSON.stringify(response.content) });\n        }\n      }\n    }\n\n    return files;\n  } catch (_) {\n    try {\n      return Promise.all(\n        fileQueries\n          .filter(fileQuery => fileQuery && fileQuery !== '')\n          .map(async fileQuery => {\n            const file = await getDriveItemByQuery(graph, fileQuery);\n            if (file) {\n              if (getIsFilesCacheEnabled()) {\n                cache.putValue(fileQuery, { file: JSON.stringify(file) });\n              }\n              return file;\n            }\n          })\n      );\n    } catch (_) {\n      return [];\n    }\n  }\n}\n\nasync function getDriveItemsByInsights(graph: IGraph, insightResponse, scopes) {\n  if (!insightResponse) {\n    return [];\n  }\n\n  const insightItems = insightResponse.value;\n  const batch = graph.createBatch();\n  const driveItems = [];\n  for (const item of insightItems) {\n    const driveItemId = item.resourceReference.id;\n    if (driveItemId !== '') {\n      batch.get(driveItemId, driveItemId, scopes);\n    }\n  }\n\n  try {\n    const driveItemResponses = await batch.executeAll();\n\n    for (const item of insightItems) {\n      const driveItemResponse = driveItemResponses.get(item.resourceReference.id);\n      if (driveItemResponse && driveItemResponse.content) {\n        driveItems.push(driveItemResponse.content);\n      }\n    }\n    return driveItems;\n  } catch (_) {\n    try {\n      return Promise.all(\n        insightItems\n          .filter(insightItem => insightItem.resourceReference.id && insightItem.resourceReference.id !== '')\n          .map(async insightItem => {\n            const driveItemResponses = await graph\n              .api(insightItem.resourceReference.id)\n              .middlewareOptions(prepScopes(...scopes))\n              .get();\n            if (driveItemResponses && driveItemResponses.length) {\n              return driveItemResponses[0].content;\n            }\n          })\n      );\n    } catch (_) {\n      return [];\n    }\n  }\n}\n\nasync function getFilesPageIteratorFromRequest(graph: IGraph, request) {\n  return GraphPageIterator.create<DriveItem>(graph, request);\n}\n\nasync function getFilesPageIteratorFromCache(graph: IGraph, value, nextLink) {\n  return GraphPageIterator.createFromValue<DriveItem>(graph, value, nextLink);\n}\n\nasync function getFileFromCache(cache: CacheStore<CacheFile>, key: string) {\n  if (getIsFilesCacheEnabled()) {\n    const file = await cache.getValue(key);\n\n    if (file && getFileInvalidationTime() > Date.now() - file.timeCached) {\n      const cachedFile = JSON.parse(file.file);\n      return cachedFile;\n    }\n  }\n\n  return null;\n}\n\nexport async function getFileListFromCache(cache: CacheStore<CacheFileList>, store: string, key: string) {\n  if (!cache) {\n    cache = CacheService.getCache<CacheFileList>(schemas.fileLists, store);\n  }\n\n  if (getIsFileListsCacheEnabled()) {\n    const fileList = await cache.getValue(key);\n\n    if (fileList && getFileListInvalidationTime() > Date.now() - fileList.timeCached) {\n      return fileList;\n    }\n  }\n\n  return null;\n}\n\n// refresh filesPageIterator to its next iteration and save current page to cache\nexport async function fetchNextAndCacheForFilesPageIterator(filesPageIterator) {\n  const nextLink = filesPageIterator._nextLink;\n\n  if (filesPageIterator.hasNext) {\n    await filesPageIterator.next();\n  }\n  if (getIsFileListsCacheEnabled()) {\n    let cache: CacheStore<CacheFileList>;\n    cache = CacheService.getCache<CacheFileList>(schemas.fileLists, schemas.fileLists.stores.fileLists);\n\n    // match only the endpoint (after version number and before OData query params) e.g. /me/drive/root/children\n    const reg = /(graph.microsoft.com\\/(v1.0|beta))(.*?)(?=\\?)/gi;\n    const matches = reg.exec(nextLink);\n    const key = matches[3];\n\n    cache.putValue(key, { files: filesPageIterator.value, nextLink: filesPageIterator._nextLink });\n  }\n}\n\n/**\n * retrieves the specified document thumbnail\n *\n * @param {string} resource\n * @param {string[]} scopes\n * @returns {Promise<string>}\n */\nexport async function getDocumentThumbnail(graph: IGraph, resource: string, scopes: string[]): Promise<CacheThumbnail> {\n  try {\n    const response = (await graph\n      .api(resource)\n      .responseType(ResponseType.RAW)\n      .middlewareOptions(prepScopes(...scopes))\n      .get()) as Response;\n\n    if (response.status === 404) {\n      // 404 means the resource does not have a thumbnail\n      // we still want to cache that state\n      // so we return an object that can be cached\n      return { eTag: null, thumbnail: null };\n    } else if (!response.ok) {\n      return null;\n    }\n\n    const eTag = response.headers.get('eTag');\n    const blob = await blobToBase64(await response.blob());\n    return { eTag, thumbnail: blob };\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * retrieve file properties based on Graph query\n *\n * @param graph\n * @param resource\n * @returns\n */\nexport async function getGraphfile(graph: IGraph, resource: string): Promise<DriveItem> {\n  try {\n    // get from graph request\n    const scopes = 'files.read';\n    let response;\n    try {\n      response = await graph\n        .api(resource)\n        .middlewareOptions(prepScopes(scopes))\n        .get()\n        .catch(error => {\n          return null;\n        });\n    } catch {}\n\n    return response || null;\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * retrieve UploadSession Url for large file and send by chuncks\n *\n * @param graph\n * @param resource\n * @returns\n */\nexport async function getUploadSession(\n  graph: IGraph,\n  resource: string,\n  conflictBehavior: number\n): Promise<UploadSession> {\n  try {\n    // get from graph request\n    const scopes = 'files.readwrite';\n    const sessionOptions = {\n      item: {\n        '@microsoft.graph.conflictBehavior': conflictBehavior === 0 || conflictBehavior === null ? 'rename' : 'replace'\n      }\n    };\n    let response;\n    try {\n      response = await graph.api(resource).middlewareOptions(prepScopes(scopes)).post(JSON.stringify(sessionOptions));\n    } catch {}\n\n    return response || null;\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * send file chunck to OneDrive, SharePoint Site\n *\n * @param graph\n * @param resource\n * @param file\n * @returns\n */\nexport async function sendFileChunck(\n  graph: IGraph,\n  resource: string,\n  contentLength: string,\n  contentRange: string,\n  file: Blob\n): Promise<any> {\n  try {\n    // get from graph request\n    const scopes = 'files.readwrite';\n    const header = {\n      'Content-Length': contentLength,\n      'Content-Range': contentRange\n    };\n    let response;\n    try {\n      response = await graph.client.api(resource).middlewareOptions(prepScopes(scopes)).headers(header).put(file);\n    } catch {}\n\n    return response || null;\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * send file to OneDrive, SharePoint Site\n *\n * @param graph\n * @param resource\n * @param file\n * @returns\n */\nexport async function sendFileContent(graph: IGraph, resource: string, file: File): Promise<DriveItem> {\n  try {\n    // get from graph request\n    const scopes = 'files.readwrite';\n    let response;\n    try {\n      response = await graph.client.api(resource).middlewareOptions(prepScopes(scopes)).put(file);\n    } catch {}\n\n    return response || null;\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * delete upload session\n *\n * @param graph\n * @param resource\n * @returns\n */\nexport async function deleteSessionFile(graph: IGraph, resource: string): Promise<any> {\n  try {\n    // get from graph request\n    const scopes = 'files.readwrite';\n    let response;\n    try {\n      response = await graph.client\n        .api(resource)\n        .middlewareOptions(prepScopes(scopes))\n        .delete(response => {\n          return response;\n        });\n    } catch {}\n\n    return response || null;\n  } catch (e) {\n    return null;\n  }\n}\n"]}