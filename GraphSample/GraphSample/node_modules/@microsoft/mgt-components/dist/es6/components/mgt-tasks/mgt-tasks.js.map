{"version":3,"file":"mgt-tasks.js","sourceRoot":"src/","sources":["components/mgt-tasks/mgt-tasks.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { Person, PlannerAssignments, PlannerTask, User } from '@microsoft/microsoft-graph-types';\nimport { Contact, OutlookTask, OutlookTaskFolder } from '@microsoft/microsoft-graph-types-beta';\nimport { customElement, html, property, state, TemplateResult } from 'lit-element';\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { repeat } from 'lit-html/directives/repeat';\nimport { ComponentMediaQuery, Providers, ProviderState, MgtTemplatedComponent } from '@microsoft/mgt-element';\nimport { getShortDateString } from '../../utils/Utils';\nimport { MgtPeoplePicker } from '../mgt-people-picker/mgt-people-picker';\nimport { PersonCardInteraction } from './../PersonCardInteraction';\nimport { styles } from './mgt-tasks-css';\nimport { ITask, ITaskFolder, ITaskGroup, ITaskSource, PlannerTaskSource, TodoTaskSource } from './task-sources';\nimport { getMe } from '../../graph/graph.user';\nimport { MgtPeople } from '../mgt-people/mgt-people';\nimport '../mgt-person/mgt-person';\nimport '../sub-components/mgt-arrow-options/mgt-arrow-options';\nimport '../sub-components/mgt-dot-options/mgt-dot-options';\nimport { MgtFlyout } from '../sub-components/mgt-flyout/mgt-flyout';\nimport { strings } from './strings';\n\n/**\n * Defines how a person card is shown when a user interacts with\n * a person component\n *\n * @export\n * @enum {number}\n */\nexport enum TasksSource {\n  /**\n   * Use Microsoft Planner\n   */\n  planner,\n\n  /**\n   * Use Microsoft To-Do\n   */\n  todo\n}\n\n/**\n * String resources for Mgt Tasks\n *\n * @export\n * @interface TasksStringResource\n */\nexport interface TasksStringResource {\n  /**\n   * Self Assigned string\n   *\n   * @type {string}\n   * @memberof TasksStringResource\n   */\n  BASE_SELF_ASSIGNED: string;\n  /**\n   * Self Assigned Buckets string\n   *\n   * @type {string}\n   * @memberof TasksStringResource\n   */\n  BUCKETS_SELF_ASSIGNED: string;\n  /**\n   * Buckets not found string\n   *\n   * @type {string}\n   * @memberof TasksStringResource\n   */\n  BUCKET_NOT_FOUND: string;\n  /**\n   * Self Assigned Plans string\n   *\n   * @type {string}\n   * @memberof TasksStringResource\n   */\n  PLANS_SELF_ASSIGNED: string;\n  /**\n   * Plan not found string\n   *\n   * @type {string}\n   * @memberof TasksStringResource\n   */\n  PLAN_NOT_FOUND: string;\n}\n\n/*\n * Filter function\n */\n// tslint:disable-next-line: completed-docs\nexport type TaskFilter = (task: PlannerTask | OutlookTask) => boolean;\n\n// Strings and Resources for different task contexts\n// tslint:disable-next-line: completed-docs\nconst TASK_RES = {\n  todo: {\n    BASE_SELF_ASSIGNED: 'All Tasks',\n    BUCKETS_SELF_ASSIGNED: 'All Tasks',\n    BUCKET_NOT_FOUND: 'Folder not found',\n    PLANS_SELF_ASSIGNED: 'All groups',\n    PLAN_NOT_FOUND: 'Group not found'\n  },\n  // tslint:disable-next-line: object-literal-sort-keys\n  planner: {\n    BASE_SELF_ASSIGNED: 'Assigned to Me',\n    BUCKETS_SELF_ASSIGNED: 'All Tasks',\n    BUCKET_NOT_FOUND: 'Bucket not found',\n    PLANS_SELF_ASSIGNED: 'All Plans',\n    PLAN_NOT_FOUND: 'Plan not found'\n  }\n};\n\n// tslint:disable-next-line: completed-docs\nconst plannerAssignment = {\n  '@odata.type': 'microsoft.graph.plannerAssignment',\n  orderHint: 'string !'\n};\n\n/**\n * Web component enables the user to view, add, remove, complete, or edit tasks. It works with tasks in Microsoft Planner or Microsoft To-Do.\n *\n * @export\n * @class MgtTasks\n * @extends {MgtBaseComponent}\n *\n * @fires taskAdded - Fires when a new task has been created.\n * @fires taskChanged - Fires when task metadata has been changed, such as marking completed.\n * @fires taskClick - Fires when the user clicks or taps on a task.\n * @fires taskRemoved - Fires when an existing task has been deleted.\n *\n * @cssprop --tasks-header-padding - {String} Tasks header padding\n * @cssprop --tasks-header-margin - {String} Tasks header margin\n * @cssprop --tasks-title-padding - {String} Tasks title padding\n * @cssprop --tasks-plan-title-font-size - {Length} Tasks plan title font size\n * @cssprop --tasks-plan-title-padding - {String} Tasks plan title padding\n * @cssprop --tasks-new-button-width - {String} Tasks new button width\n * @cssprop --tasks-new-button-height - {String} Tasks new button height\n * @cssprop --tasks-new-button-color - {Color} Tasks new button color\n * @cssprop --tasks-new-button-background - {String} Tasks new button background\n * @cssprop --tasks-new-button-border - {String} Tasks new button border\n * @cssprop --tasks-new-button-hover-background - {Color} Tasks new button hover background\n * @cssprop --tasks-new-button-active-background - {Color} Tasks new button active background\n * @cssprop --tasks-new-task-name-margin - {String} Tasks new task name margin\n * @cssprop --task-margin - {String} Task margin\n * @cssprop --task-box-shadow - {String} Task box shadow\n * @cssprop --task-background - {Color} Task background\n * @cssprop --task-border - {String} Task border\n * @cssprop --task-header-color - {Color} Task header color\n * @cssprop --task-header-margin - {String} Task header margin\n * @cssprop --task-detail-icon-margin -{String}  Task detail icon margin\n * @cssprop --task-new-margin - {String} Task new margin\n * @cssprop --task-new-border - {String} Task new border\n * @cssprop --task-new-line-margin - {String} Task new line margin\n * @cssprop --tasks-new-line-border - {String} Tasks new line border\n * @cssprop --task-new-input-margin - {String} Task new input margin\n * @cssprop --task-new-input-padding - {String} Task new input padding\n * @cssprop --task-new-input-font-size - {Length} Task new input font size\n * @cssprop --task-new-input-active-border - {String} Task new input active border\n * @cssprop --task-new-select-border - {String} Task new select border\n * @cssprop --task-new-add-button-background - {Color} Task new add button background\n * @cssprop --task-new-add-button-disabled-background - {Color} Task new add button disabled background\n * @cssprop --task-new-cancel-button-color - {Color} Task new cancel button color\n * @cssprop --task-complete-background - {Color} Task complete background\n * @cssprop --task-complete-border - {String} Task complete border\n * @cssprop --task-complete-header-color - {Color} Task complete header color\n * @cssprop --task-complete-detail-color - {Color} Task complete detail color\n * @cssprop --task-complete-detail-icon-color - {Color} Task complete detail icon color\n * @cssprop --tasks-background-color - {Color} Task background color\n * @cssprop --task-icon-alignment - {String} Task icon alignment\n * @cssprop --task-icon-background - {Color} Task icon color\n * @cssprop --task-icon-background-completed - {Color} Task icon background color when completed\n * @cssprop --task-icon-border - {String} Task icon border styles\n * @cssprop --task-icon-border-completed - {String} Task icon border style when task is completed\n * @cssprop --task-icon-border-radius - {String} Task icon border radius\n * @cssprop --task-icon-color - {Color} Task icon color\n * @cssprop --task-icon-color-completed - {Color} Task icon color when completed\n */\n@customElement('mgt-tasks')\nexport class MgtTasks extends MgtTemplatedComponent {\n  /**\n   * determines whether todo, or planner functionality for task component\n   *\n   * @readonly\n   * @type {TasksStringResource}\n   * @memberof MgtTasks\n   */\n  public get res() {\n    switch (this.dataSource) {\n      case TasksSource.todo:\n        return TASK_RES.todo;\n      case TasksSource.planner:\n      default:\n        return TASK_RES.planner;\n    }\n  }\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n\n  public static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Get whether new task view is visible\n   *\n   * @memberof MgtTasks\n   */\n  public get isNewTaskVisible() {\n    return this._isNewTaskVisible;\n  }\n\n  /**\n   * Set whether new task is visible\n   *\n   * @memberof MgtTasks\n   */\n  public set isNewTaskVisible(value: boolean) {\n    this._isNewTaskVisible = value;\n    if (!value) {\n      this._newTaskDueDate = null;\n      this._newTaskName = '';\n      this._newTaskGroupId = '';\n      this._newTaskContainerId = '';\n    }\n  }\n\n  /**\n   * determines if tasks are un-editable\n   * @type {boolean}\n   */\n  @property({ attribute: 'read-only', type: Boolean })\n  public readOnly: boolean;\n\n  /**\n   * determines which task source is loaded, either planner or todo\n   * @type {TasksSource}\n   */\n  @property({\n    attribute: 'data-source',\n    converter: (value, type) => {\n      value = value.toLowerCase();\n      return TasksSource[value] || TasksSource.planner;\n    }\n  })\n  public dataSource: TasksSource = TasksSource.planner;\n\n  /**\n   * if set, the component will only show tasks from either this plan or group\n   * @type {string}\n   */\n  @property({ attribute: 'target-id', type: String })\n  public targetId: string;\n\n  /**\n   * if set, the component will only show tasks from this bucket or folder\n   * @type {string}\n   */\n  @property({ attribute: 'target-bucket-id', type: String })\n  public targetBucketId: string;\n\n  /**\n   * if set, the component will first show tasks from this plan or group\n   *\n   * @type {string}\n   * @memberof MgtTasks\n   */\n  @property({ attribute: 'initial-id', type: String })\n  public initialId: string;\n\n  /**\n   * if set, the component will first show tasks from this bucket or folder\n   *\n   * @type {string}\n   * @memberof MgtTasks\n   */\n  @property({ attribute: 'initial-bucket-id', type: String })\n  public initialBucketId: string;\n\n  /**\n   * sets whether the header is rendered\n   *\n   * @type {boolean}\n   * @memberof MgtTasks\n   */\n  @property({ attribute: 'hide-header', type: Boolean })\n  public hideHeader: boolean;\n\n  /**\n   * sets whether the options are rendered\n   *\n   * @type {boolean}\n   * @memberof MgtTasks\n   */\n  @property({ attribute: 'hide-options', type: Boolean })\n  public hideOptions: boolean;\n\n  /**\n   * allows developer to define specific group id\n   *\n   * @type {string}\n   */\n  @property({ attribute: 'group-id', type: String })\n  public groupId: string;\n\n  /**\n   * Optional filter function when rendering tasks\n   *\n   * @type {TaskFilter}\n   * @memberof MgtTasks\n   */\n  public taskFilter: TaskFilter;\n\n  /**\n   * Get the scopes required for tasks\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtTasks\n   */\n  public static get requiredScopes(): string[] {\n    return [\n      ...new Set([\n        'group.read.all',\n        'group.readwrite.all',\n        'tasks.read',\n        'tasks.readwrite',\n        ...MgtPeople.requiredScopes,\n        ...MgtPeoplePicker.requiredScopes\n      ])\n    ];\n  }\n\n  @property() private _isNewTaskVisible: boolean;\n  @property() private _newTaskBeingAdded: boolean;\n  @property() private _newTaskName: string;\n  @property() private _newTaskDueDate: Date;\n  @property() private _newTaskGroupId: string;\n  @property() private _newTaskFolderId: string;\n  @property() private _newTaskContainerId: string;\n  @property() private _groups: ITaskGroup[];\n  @property() private _folders: ITaskFolder[];\n  @property() private _tasks: ITask[];\n  @property() private _hiddenTasks: string[];\n  @property() private _loadingTasks: string[];\n  @property() private _inTaskLoad: boolean;\n  @property() private _hasDoneInitialLoad: boolean;\n  @property() private _todoDefaultSet: boolean;\n\n  @property() private _currentGroup: string;\n  @property() private _currentFolder: string;\n\n  @state() private _me: User = null;\n  private previousMediaQuery: ComponentMediaQuery;\n\n  constructor() {\n    super();\n    this.clearState();\n\n    this.previousMediaQuery = this.mediaQuery;\n    this.onResize = this.onResize.bind(this);\n  }\n\n  /**\n   * updates provider state\n   *\n   * @memberof MgtTasks\n   */\n  public connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener('resize', this.onResize);\n  }\n\n  /**\n   * removes updates on provider state\n   *\n   * @memberof MgtTasks\n   */\n  public disconnectedCallback() {\n    window.removeEventListener('resize', this.onResize);\n    super.disconnectedCallback();\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * @param {*} name\n   * @param {*} oldValue\n   * @param {*} newValue\n   * @memberof MgtTasks\n   */\n  public attributeChangedCallback(name: string, oldVal: string, newVal: string) {\n    super.attributeChangedCallback(name, oldVal, newVal);\n    if (name === 'data-source') {\n      if (this.dataSource === TasksSource.planner) {\n        this._currentGroup = this.initialId;\n        this._currentFolder = this.initialBucketId;\n      } else if (this.dataSource === TasksSource.todo) {\n        this._currentGroup = null;\n        this._currentFolder = this.initialId;\n      }\n\n      this.clearState();\n      this.requestStateUpdate();\n    }\n  }\n\n  protected clearState(): void {\n    this._newTaskFolderId = '';\n    this._newTaskGroupId = '';\n    this._newTaskDueDate = null;\n    this._newTaskName = '';\n    this._newTaskBeingAdded = false;\n\n    this._tasks = [];\n    this._folders = [];\n    this._groups = [];\n    this._hiddenTasks = [];\n    this._loadingTasks = [];\n\n    this._hasDoneInitialLoad = false;\n    this._inTaskLoad = false;\n    this._todoDefaultSet = false;\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(changedProperties) {\n    super.firstUpdated(changedProperties);\n\n    if (this.initialId && !this._currentGroup) {\n      if (this.dataSource === TasksSource.planner) {\n        this._currentGroup = this.initialId;\n      } else if (this.dataSource === TasksSource.todo) {\n        this._currentFolder = this.initialId;\n      }\n    }\n\n    if (this.dataSource === TasksSource.planner && this.initialBucketId && !this._currentFolder) {\n      this._currentFolder = this.initialBucketId;\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    const loadingTask = this._inTaskLoad && !this._hasDoneInitialLoad ? this.renderLoadingTask() : null;\n\n    let header: TemplateResult;\n\n    if (!this.hideHeader) {\n      header = html`\n        <div class=\"Header\" dir=${this.direction}>\n          ${this.renderPlanOptions()}\n        </div>\n      `;\n    }\n\n    return html`\n      ${header}\n      <div class=\"Tasks\" dir=${this.direction}>\n        ${this._isNewTaskVisible ? this.renderNewTask() : null} ${loadingTask}\n        ${repeat(\n          this._tasks,\n          task => task.id,\n          task => this.renderTask(task)\n        )}\n      </div>\n    `;\n  }\n\n  /**\n   * loads tasks from dataSource\n   *\n   * @returns\n   * @memberof MgtTasks\n   */\n  protected async loadState() {\n    const ts = this.getTaskSource();\n    if (!ts) {\n      return;\n    }\n\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return;\n    }\n\n    this._inTaskLoad = true;\n    if (!this._me) {\n      const graph = provider.graph.forComponent(this);\n      this._me = await getMe(graph);\n    }\n\n    if (this.groupId && this.dataSource === TasksSource.planner) {\n      await this._loadTasksForGroup(ts);\n    } else if (this.targetId) {\n      if (this.dataSource === TasksSource.todo) {\n        await this._loadTargetTodoTasks(ts);\n      } else {\n        await this._loadTargetPlannerTasks(ts);\n      }\n    } else {\n      await this._loadAllTasks(ts);\n    }\n\n    this._tasks = this._tasks\n      .filter(task => this.isTaskInSelectedGroupFilter(task))\n      .filter(task => this.isTaskInSelectedFolderFilter(task))\n      .filter(task => !this._hiddenTasks.includes(task.id));\n\n    if (this.taskFilter) {\n      this._tasks = this._tasks.filter(task => this.taskFilter(task._raw));\n    }\n\n    this._inTaskLoad = false;\n    this._hasDoneInitialLoad = true;\n  }\n\n  private onResize() {\n    if (this.mediaQuery !== this.previousMediaQuery) {\n      this.previousMediaQuery = this.mediaQuery;\n      this.requestUpdate();\n    }\n  }\n\n  private async _loadTargetTodoTasks(ts: ITaskSource) {\n    const groups = await ts.getTaskGroups();\n    const folders = (await Promise.all(groups.map(group => ts.getTaskFoldersForTaskGroup(group.id)))).reduce(\n      (cur, ret) => [...cur, ...ret],\n      []\n    );\n    const tasks = (\n      await Promise.all(folders.map(folder => ts.getTasksForTaskFolder(folder.id, folder.parentId)))\n    ).reduce((cur, ret) => [...cur, ...ret], []);\n\n    this._tasks = tasks;\n    this._folders = folders;\n    this._groups = groups;\n\n    this._currentGroup = null;\n  }\n\n  private async _loadTargetPlannerTasks(ts: ITaskSource) {\n    const group = await ts.getTaskGroup(this.targetId);\n    let folders = await ts.getTaskFoldersForTaskGroup(group.id);\n\n    if (this.targetBucketId) {\n      folders = folders.filter(folder => folder.id === this.targetBucketId);\n    }\n\n    const tasks = (\n      await Promise.all(folders.map(folder => ts.getTasksForTaskFolder(folder.id, folder.parentId)))\n    ).reduce((cur, ret) => [...cur, ...ret], []);\n\n    this._tasks = tasks;\n    this._folders = folders;\n    this._groups = [group];\n  }\n\n  private async _loadAllTasks(ts: ITaskSource) {\n    const groups = await ts.getTaskGroups();\n    const folders = (await Promise.all(groups.map(group => ts.getTaskFoldersForTaskGroup(group.id)))).reduce(\n      (cur, ret) => [...cur, ...ret],\n      []\n    );\n\n    if (!this.initialId && this.dataSource === TasksSource.todo && !this._todoDefaultSet) {\n      this._todoDefaultSet = true;\n      const defaultFolder = folders.find(d => (d._raw as OutlookTaskFolder).isDefaultFolder);\n      if (defaultFolder) {\n        this._currentFolder = defaultFolder.id;\n      }\n    }\n\n    const tasks = (\n      await Promise.all(folders.map(folder => ts.getTasksForTaskFolder(folder.id, folder.parentId)))\n    ).reduce((cur, ret) => [...cur, ...ret], []);\n\n    this._tasks = tasks;\n    this._folders = folders;\n    this._groups = groups;\n  }\n\n  private async _loadTasksForGroup(ts: ITaskSource) {\n    const groups = await ts.getTaskGroupsForGroup(this.groupId);\n    const folders = (await Promise.all(groups.map(group => ts.getTaskFoldersForTaskGroup(group.id)))).reduce(\n      (cur, ret) => [...cur, ...ret],\n      []\n    );\n\n    const tasks = (\n      await Promise.all(folders.map(folder => ts.getTasksForTaskFolder(folder.id, folder.parentId)))\n    ).reduce((cur, ret) => [...cur, ...ret], []);\n\n    this._tasks = tasks;\n    this._folders = folders;\n    this._groups = groups;\n  }\n\n  private async addTask(\n    name: string,\n    dueDate: Date,\n    topParentId: string,\n    immediateParentId: string,\n    assignments: PlannerAssignments = {}\n  ) {\n    const ts = this.getTaskSource();\n    if (!ts) {\n      return;\n    }\n\n    const newTask = {\n      assignments,\n      dueDate,\n      immediateParentId,\n      name,\n      topParentId\n    } as ITask;\n\n    this._newTaskBeingAdded = true;\n    const task = await ts.addTask(newTask);\n    this.fireCustomEvent('taskAdded', task);\n\n    await this.requestStateUpdate();\n    this._newTaskBeingAdded = false;\n    this.isNewTaskVisible = false;\n  }\n\n  private async completeTask(task: ITask) {\n    const ts = this.getTaskSource();\n    if (!ts) {\n      return;\n    }\n    this._loadingTasks = [...this._loadingTasks, task.id];\n    await ts.setTaskComplete(task.id, task.eTag);\n    this.fireCustomEvent('taskChanged', task);\n\n    await this.requestStateUpdate();\n    this._loadingTasks = this._loadingTasks.filter(id => id !== task.id);\n  }\n\n  private async uncompleteTask(task: ITask) {\n    const ts = this.getTaskSource();\n    if (!ts) {\n      return;\n    }\n\n    this._loadingTasks = [...this._loadingTasks, task.id];\n    await ts.setTaskIncomplete(task.id, task.eTag);\n    this.fireCustomEvent('taskChanged', task);\n\n    await this.requestStateUpdate();\n    this._loadingTasks = this._loadingTasks.filter(id => id !== task.id);\n  }\n\n  private async removeTask(task: ITask) {\n    const ts = this.getTaskSource();\n    if (!ts) {\n      return;\n    }\n\n    this._hiddenTasks = [...this._hiddenTasks, task.id];\n    await ts.removeTask(task.id, task.eTag);\n    this.fireCustomEvent('taskRemoved', task);\n\n    await this.requestStateUpdate();\n    this._hiddenTasks = this._hiddenTasks.filter(id => id !== task.id);\n  }\n\n  private async assignPeople(task: ITask, people: Array<User | Person | Contact>) {\n    const ts = this.getTaskSource();\n    if (!ts) {\n      return;\n    }\n\n    // create previously selected people Object\n    let savedSelectedPeople = [];\n    if (task) {\n      if (task.assignments) {\n        savedSelectedPeople = Object.keys(task.assignments).sort();\n      }\n    }\n\n    const newPeopleIds = people.map(person => {\n      return person.id;\n    });\n\n    // new people from people picker\n    const isEqual =\n      newPeopleIds.length === savedSelectedPeople.length &&\n      newPeopleIds.sort().every((value, index) => {\n        return value === savedSelectedPeople[index];\n      });\n\n    if (isEqual) {\n      return;\n    }\n\n    const peopleObj = {};\n\n    if (people.length === 0) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i < savedSelectedPeople.length; i++) {\n        peopleObj[savedSelectedPeople[i]] = null;\n      }\n    }\n\n    if (people) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i < savedSelectedPeople.length; i++) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let j = 0; j < people.length; j++) {\n          if (savedSelectedPeople[i] !== people[j].id) {\n            peopleObj[savedSelectedPeople[i]] = null;\n            break;\n          } else {\n            peopleObj[savedSelectedPeople[i]] = plannerAssignment;\n          }\n        }\n      }\n\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i < people.length; i++) {\n        peopleObj[people[i].id] = plannerAssignment;\n      }\n    }\n\n    if (task) {\n      this._loadingTasks = [...this._loadingTasks, task.id];\n      await ts.assignPeopleToTask(task.id, peopleObj, task.eTag);\n      await this.requestStateUpdate();\n      this._loadingTasks = this._loadingTasks.filter(id => id !== task.id);\n    }\n  }\n\n  private onAddTaskClick(e: MouseEvent) {\n    const picker = this.getPeoplePicker(null);\n\n    const peopleObj: any = {};\n\n    if (picker) {\n      for (const person of picker.selectedPeople) {\n        if (picker.selectedPeople.length) {\n          peopleObj[person.id] = plannerAssignment;\n        }\n      }\n    }\n\n    if (!this._newTaskBeingAdded && this._newTaskName && (this._currentGroup || this._newTaskGroupId)) {\n      this.addTask(\n        this._newTaskName,\n        this._newTaskDueDate,\n        !this._currentGroup ? this._newTaskGroupId : this._currentGroup,\n        !this._currentFolder ? this._newTaskFolderId : this._currentFolder,\n        peopleObj\n      );\n    }\n  }\n\n  private onAddTaskKeyDown(e: KeyboardEvent) {\n    if (e.code === 'Enter') {\n      this.onAddTaskClick;\n    }\n  }\n\n  private newTaskButtonKeydown(e: KeyboardEvent) {\n    if (e.code === 'Enter') {\n      this.isNewTaskVisible = !this.isNewTaskVisible;\n    }\n  }\n\n  private addNewTaskButtonClick(e: MouseEvent) {\n    this.isNewTaskVisible = !this.isNewTaskVisible;\n  }\n\n  private handleNewTaskDateChange(e: Event) {\n    const value = (e.target as HTMLInputElement).value;\n    if (value) {\n      this._newTaskDueDate = new Date(value + 'T17:00');\n    } else {\n      this._newTaskDueDate = null;\n    }\n  }\n\n  private handleSelectedPlan(e: Event) {\n    this._newTaskGroupId = (e.target as HTMLInputElement).value;\n    if (this.dataSource === TasksSource.planner) {\n      const task = this._groups.filter(iTask => iTask.id === this._newTaskGroupId);\n      this._newTaskContainerId = task.pop()?.containerId ?? this._newTaskContainerId;\n    }\n  }\n\n  private newTaskVisible(e: KeyboardEvent) {\n    if (e.code === 'Enter') {\n      this.isNewTaskVisible = false;\n    }\n  }\n\n  private renderPlanOptions() {\n    const p = Providers.globalProvider;\n\n    if (!p || p.state !== ProviderState.SignedIn) {\n      return null;\n    }\n\n    if (this._inTaskLoad && !this._hasDoneInitialLoad) {\n      return html`\n        <span class=\"LoadingHeader\"></span>\n      `;\n    }\n\n    const addButton =\n      this.readOnly || this._isNewTaskVisible\n        ? null\n        : html`\n            <div\n              tabindex=\"0\"\n              class=\"AddBarItem NewTaskButton\"\n              @click=\"${this.addNewTaskButtonClick}\"\n              @keydown=\"${this.newTaskButtonKeydown}\"\n            >\n              <span class=\"TaskIcon\"></span>\n              <span>${this.strings.addTaskButtonSubtitle}</span>\n            </div>\n          `;\n\n    if (this.dataSource === TasksSource.planner) {\n      const currentGroup = this._groups.find(d => d.id === this._currentGroup) || {\n        title: this.res.BASE_SELF_ASSIGNED\n      };\n      const groupOptions = {\n        [this.res.BASE_SELF_ASSIGNED]: e => {\n          this._currentGroup = null;\n          this._currentFolder = null;\n        }\n      };\n      for (const group of this._groups) {\n        groupOptions[group.title] = e => {\n          this._currentGroup = group.id;\n          this._currentFolder = null;\n        };\n      }\n      const groupSelect = html`\n        <mgt-arrow-options .options=\"${groupOptions}\" .value=\"${currentGroup.title}\"></mgt-arrow-options>\n      `;\n\n      const divider = !this._currentGroup\n        ? null\n        : html`\n            <span class=\"TaskIcon Divider\">/</span>\n          `;\n\n      const currentFolder = this._folders.find(d => d.id === this._currentFolder) || {\n        name: this.res.BUCKETS_SELF_ASSIGNED\n      };\n      const folderOptions = {\n        [this.res.BUCKETS_SELF_ASSIGNED]: e => {\n          this._currentFolder = null;\n        }\n      };\n\n      for (const folder of this._folders.filter(d => d.parentId === this._currentGroup)) {\n        folderOptions[folder.name] = e => {\n          this._currentFolder = folder.id;\n        };\n      }\n\n      const folderSelect = this.targetBucketId\n        ? html`\n            <span class=\"PlanTitle\">\n              ${this._folders[0] && this._folders[0].name}\n            </span>\n          `\n        : html`\n            <mgt-arrow-options .options=\"${folderOptions}\" .value=\"${currentFolder.name}\"></mgt-arrow-options>\n          `;\n\n      return html`\n        <div class=\"TitleCont\">\n          ${groupSelect} ${divider} ${!this._currentGroup ? null : folderSelect}\n        </div>\n        ${addButton}\n      `;\n    } else {\n      const folder = this._folders.find(d => d.id === this.targetId) || { name: this.res.BUCKETS_SELF_ASSIGNED };\n      const currentFolder = this._folders.find(d => d.id === this._currentFolder) || {\n        name: this.res.BUCKETS_SELF_ASSIGNED\n      };\n\n      const folderOptions = {};\n\n      for (const d of this._folders) {\n        folderOptions[d.name] = () => {\n          this._currentFolder = d.id;\n        };\n      }\n\n      folderOptions[this.res.BUCKETS_SELF_ASSIGNED] = e => {\n        this._currentFolder = null;\n      };\n\n      const folderSelect = this.targetId\n        ? html`\n            <span class=\"PlanTitle\">\n              ${folder.name}\n            </span>\n          `\n        : html`\n            <mgt-arrow-options .value=\"${currentFolder.name}\" .options=\"${folderOptions}\"></mgt-arrow-options>\n          `;\n\n      return html`\n        <span class=\"TitleCont\">\n          ${folderSelect}\n        </span>\n        ${addButton}\n      `;\n    }\n  }\n  private renderNewTask() {\n    const taskTitle = html`\n      <input\n        type=\"text\"\n        placeholder=${this.strings.newTaskPlaceholder}\n        .value=\"${this._newTaskName}\"\n        label=\"new-taskName-input\"\n        aria-label=\"new-taskName-input\"\n        role=\"textbox\"\n        @input=\"${(e: Event) => {\n          this._newTaskName = (e.target as HTMLInputElement).value;\n        }}\"\n      />\n    `;\n    const groups = this._groups;\n    if (groups.length > 0 && !this._newTaskGroupId) {\n      this._newTaskGroupId = groups[0].id;\n      if (this.dataSource === TasksSource.planner) {\n        this._newTaskContainerId = groups[0].containerId;\n      }\n    }\n    const group =\n      this.dataSource === TasksSource.todo\n        ? null\n        : this._currentGroup\n        ? html`\n            <span class=\"NewTaskGroup\">\n              ${this.renderPlannerIcon()}\n              <span>${this.getPlanTitle(this._currentGroup)}</span>\n            </span>\n          `\n        : html`\n            <span class=\"NewTaskGroup\">\n              ${this.renderPlannerIcon()}\n              <select aria-label=\"new task group\"\n                .value=\"${this._newTaskGroupId}\"\n                @change=\"${this.handleSelectedPlan}\"\n              >\n                ${this._groups.map(\n                  plan => html`\n                    <option value=\"${plan.id}\">${plan.title}</option>\n                  `\n                )}\n              </select>\n            </span>\n          `;\n\n    const folders = this._folders.filter(\n      folder =>\n        (this._currentGroup && folder.parentId === this._currentGroup) ||\n        (!this._currentGroup && folder.parentId === this._newTaskGroupId)\n    );\n    if (folders.length > 0 && !this._newTaskFolderId) {\n      this._newTaskFolderId = folders[0].id;\n    }\n    const taskFolder = this._currentFolder\n      ? html`\n          <span class=\"NewTaskBucket\">\n            ${this.renderBucketIcon()}\n            <span>${this.getFolderName(this._currentFolder)}</span>\n          </span>\n        `\n      : html`\n          <span class=\"NewTaskBucket\">\n            ${this.renderBucketIcon()}\n            <select aria-label=\"new task bucket\"\n              .value=\"${this._newTaskFolderId}\"\n              @change=\"${(e: Event) => {\n                this._newTaskFolderId = (e.target as HTMLInputElement).value;\n              }}\"\n            >\n              ${folders.map(\n                folder => html`\n                  <option value=\"${folder.id}\">${folder.name}</option>\n                `\n              )}\n            </select>\n          </span>\n        `;\n\n    const taskDue = html`\n      <span class=\"NewTaskDue\">\n      ${this.renderCalendarIcon()}\n        <input\n          type=\"date\"\n          label=\"new-taskDate-input\"\n          aria-label=\"new-taskDate-input\"\n          role=\"textbox\"\n          .value=\"${this.dateToInputValue(this._newTaskDueDate)}\"\n          @change=\"${this.handleNewTaskDateChange}\"\n        />\n      </span>\n    `;\n\n    const taskPeople = this.dataSource === TasksSource.todo ? null : this.renderAssignedPeople(null);\n\n    const taskAdd = this._newTaskBeingAdded\n      ? html`\n          <div class=\"TaskAddButtonContainer\"></div>\n        `\n      : html`\n          <div class=\"TaskAddButtonContainer ${this._newTaskName === '' ? 'Disabled' : ''}\">\n            <div tabindex=\"0\" class=\"TaskIcon TaskAdd\"\n              @click=\"${this.onAddTaskClick}\"\n              @keydown=\"${this.onAddTaskKeyDown}\">\n              <span>${this.strings.addTaskButtonSubtitle}</span>\n            </div>\n            <div tabindex=\"0\" class=\"TaskIcon TaskCancel\"\n              @click=\"${() => (this.isNewTaskVisible = false)}\"\n              @keydown=\"${this.newTaskVisible}\">\n              <span>${this.strings.cancelNewTaskSubtitle}</span>\n            </div>\n          </div>\n        `;\n\n    return html`\n      <div class=\"Task NewTask Incomplete\">\n        <div class=\"TaskContent\">\n          <div class=\"TaskDetailsContainer\">\n            <div class=\"TaskTitle\">\n              ${taskTitle}\n            </div>\n            <div class=\"TaskDetails\">\n              ${group} ${taskFolder} ${taskDue} ${taskPeople}\n            </div>\n          </div>\n        </div>\n        ${taskAdd}\n      </div>\n    `;\n  }\n\n  private togglePeoplePicker(task: ITask) {\n    const picker = this.getPeoplePicker(task);\n    const mgtPeople = this.getMgtPeople(task);\n    const flyout = this.getFlyout(task);\n\n    if (picker && mgtPeople && flyout) {\n      if (flyout.isOpen) {\n        flyout.close();\n      } else {\n        picker.selectedPeople = mgtPeople.people;\n        flyout.open();\n        window.requestAnimationFrame(() => {\n          picker.focus();\n        });\n      }\n    }\n  }\n\n  private updateAssignedPeople(task: ITask) {\n    const picker = this.getPeoplePicker(task);\n    const mgtPeople = this.getMgtPeople(task);\n\n    if (picker && picker.selectedPeople !== mgtPeople.people) {\n      mgtPeople.people = picker.selectedPeople;\n      this.assignPeople(task, picker.selectedPeople);\n    }\n  }\n\n  private getPeoplePicker(task: ITask): MgtPeoplePicker {\n    const taskId = task ? task.id : 'newTask';\n    const picker = this.renderRoot.querySelector(`.picker-${taskId}`) as MgtPeoplePicker;\n\n    return picker;\n  }\n\n  private getMgtPeople(task: ITask): MgtPeople {\n    const taskId = task ? task.id : 'newTask';\n    const mgtPeople = this.renderRoot.querySelector(`.people-${taskId}`) as MgtPeople;\n\n    return mgtPeople;\n  }\n\n  private getFlyout(task: ITask): MgtFlyout {\n    const taskId = task ? task.id : 'newTask';\n    const flyout = this.renderRoot.querySelector(`.flyout-${taskId}`) as MgtFlyout;\n\n    return flyout;\n  }\n\n  private renderTask(task: ITask) {\n    const { name = 'Task', completed = false, dueDate } = task;\n\n    const isLoading = this._loadingTasks.includes(task.id);\n\n    const taskCheckClasses = {\n      Complete: !isLoading && completed,\n      Loading: isLoading,\n      TaskCheck: true,\n      TaskIcon: true\n    };\n\n    const taskCheckContent = isLoading\n      ? html`\n          \n        `\n      : completed\n      ? html`\n          \n        `\n      : null;\n\n    const taskCheck = html`\n      <span tabindex=\"0\" class=${classMap(\n        taskCheckClasses\n      )}><span class=\"TaskCheckContent\">${taskCheckContent}</span></span>\n    `;\n\n    const groupTitle = this._currentGroup ? null : this.getPlanTitle(task.topParentId);\n    const folderTitle = this._currentFolder ? null : this.getFolderName(task.immediateParentId);\n\n    const context = { task: { ...task._raw, groupTitle, folderTitle } };\n    const taskTemplate = this.renderTemplate('task', context, task.id);\n    if (taskTemplate) {\n      return taskTemplate;\n    }\n\n    let taskDetails = this.renderTemplate('task-details', context, `task-details-${task.id}`);\n\n    if (!taskDetails) {\n      const group =\n        this.dataSource === TasksSource.todo || this._currentGroup\n          ? null\n          : html`\n              <div class=\"TaskDetail TaskGroup\">\n                ${this.renderPlannerIcon()}\n                <span>${this.getPlanTitle(task.topParentId)}</span>\n              </div>\n            `;\n\n      const folder = this._currentFolder\n        ? null\n        : html`\n            <div class=\"TaskDetail TaskBucket\">\n              ${this.renderBucketIcon()}\n              <span>${this.getFolderName(task.immediateParentId)}</span>\n            </div>\n          `;\n\n      const taskDue = !dueDate\n        ? null\n        : html`\n            <div class=\"TaskDetail TaskDue\">\n              <span>Due ${getShortDateString(dueDate)}</span>\n            </div>\n          `;\n\n      const taskPeople = this.dataSource !== TasksSource.todo ? this.renderAssignedPeople(task) : null;\n\n      taskDetails = html`\n        <div class=\"TaskTitle\">\n          ${name}\n        </div>\n        ${group} ${folder} ${taskPeople} ${taskDue}\n      `;\n    }\n\n    const taskOptions =\n      this.readOnly || this.hideOptions\n        ? null\n        : html`\n            <div class=\"TaskOptions\">\n              <mgt-dot-options\n                .options=\"${{\n                  [this.strings.removeTaskSubtitle]: () => this.removeTask(task)\n                }}\"\n              ></mgt-dot-options>\n            </div>\n          `;\n\n    return html`\n      <div\n        class=${classMap({\n          Complete: completed,\n          Incomplete: !completed,\n          ReadOnly: this.readOnly,\n          Task: true\n        })}\n      >\n        <div\n          class=\"TaskContent\"\n          @click=${() => {\n            this.handleTaskClick(task);\n          }}\n        >\n          <span\n            class=${classMap({\n              Complete: completed,\n              Incomplete: !completed,\n              TaskCheckContainer: true\n            })}\n            @click=\"${e => {\n              if (!this.readOnly) {\n                if (!task.completed) {\n                  this.completeTask(task);\n                } else {\n                  this.uncompleteTask(task);\n                }\n\n                e.stopPropagation();\n                e.preventDefault();\n              }\n            }}\"\n            @keydown=\"${(e: KeyboardEvent) => {\n              if (e.code === 'Enter') {\n                if (!this.readOnly) {\n                  if (!task.completed) {\n                    this.completeTask(task);\n                  } else {\n                    this.uncompleteTask(task);\n                  }\n\n                  e.stopPropagation();\n                  e.preventDefault();\n                }\n              }\n            }}\"\n          >\n            ${taskCheck}\n          </span>\n          <div class=\"TaskDetailsContainer ${this.mediaQuery} ${this._currentGroup ? 'NoPlan' : ''}\">\n            ${taskDetails}\n          </div>\n          ${taskOptions}\n\n        </div>\n      </div>\n    `;\n  }\n\n  private renderAssignedPeople(task: ITask) {\n    let assignedPeopleHTML = null;\n    let assignedGroupId: string;\n\n    const taskAssigneeClasses = {\n      NewTaskAssignee: task === null,\n      TaskAssignee: task !== null,\n      TaskDetail: task !== null\n    };\n\n    const assignedPeople = task\n      ? Object.keys(task.assignments).map(key => {\n          return key;\n        })\n      : [];\n\n    const noPeopleTemplate = html`\n      <template data-type=\"no-data\">\n        <i class=\"login-icon ms-Icon ms-Icon--Contact\"></i>\n      </template>\n    `;\n\n    const taskId = task ? task.id : 'newTask';\n    taskAssigneeClasses[`flyout-${taskId}`] = true;\n\n    if (!this.newTaskVisible) {\n      const planId = task?._raw?.planId;\n      if (planId) {\n        const group = this._groups.filter(group => group.id === planId);\n        assignedGroupId = group.pop()?.containerId;\n      }\n    }\n\n    const planGroupId = this.isNewTaskVisible ? this._newTaskContainerId : assignedGroupId;\n\n    assignedPeopleHTML = html`\n      <mgt-people\n        class=\"people-${taskId}\"\n        .userIds=\"${assignedPeople}\"\n        .personCardInteraction=${PersonCardInteraction.none}\n        @click=${(e: MouseEvent) => {\n          this.togglePeoplePicker(task);\n          e.stopPropagation();\n        }}\n        @keydown=${(e: KeyboardEvent) => {\n          if (e.code === 'Enter') {\n            this.togglePeoplePicker(task);\n            e.stopPropagation();\n          }\n        }}\n        >${noPeopleTemplate}\n      </mgt-people>\n    `;\n\n    return html`\n      <mgt-flyout light-dismiss class=${classMap(taskAssigneeClasses)} @closed=${e => this.updateAssignedPeople(task)}>\n        ${assignedPeopleHTML}\n        <div slot=\"flyout\" class=${classMap({ Picker: true })}>\n          <mgt-people-picker\n            class=\"picker-${taskId}\"\n            .groupId=${ifDefined(planGroupId)}\n            @click=${(e: MouseEvent) => e.stopPropagation()}\n            @keydown=${(e: KeyboardEvent) => {\n              if (e.code === 'Enter') {\n                e.stopPropagation();\n              }\n            }}\n          ></mgt-people-picker>\n        </div>\n      </mgt-flyout>\n    `;\n  }\n\n  private handleTaskClick(task: ITask) {\n    if (task) {\n      this.fireCustomEvent('taskClick', { task: task._raw });\n    }\n  }\n\n  private renderLoadingTask() {\n    return html`\n      <div class=\"Task LoadingTask\">\n        <div class=\"TaskContent\">\n          <div class=\"TaskCheckContainer\">\n            <div class=\"TaskCheck\"></div>\n          </div>\n          <div class=\"TaskDetailsContainer\">\n            <div class=\"TaskTitle\"></div>\n            <div class=\"TaskDetails\">\n              <span class=\"TaskDetail\">\n                <div class=\"TaskDetailIcon\"></div>\n                <div class=\"TaskDetailName\"></div>\n              </span>\n              <span class=\"TaskDetail\">\n                <div class=\"TaskDetailIcon\"></div>\n                <div class=\"TaskDetailName\"></div>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  private renderPlannerIcon() {\n    return html`\n      <svg width=\"16\" height=\"18\" viewBox=\"0 0 16 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M7.223 1.156C6.98 1.26 6.769 1.404 6.586 1.586C6.403 1.768 6.261 1.98 6.157 2.223C6.052 2.465 6 2.724 6 3H2V17H14V3H10C10 2.724 9.948 2.465 9.844 2.223C9.74 1.98 9.596 1.768 9.414 1.586C9.231 1.404 9.02 1.26 8.777 1.156C8.535 1.053 8.276 1 8 1C7.723 1 7.465 1.053 7.223 1.156ZM5 4H7V3C7 2.86 7.026 2.729 7.078 2.609C7.13 2.49 7.202 2.385 7.293 2.293C7.384 2.202 7.49 2.131 7.609 2.079C7.73 2.026 7.859 2 8 2C8.14 2 8.271 2.026 8.39 2.079C8.511 2.131 8.616 2.202 8.707 2.293C8.798 2.385 8.87 2.49 8.922 2.609C8.974 2.729 9 2.86 9 3V4H11V5H5V4ZM12 6V4H13V16H3V4H4V6H12Z\"\n          fill=\"#3C3C3C\"\n        />\n        <path\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M7.35156 12.3517L5.49956 14.2037L4.14856 12.8517L4.85156 12.1487L5.49956 12.7967L6.64856 11.6487L7.35156 12.3517Z\"\n          fill=\"#3C3C3C\"\n        />\n        <path\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M7.35156 8.35168L5.49956 10.2037L4.14856 8.85168L4.85156 8.14868L5.49956 8.79668L6.64856 7.64868L7.35156 8.35168Z\"\n          fill=\"#3C3C3C\"\n        />\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 14H12.001V13H8V14Z\" fill=\"#3C3C3C\" />\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 10H12.001V9H8V10Z\" fill=\"#3C3C3C\" />\n      </svg>\n    `;\n  }\n\n  private renderBucketIcon() {\n    return html`\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M14 2H2V4H3H5H6H10H11H13H14V2ZM10 5H6V6H10V5ZM5 5H3V14H13V5H11V6C11 6.55228 10.5523 7 10 7H6C5.44772 7 5 6.55228 5 6V5ZM1 5H2V14V15H3H13H14V14V5H15V4V2V1H14H2H1V2V4V5Z\"\n          fill=\"#3C3C3C\"\n        />\n      </svg>\n    `;\n  }\n\n  /**\n   * Render a calendar icon.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTodo\n   */\n  protected renderCalendarIcon() {\n    return html`\n          <svg width=\"16\" height=\"20\" viewBox=\"0 0 16 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M5 11C5.55228 11 6 10.5523 6 10C6 9.44771 5.55228 9 5 9C4.44772 9 4 9.44771 4 10C4 10.5523 4.44772 11 5 11ZM6 13C6 13.5523 5.55228 14 5 14C4.44772 14 4 13.5523 4 13C4 12.4477 4.44772 12 5 12C5.55228 12 6 12.4477 6 13ZM8 11C8.55229 11 9 10.5523 9 10C9 9.44771 8.55229 9 8 9C7.44771 9 7 9.44771 7 10C7 10.5523 7.44771 11 8 11ZM9 13C9 13.5523 8.55229 14 8 14C7.44771 14 7 13.5523 7 13C7 12.4477 7.44771 12 8 12C8.55229 12 9 12.4477 9 13ZM11 11C11.5523 11 12 10.5523 12 10C12 9.44771 11.5523 9 11 9C10.4477 9 10 9.44771 10 10C10 10.5523 10.4477 11 11 11ZM15 5.5C15 4.11929 13.8807 3 12.5 3H3.5C2.11929 3 1 4.11929 1 5.5V14.5C1 15.8807 2.11929 17 3.5 17H12.5C13.8807 17 15 15.8807 15 14.5V5.5ZM2 7H14V14.5C14 15.3284 13.3284 16 12.5 16H3.5C2.67157 16 2 15.3284 2 14.5V7ZM3.5 4H12.5C13.3284 4 14 4.67157 14 5.5V6H2V5.5C2 4.67157 2.67157 4 3.5 4Z\" fill=\"#717171\"/>\n          </svg>\n        `;\n  }\n\n  private getTaskSource(): ITaskSource {\n    const p = Providers.globalProvider;\n    if (!p || p.state !== ProviderState.SignedIn) {\n      return null;\n    }\n\n    const graph = p.graph.forComponent(this);\n    if (this.dataSource === TasksSource.planner) {\n      return new PlannerTaskSource(graph);\n    } else if (this.dataSource === TasksSource.todo) {\n      return new TodoTaskSource(graph);\n    } else {\n      return null;\n    }\n  }\n\n  private getPlanTitle(planId: string): string {\n    if (!planId) {\n      return this.res.BASE_SELF_ASSIGNED;\n    } else if (planId === this.res.PLANS_SELF_ASSIGNED) {\n      return this.res.PLANS_SELF_ASSIGNED;\n    } else {\n      return (\n        this._groups.find(plan => plan.id === planId) || {\n          title: this.res.PLAN_NOT_FOUND\n        }\n      ).title;\n    }\n  }\n\n  private getFolderName(bucketId: string): string {\n    if (!bucketId) {\n      return this.res.BUCKETS_SELF_ASSIGNED;\n    }\n    return (\n      this._folders.find(buck => buck.id === bucketId) || {\n        name: this.res.BUCKET_NOT_FOUND\n      }\n    ).name;\n  }\n\n  private isTaskInSelectedGroupFilter(task: ITask) {\n    return (\n      task.topParentId === this._currentGroup ||\n      (!this._currentGroup && this.getTaskSource().isAssignedToMe(task, this._me.id))\n    );\n  }\n\n  private isTaskInSelectedFolderFilter(task: ITask) {\n    return task.immediateParentId === this._currentFolder || !this._currentFolder;\n  }\n\n  private dateToInputValue(date: Date) {\n    if (date) {\n      return new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString().split('T')[0];\n    }\n\n    return null;\n  }\n}\n"]}