{"version":3,"file":"mgt-person-card-organization.js","sourceRoot":"src/","sources":["components/mgt-person-card/sections/mgt-person-card-organization/mgt-person-card-organization.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { User } from '@microsoft/microsoft-graph-types';\nimport { customElement, html, TemplateResult } from 'lit-element';\n\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getSvg, SvgIcon } from '../../../../utils/SvgHelper';\nimport { MgtPersonCardState } from '../../mgt-person-card.types';\nimport { styles } from './mgt-person-card-organization-css';\nimport { strings } from './strings';\nimport { ViewType } from '../../../../graph/types';\n\n/**\n * The member organization subsection of the person card\n *\n * @export\n * @class MgtPersonCardProfile\n * @extends {MgtTemplatedComponent}\n */\n@customElement('mgt-person-card-organization')\nexport class MgtPersonCardOrganization extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * returns component strings\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtBaseComponent\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  private _state: MgtPersonCardState;\n  private _me: User;\n\n  constructor(state: MgtPersonCardState, me: User) {\n    super();\n    this._state = state;\n    this._me = me;\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtPersonCardMessages\n   */\n  public clearState(): void {\n    super.clearState();\n    this._state = null;\n    this._me = null;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtPersonCardOrganization\n   */\n  public get displayName(): string {\n    const { person, directReports } = this._state;\n\n    if (!person.manager && directReports && directReports.length) {\n      return `${this.strings.directReportsSectionTitle} (${directReports.length})`;\n    }\n\n    return this.strings.reportsToSectionTitle;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardOrganization\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Organization);\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardOrganization\n   */\n  protected renderCompactView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (!this._state || !this._state.person) {\n      return null;\n    }\n\n    const { person, directReports } = this._state;\n\n    if (!person) {\n      return null;\n    } else if (person.manager) {\n      contentTemplate = this.renderCoworker(person.manager);\n    } else if (directReports && directReports.length) {\n      contentTemplate = this.renderCompactDirectReports();\n    }\n\n    return html`\n      <div class=\"root compact\">\n        ${contentTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardOrganization\n   */\n  protected renderFullView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (!this._state || !this._state.person) {\n      return null;\n    }\n\n    const { person, directReports, people } = this._state;\n\n    if (!person && !directReports && !people) {\n      return null;\n    } else {\n      const managerTemplates = this.renderManagers();\n      const currentUserTemplate = this.renderCurrentUser();\n      const directReportsTemplate = this.renderDirectReports();\n      const coworkersTemplate = this.renderCoworkers();\n\n      contentTemplate = html`\n        ${managerTemplates} ${currentUserTemplate} ${directReportsTemplate} ${coworkersTemplate}\n      `;\n    }\n\n    return html`\n      <div class=\"root\" dir=${this.direction}>\n        <div class=\"title\" tabindex=\"0\">${this.strings.organizationSectionTitle}</div>\n        ${contentTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render a manager org member\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardOrganization\n   */\n  protected renderManager(person: User): TemplateResult {\n    return html`\n      <div class=\"org-member\" @keydown=${(e: KeyboardEvent) => {\n        e.code === 'Enter' ? this.navigateCard(person) : '';\n      }} @click=${() => this.navigateCard(person)}>\n        <div class=\"org-member__person\">\n          <mgt-person\n            .personDetails=${person}\n            .line2Property=${'jobTitle'}\n            .line3Property=${'department'}\n            .fetchImage=${true}\n            .view=${ViewType.threelines}\n          ></mgt-person>\n        </div>\n        <div tabindex=\"0\" class=\"org-member__more\">\n          ${getSvg(SvgIcon.ExpandRight)}\n        </div>\n      </div>\n      <div class=\"org-member__separator\"></div>\n    `;\n  }\n\n  /**\n   * Render a manager org member\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardOrganization\n   */\n  protected renderManagers(): TemplateResult[] {\n    const { person } = this._state;\n    if (!person || !person.manager) {\n      return null;\n    }\n\n    const managers = [];\n    let currentManager = person;\n    while (currentManager.manager) {\n      managers.push(currentManager.manager);\n      currentManager = currentManager.manager;\n    }\n\n    if (!managers.length) {\n      return null;\n    }\n\n    return managers.reverse().map(manager => this.renderManager(manager));\n  }\n\n  /**\n   * Render a direct report\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardOrganization\n   */\n  protected renderDirectReports(): TemplateResult {\n    const { directReports } = this._state;\n    if (!directReports || !directReports.length) {\n      return null;\n    }\n\n    return html`\n      <div class=\"org-member__separator\"></div>\n      <div>\n        ${directReports.map(\n          person => html`\n            <div class=\"org-member org-member--direct-report\" @keydown=${(e: KeyboardEvent) => {\n              e.code === 'Enter' ? this.navigateCard(person) : '';\n            }} @click=${() => this.navigateCard(person)}>\n              <div class=\"org-member__person\">\n                <mgt-person\n                  .personDetails=${person}\n                  .line2Property=${'jobTitle'}\n                  .line3Property=${'department'}\n                  .fetchImage=${true}\n                  .view=${ViewType.twolines}\n                ></mgt-person>\n              </div>\n              <div tabindex=\"0\" class=\"org-member__more\">\n                ${getSvg(SvgIcon.ExpandRight)}\n              </div>\n            </div>\n          `\n        )}\n      </div>\n    `;\n  }\n\n  /**\n   * Render direct reports in compact view\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardOrganization\n   */\n  protected renderCompactDirectReports(): TemplateResult {\n    const { directReports } = this._state;\n\n    return html`\n      <div class=\"direct-report__compact\">\n        ${directReports.slice(0, 6).map(\n          person => html`\n            <div class=\"direct-report\" @keydown=${(e: KeyboardEvent) => {\n              e.code === 'Enter' ? this.navigateCard(person) : '';\n            }} @click=${() => this.navigateCard(person)} @keydown=${(e: KeyboardEvent) => {\n            e.code === 'Enter' ? this.navigateCard(person) : '';\n          }}>\n              <mgt-person .personDetails=${person} .fetchImage=${true}></mgt-person>\n            </div>\n          `\n        )}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the user/self member\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardOrganization\n   */\n  protected renderCurrentUser(): TemplateResult {\n    const { person } = this._state;\n    return html`\n      <div class=\"org-member org-member--target\">\n        <div class=\"org-member__person\">\n          <mgt-person\n            .personDetails=${person}\n            .line2Property=${'jobTitle'}\n            .line3Property=${'department'}\n            .fetchImage=${true}\n            .view=${ViewType.threelines}\n          ></mgt-person>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Render a coworker org member\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardOrganization\n   */\n  protected renderCoworker(person: User): TemplateResult {\n    return html`\n      <div class=\"coworker\" @keydown=${(e: KeyboardEvent) => {\n        e.code === 'Enter' ? this.navigateCard(person) : '';\n      }} @click=${() => this.navigateCard(person)}>\n        <div class=\"coworker__person\">\n          <mgt-person\n            .personDetails=${person}\n            .line2Property=${'jobTitle'}\n            .fetchImage=${true}\n            .view=${ViewType.twolines}\n          ></mgt-person>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Render a coworker org member\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardOrganization\n   */\n  protected renderCoworkers(): TemplateResult {\n    const { people } = this._state;\n    if (!people || !people.length) {\n      return null;\n    }\n\n    const subtitle =\n      this._me.id === this._state.person.id\n        ? this.strings.youWorkWithSubSectionTitle\n        : `${this._state.person.givenName} ${this.strings.userWorksWithSubSectionTitle}`;\n\n    return html`\n      <div class=\"divider\"></div>\n      <div class=\"subtitle\" tabindex=\"0\">${subtitle}</div>\n      <div>\n        ${people.slice(0, 6).map(person => this.renderCoworker(person))}\n      </div>\n    `;\n  }\n}\n"]}