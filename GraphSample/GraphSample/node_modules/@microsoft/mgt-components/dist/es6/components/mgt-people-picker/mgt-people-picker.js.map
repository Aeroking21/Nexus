{"version":3,"file":"mgt-people-picker.js","sourceRoot":"src/","sources":["components/mgt-people-picker/mgt-people-picker.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { User } from '@microsoft/microsoft-graph-types';\nimport { customElement, html, state, property, TemplateResult } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { repeat } from 'lit-html/directives/repeat';\nimport {\n  findGroups,\n  getGroupsForGroupIds,\n  GroupType,\n  getGroup,\n  findGroupsFromGroupIds\n} from '../../graph/graph.groups';\nimport { findPeople, getPeople, PersonType, UserType } from '../../graph/graph.people';\nimport {\n  findUsers,\n  findGroupMembers,\n  findUsersFromGroupIds,\n  getUser,\n  getUsersForUserIds,\n  getUsers\n} from '../../graph/graph.user';\nimport { IDynamicPerson, ViewType } from '../../graph/types';\nimport { Providers, ProviderState, MgtTemplatedComponent, arraysAreEqual, IGraph } from '@microsoft/mgt-element';\nimport '../../styles/style-helper';\nimport '../sub-components/mgt-spinner/mgt-spinner';\nimport { debounce, isValidEmail } from '../../utils/Utils';\nimport { MgtPerson } from '../mgt-person/mgt-person';\nimport { PersonCardInteraction } from '../PersonCardInteraction';\nimport { MgtFlyout } from '../sub-components/mgt-flyout/mgt-flyout';\nimport { styles } from './mgt-people-picker-css';\n\nimport { strings } from './strings';\n\nexport { GroupType } from '../../graph/graph.groups';\nexport { PersonType, UserType } from '../../graph/graph.people';\n\n/**\n * An interface used to mark an object as 'focused',\n * so it can be rendered differently.\n *\n * @interface IFocusable\n */\ninterface IFocusable {\n  // tslint:disable-next-line: completed-docs\n  isFocused: boolean;\n}\n\n/**\n * Web component used to search for people from the Microsoft Graph\n *\n * @export\n * @class MgtPicker\n * @extends {MgtTemplatedComponent}\n *\n * @fires selectionChanged - Fired when selection changes\n *\n * @cssprop --color - {Color} Default font color\n *\n * @cssprop --input-border - {String} Input section entire border\n * @cssprop --input-border-top - {String} Input section border top only\n * @cssprop --input-border-right - {String} Input section border right only\n * @cssprop --input-border-bottom - {String} Input section border bottom only\n * @cssprop --input-border-left - {String} Input section border left only\n * @cssprop --input-background-color - {Color} Input section background color\n * @cssprop --input-border-color--hover - {Color} Input border hover color\n * @cssprop --input-border-color--focus - {Color} Input border focus color\n *\n * @cssprop --selected-person-background-color - {Color} Selected person background color\n *\n * @cssprop --dropdown-background-color - {Color} Background color of dropdown area\n * @cssprop --dropdown-item-hover-background - {Color} Background color of person during hover\n * @cssprop --dropdown-item-text-color - {Color} Color of person text\n * @cssprop --dropdown-item-text-hover-color - {Color} Color of person text during hover\n *\n * @cssprop --placeholder-color--focus - {Color} Color of placeholder text during focus state\n * @cssprop --placeholder-color - {Color} Color of placeholder text\n *\n * @cssprop --people-picker-flyout-line1-text-font-size - {String} the font size of the line 1 text on the flyout results. Default is 14px.\n * @cssprop --people-picker-flyout-line1-text-font-weight - {String} the font weight of the line 1 text on the flyout results. Default is normal.\n * @cssprop --people-picker-flyout-line2-text-font-size - {String} the font size of the line 2 text on the flyout results. Default is 12px.\n * @cssprop --people-picker-flyout-line2-text-font-weight - {String} the font weight of the line 2 text on the flyout results. Default is normal.\n *\n */\n@customElement('mgt-people-picker')\nexport class MgtPeoplePicker extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * user the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * The strings to be used for localizing the component.\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtPeoplePicker\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Gets the flyout element\n   *\n   * @protected\n   * @type {MgtFlyout}\n   * @memberof MgtLogin\n   */\n  protected get flyout(): MgtFlyout {\n    return this.renderRoot.querySelector('.flyout');\n  }\n\n  /**\n   * Gets the input element\n   *\n   * @protected\n   * @type {MgtFlyout}\n   * @memberof MgtLogin\n   */\n  protected get input(): HTMLInputElement {\n    return this.renderRoot.querySelector('.search-box__input');\n  }\n\n  /**\n   * value determining if search is filtered to a group.\n   * @type {string}\n   */\n  @property({ attribute: 'group-id', converter: value => value.trim() })\n  public get groupId(): string {\n    return this._groupId;\n  }\n  public set groupId(value) {\n    if (this._groupId === value) {\n      return;\n    }\n\n    this._groupId = value;\n    this.requestStateUpdate(true);\n  }\n\n  /**\n   * array of groups for search to be filtered by.\n   * @type {string[]}\n   */\n  @property({\n    attribute: 'group-ids',\n    converter: value => {\n      return value.split(',').map(v => v.trim());\n    }\n  })\n  public get groupIds(): string[] {\n    return this._groupIds;\n  }\n  public set groupIds(value) {\n    if (arraysAreEqual(this._groupIds, value)) {\n      return;\n    }\n    this._groupIds = value;\n    this.requestStateUpdate(true);\n  }\n\n  /**\n   * value determining if search is filtered to a group.\n   * @type {PersonType}\n   */\n  @property({\n    attribute: 'type',\n    converter: (value, type) => {\n      value = value.toLowerCase();\n      if (!value || value.length === 0) {\n        return PersonType.any;\n      }\n\n      if (typeof PersonType[value] === 'undefined') {\n        return PersonType.any;\n      } else {\n        return PersonType[value];\n      }\n    }\n  })\n  public get type(): PersonType {\n    return this._type;\n  }\n  public set type(value) {\n    if (this._type === value) {\n      return;\n    }\n\n    this._type = value;\n    this.requestStateUpdate(true);\n  }\n\n  /**\n   * type of group to search for - requires personType to be\n   * set to \"Group\" or \"All\"\n   * @type {GroupType}\n   */\n  @property({\n    attribute: 'group-type',\n    converter: (value, type) => {\n      if (!value || value.length === 0) {\n        return GroupType.any;\n      }\n\n      const values = value.split(',');\n      const groupTypes = [];\n\n      for (let v of values) {\n        v = v.trim();\n        if (typeof GroupType[v] !== 'undefined') {\n          groupTypes.push(GroupType[v]);\n        }\n      }\n\n      if (groupTypes.length === 0) {\n        return GroupType.any;\n      }\n\n      // tslint:disable-next-line:no-bitwise\n      const gt = groupTypes.reduce((a, c) => a | c);\n      return gt;\n    }\n  })\n  public get groupType(): GroupType {\n    return this._groupType;\n  }\n  public set groupType(value) {\n    if (this._groupType === value) {\n      return;\n    }\n    this._groupType = value;\n    this.requestStateUpdate(true);\n  }\n\n  /**\n   * The type of user to search for. Default is any.\n   *\n   * @readonly\n   * @type {UserType}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'user-type',\n    converter: (value, type) => {\n      value = value.toLowerCase();\n      if (!value || value.length === 0) {\n        return UserType.any;\n      }\n\n      if (typeof UserType[value] === 'undefined') {\n        return UserType.any;\n      } else {\n        return UserType[value];\n      }\n    }\n  })\n  public get userType(): UserType {\n    return this._userType;\n  }\n  public set userType(value) {\n    if (this._userType === value) {\n      return;\n    }\n\n    this._userType = value;\n    this.requestStateUpdate(true);\n  }\n\n  /**\n   * whether the return should contain a flat list of all nested members\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'transitive-search',\n    type: Boolean\n  })\n  public get transitiveSearch(): boolean {\n    return this._transitiveSearch;\n  }\n  public set transitiveSearch(value: boolean) {\n    if (this.transitiveSearch !== value) {\n      this._transitiveSearch = value;\n      this.requestStateUpdate(true);\n    }\n  }\n\n  /**\n   * containing object of IDynamicPerson.\n   * @type {IDynamicPerson[]}\n   */\n  @property({\n    attribute: 'people',\n    type: Object\n  })\n  public get people(): IDynamicPerson[] {\n    return this._people;\n  }\n  public set people(value: IDynamicPerson[]) {\n    if (!arraysAreEqual(this._people, value)) {\n      this._people = value;\n      this.requestStateUpdate(true);\n    }\n  }\n\n  /**\n   * determining how many people to show in list.\n   * @type {number}\n   */\n  @property({\n    attribute: 'show-max',\n    type: Number\n  })\n  public get showMax(): number {\n    return this._showMax;\n  }\n  public set showMax(value: number) {\n    if (value !== this._showMax) {\n      this._showMax = value;\n      this.requestStateUpdate(true);\n    }\n  }\n\n  /**\n   * Sets whether the person image should be fetched\n   * from the Microsoft Graph\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'disable-images',\n    type: Boolean\n  })\n  public disableImages: boolean;\n\n  /**\n   * array of user picked people.\n   * @type {IDynamicPerson[]}\n   */\n  @property({\n    attribute: 'selected-people',\n    type: Array\n  })\n  public get selectedPeople(): IDynamicPerson[] {\n    return this._selectedPeople;\n  }\n  public set selectedPeople(value: IDynamicPerson[]) {\n    if (!value) value = [];\n    if (!arraysAreEqual(this._selectedPeople, value)) {\n      this._selectedPeople = value;\n      this.requestUpdate();\n    }\n  }\n\n  /**\n   * array of people to be selected upon initialization\n   *\n   * @type {string[]}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'default-selected-user-ids',\n    converter: value => {\n      return value.split(',').map(v => v.trim());\n    },\n    type: String\n  })\n  public get defaultSelectedUserIds(): string[] {\n    return this._defaultSelectedUserIds;\n  }\n  public set defaultSelectedUserIds(value) {\n    if (!arraysAreEqual(this._defaultSelectedUserIds, value)) {\n      this._defaultSelectedUserIds = value;\n      this.requestStateUpdate(true);\n    }\n  }\n\n  /**\n   * array of groups to be selected upon initialization\n   *\n   * @type {string[]}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'default-selected-group-ids',\n    converter: value => {\n      return value.split(',').map(v => v.trim());\n    },\n    type: String\n  })\n  public get defaultSelectedGroupIds(): string[] {\n    return this._defaultSelectedGroupIds;\n  }\n  public set defaultSelectedGroupIds(value) {\n    if (!arraysAreEqual(this._defaultSelectedGroupIds, value)) {\n      this._defaultSelectedGroupIds = value;\n      this.requestStateUpdate(true);\n    }\n  }\n\n  /**\n   * Placeholder text.\n   *\n   * @type {string}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'placeholder',\n    type: String\n  })\n  public placeholder: string;\n\n  /**\n   * Determines whether component should be disabled or not\n   *\n   * @type {boolean}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'disabled',\n    type: Boolean\n  })\n  public disabled: boolean;\n\n  /**\n   * Determines if a user can enter an email without selecting a person\n   *\n   * @type {boolean}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'allow-any-email',\n    type: Boolean\n  })\n  public allowAnyEmail: boolean;\n\n  /**\n   * Determines whether component allows multiple or single selection of people\n   *\n   * @type {string}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'selection-mode',\n    type: String\n  })\n  public selectionMode: string;\n\n  /**\n   * Array of the only users to be searched.\n   *\n   * @type {string[]}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'user-ids',\n    converter: value => {\n      return value.split(',').map(v => v.trim());\n    },\n    type: String\n  })\n  public get userIds(): string[] {\n    return this._userIds;\n  }\n  public set userIds(value: string[]) {\n    if (arraysAreEqual(this._userIds, value)) {\n      return;\n    }\n    this._userIds = value;\n    this.requestStateUpdate(true);\n  }\n\n  /**\n   * Filters that can be set on the user properties query.\n   */\n  @property({ attribute: 'user-filters' })\n  public get userFilters(): string {\n    return this._userFilters;\n  }\n\n  public set userFilters(value: string) {\n    this._userFilters = value;\n    this.requestStateUpdate(true);\n  }\n\n  /**\n   * Filters that can be set on the people query properties.\n   */\n  @property({ attribute: 'people-filters' })\n  public get peopleFilters(): string {\n    return this._peopleFilters;\n  }\n\n  public set peopleFilters(value: string) {\n    this._peopleFilters = value;\n    this.requestStateUpdate(true);\n  }\n\n  /**\n   * Filters that can be set on the group query properties.\n   */\n  @property({ attribute: 'group-filters' })\n  public get groupFilters(): string {\n    return this._groupFilters;\n  }\n\n  public set groupFilters(value: string) {\n    this._groupFilters = value;\n    this.requestStateUpdate(true);\n  }\n\n  /**\n   * Label that can be set on the people picker input to provide context to\n   * assistive technologies\n   */\n  @property({\n    attribute: 'aria-label',\n    type: String\n  })\n  public ariaLabel: string;\n\n  /**\n   * Get the scopes required for people picker\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtPeoplePicker\n   */\n  public static get requiredScopes(): string[] {\n    return [\n      ...new Set(['user.read.all', 'people.read', 'group.read.all', 'user.readbasic.all', ...MgtPerson.requiredScopes])\n    ];\n  }\n\n  /**\n   * User input in search.\n   *\n   * @protected\n   * @type {string}\n   * @memberof MgtPeoplePicker\n   */\n  protected userInput: string;\n\n  // if search is still loading don't load \"people not found\" state\n  @state() private _showLoading: boolean;\n\n  private _userIds: string[];\n  private _groupId: string;\n  private _groupIds: string[];\n  private _type: PersonType = PersonType.person;\n  private _groupType: GroupType = GroupType.any;\n  private _userType: UserType = UserType.any;\n  private _userFilters: string;\n  private _groupFilters: string;\n  private _peopleFilters: string;\n  private _defaultSelectedGroupIds: string[];\n  private _defaultSelectedUserIds: string[];\n  private _selectedPeople: IDynamicPerson[] = [];\n  private _showMax: number;\n  private _people: IDynamicPerson[];\n  private _transitiveSearch: boolean;\n\n  private defaultPeople: IDynamicPerson[];\n\n  // tracking of user arrow key input for selection\n  @state() private _arrowSelectionCount = -1;\n\n  // List of people requested if group property is provided\n  private _groupPeople: IDynamicPerson[];\n  private _debouncedSearch: { (): void; (): void };\n  private defaultSelectedUsers: IDynamicPerson[];\n  private defaultSelectedGroups: IDynamicPerson[];\n  // List of users highlighted for copy/cut-pasting\n  private _highlightedUsers: Element[] = [];\n  // current user index to the left of the highlighted users\n  private _currentHighlightedUserPos: number = 0;\n\n  /**\n   * Checks if the input is focused.\n   */\n  @state() private _isFocused = false;\n\n  /**\n   * Switch to determine if a typed email can be set.\n   */\n  @state() private _setAnyEmail: boolean = false;\n\n  /**\n   * List of people found from the graph calls.\n   */\n  @state() private _foundPeople: IDynamicPerson[];\n\n  constructor() {\n    super();\n    this.clearState();\n    this._showLoading = true;\n    this.showMax = 6;\n    this.disableImages = false;\n\n    this.disabled = false;\n    this.allowAnyEmail = false;\n    this.addEventListener('copy', this.handleCopy);\n    this.addEventListener('cut', this.handleCut);\n    this.addEventListener('paste', this.handlePaste);\n  }\n\n  /**\n   * Focuses the input element when focus is called\n   *\n   * @param {FocusOptions} [options]\n   * @memberof MgtPeoplePicker\n   */\n  public focus(options?: FocusOptions) {\n    if (!this.input) {\n      return;\n    }\n    this.input.focus(options);\n    this.input.select();\n  }\n\n  /**\n   * Queries the microsoft graph for a user based on the user id and adds them to the selectedPeople array\n   *\n   * @param {readonly string []} an array of user ids to add to selectedPeople\n   * @returns {Promise<void>}\n   * @memberof MgtPeoplePicker\n   */\n  public async selectUsersById(userIds: readonly string[]): Promise<void> {\n    const provider = Providers.globalProvider;\n    const graph = Providers.globalProvider.graph;\n    if (provider && provider.state === ProviderState.SignedIn) {\n      // tslint:disable-next-line: forin\n      for (const id in userIds) {\n        const userId = userIds[id];\n        try {\n          const personDetails = await getUser(graph, userId);\n          this.addPerson(personDetails);\n        } catch (e) {\n          // This caters for allow-any-email property if it's enabled on the component\n          if (e.message && e.message.includes('does not exist') && this.allowAnyEmail) {\n            if (isValidEmail(userId)) {\n              const anyMailUser = {\n                mail: userId,\n                displayName: userId\n              };\n              this.addPerson(anyMailUser);\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Queries the microsoft graph for a group of users from a group id, and adds them to the selectedPeople\n   *\n   * @param {readonly string []} an array of group ids to add to selectedPeople\n   * @returns {Promise<void>}\n   * @memberof MgtPeoplePicker\n   */\n  public async selectGroupsById(groupIds: readonly string[]): Promise<void> {\n    const provider = Providers.globalProvider;\n    const graph = Providers.globalProvider.graph;\n    if (provider && provider.state === ProviderState.SignedIn) {\n      // tslint:disable-next-line: forin\n      for (const id in groupIds) {\n        try {\n          const groupDetails = await getGroup(graph, groupIds[id]);\n          this.addPerson(groupDetails);\n          // tslint:disable-next-line: no-empty\n        } catch (e) {}\n      }\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return a lit-html TemplateResult.\n   * Setting properties inside this method will not trigger the element to update.\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  public render(): TemplateResult {\n    const defaultTemplate = this.renderTemplate('default', { people: this._foundPeople });\n    if (defaultTemplate) {\n      return defaultTemplate;\n    }\n\n    const selectedPeopleTemplate = this.renderSelectedPeople(this.selectedPeople);\n    const inputTemplate = this.renderInput();\n    const flyoutTemplate = this.renderFlyout(inputTemplate);\n\n    const inputClasses = {\n      focused: this._isFocused,\n      'people-picker': true,\n      disabled: this.disabled\n    };\n\n    return html`\n       <div dir=${this.direction} class=${classMap(inputClasses)}>\n          <div class=\"people-picker-inner\">${selectedPeopleTemplate} ${flyoutTemplate}</div>\n       </div>\n     `;\n  }\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtPeoplePicker\n   */\n  protected clearState(): void {\n    this.selectedPeople = [];\n    this.userInput = '';\n    this._highlightedUsers = [];\n    this._currentHighlightedUserPos = 0;\n  }\n\n  /**\n   * Request to reload the state.\n   * Use reload instead of load to ensure loading events are fired.\n   *\n   * @protected\n   * @memberof MgtBaseComponent\n   */\n  protected requestStateUpdate(force?: boolean) {\n    if (force) {\n      this._groupPeople = null;\n      this._foundPeople = null;\n      this.selectedPeople = [];\n      this.defaultPeople = null;\n    }\n\n    return super.requestStateUpdate(force);\n  }\n\n  /**\n   * Render the input text box.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderInput(): TemplateResult {\n    const hasSelectedPeople = this.selectedPeople?.length > 0;\n\n    const placeholder = !this.disabled\n      ? this.placeholder\n        ? this.placeholder\n        : this.strings.inputPlaceholderText\n      : this.placeholder || '';\n\n    const selectionMode = this.selectionMode ? this.selectionMode : 'multiple';\n\n    const inputClasses = {\n      'search-box': true,\n      'search-box-start': hasSelectedPeople\n    };\n\n    if (selectionMode === 'single' && this.selectedPeople.length >= 1) {\n      this.lostFocus();\n      return html``;\n    }\n\n    // aria-label needs to provide a falsy default to avoid setting the attribute to \"undefined\" or \"null\"\n    // direct used of the ariaLabel property on the input element only works in Chromium browsers\n    return html`\n       <div class=\"${classMap(inputClasses)}\">\n         <input\n           id=\"people-picker-input\"\n           class=\"search-box__input\"\n           type=\"text\"\n           role=\"combobox\"\n           placeholder=${placeholder}\n           autocomplete=\"off\"\n           aria-label=${this.ariaLabel || ''}\n           aria-controls=\"suggestions-list\"\n           aria-haspopup=\"listbox\"\n           aria-autocomplete=\"list\"\n           aria-expanded=\"false\"\n           @click=\"${this.handleInputClick}\"\n           @focus=\"${this.gainedFocus}\"\n           @keydown=\"${this.onUserKeyDown}\"\n           @keyup=\"${this.onUserKeyUp}\"\n           @input=\"${this.onUserInput}\"\n           @blur=${this.lostFocus}\n           ?disabled=${this.disabled}\n         />\n       </div>\n     `;\n  }\n\n  /**\n   * Render the selected people tokens.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderSelectedPeople(selectedPeople?: IDynamicPerson[]): TemplateResult {\n    if (!selectedPeople || !selectedPeople.length) {\n      return html``;\n    }\n    return html`\n       <ul\n        id=\"selected-list\"\n        aria-label=\"${this.strings.selected}\"\n        class=\"selected-list\"\n        >${selectedPeople.slice(0, selectedPeople.length).map(\n          person =>\n            html`\n             <li\n             class=\"selected-list__person-wrapper\">\n               ${\n                 this.renderTemplate(\n                   'selected-person',\n                   { person },\n                   `selected-${person.id ? person.id : person.displayName}`\n                 ) || this.renderSelectedPerson(person)\n               }\n\n               <div class=\"selected-list__person-wrapper__overflow\">\n                 <div class=\"selected-list__person-wrapper__overflow__gradient\"></div>\n                 <div\n                   tabindex=\"0\"\n                   role=\"button\"\n                   aria-label=\"${this.strings.removeSelectedItem} ${person.displayName}\"\n                   class=\"selected-list__person-wrapper__overflow__close-icon\"\n                   @click=\"${e => this.removePerson(person, e)}\"\n                   @keydown=\"${e => this.handleRemovePersonKeyDown(person, e)}\"\n                 >\n                   \\uE711\n                 </div>\n               </div>\n              </li>\n           `\n        )}</ul>\n     `;\n  }\n  /**\n   * Render the flyout chrome.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderFlyout(anchor: TemplateResult): TemplateResult {\n    return html`\n      <mgt-flyout light-dismiss class=\"flyout\">\n        ${anchor}\n        <div\n          slot=\"flyout\"\n          class=\"flyout-root\"\n          @wheel=${(e: WheelEvent) => this.handleSectionScroll(e)}\n          @keydown=${(e: KeyboardEvent) => this.onUserKeyDown(e)}\n        >\n          ${this.renderFlyoutContent()}\n        </div>\n      </mgt-flyout>\n    `;\n  }\n\n  /**\n   * Render the appropriate state in the results flyout.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderFlyoutContent(): TemplateResult {\n    if (this.isLoadingState || this._showLoading) {\n      return this.renderLoading();\n    }\n\n    const people = this._foundPeople;\n\n    if (!people || people.length === 0 || this.showMax === 0) {\n      return this.renderNoData();\n    } else {\n      return this.renderSearchResults(people);\n    }\n  }\n\n  /**\n   * Render the loading state.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPeoplePicker\n   */\n  protected renderLoading(): TemplateResult {\n    return (\n      this.renderTemplate('loading', null) ||\n      html`\n         <div class=\"message-parent\">\n           <mgt-spinner></mgt-spinner>\n           <div label=\"loading-text\" aria-label=\"loading\" class=\"loading-text\">\n             ${this.strings.loadingMessage}\n           </div>\n         </div>\n       `\n    );\n  }\n\n  /**\n   * Render the state when no results are found for the search query.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderNoData(): TemplateResult {\n    if (!this._isFocused) {\n      return;\n    }\n    return (\n      this.renderTemplate('error', null) ||\n      this.renderTemplate('no-data', null) ||\n      html`\n         <div class=\"message-parent\">\n           <div label=\"search-error-text\" aria-label=${this.strings.noResultsFound} class=\"search-error-text\">\n             ${this.strings.noResultsFound}\n           </div>\n         </div>\n       `\n    );\n  }\n\n  /**\n   * Render the list of search results.\n   *\n   * @protected\n   * @param {IDynamicPerson[]} people\n   * @returns\n   * @memberof MgtPeoplePicker\n   */\n  protected renderSearchResults(people: IDynamicPerson[]) {\n    const filteredPeople = people.filter(person => person.id);\n    return html`\n      <ul\n        id=\"suggestions-list\"\n        aria-label=\"${this.strings.suggestedContacts}\"\n        class=\"people-list\"\n        role=\"listbox\"\n        aria-live=\"polite\"\n      >\n         ${repeat(\n           filteredPeople,\n           person => person.id,\n           person => {\n             const lineTwo = person.jobTitle || (person as User).mail;\n             const ariaLabel = `${this.strings.suggestedContact} ${person.displayName} ${lineTwo ?? ''}`;\n             return html`\n               <li\n                id=\"${person.id}\"\n                aria-label=\"${ariaLabel}\"\n                class=\"list-person\"\n                role=\"option\"\n                @click=\"${e => this.handleSuggestionClick(person)}\">\n                  ${this.renderPersonResult(person)}\n               </li>\n             `;\n           }\n         )}\n       </ul>\n     `;\n  }\n\n  /**\n   * Render an individual person search result.\n   *\n   * @protected\n   * @param {IDynamicPerson} person\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderPersonResult(person: IDynamicPerson): TemplateResult {\n    const user = person as User;\n    const subTitle = user.jobTitle || user.mail;\n\n    const classes = {\n      'people-person-job-title': true,\n      uppercase: !!user.jobTitle\n    };\n\n    return (\n      this.renderTemplate('person', { person }, person.id) ||\n      html`\n         <mgt-person\n          .personDetails=${person}\n          .fetchImage=${!this.disableImages}\n          .personCardInteraction=${PersonCardInteraction.none}\n         ></mgt-person>\n         <div class=\"people-person-text-area\" id=\"${person.displayName}\">\n           ${this.renderHighlightText(person)}\n           <span class=\"${classMap(classes)}\">${subTitle}</span>\n         </div>\n       `\n    );\n  }\n\n  /**\n   * Render an individual selected person token.\n   *\n   * @protected\n   * @param {IDynamicPerson} person\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderSelectedPerson(person: IDynamicPerson): TemplateResult {\n    return html`\n       <mgt-person\n         tabindex=\"-1\"\n         class=\"selected-list__person-wrapper__person\"\n         .personDetails=${person}\n         .fetchImage=${!this.disableImages}\n         .view=${ViewType.oneline}\n         .personCardInteraction=${PersonCardInteraction.click}\n       ></mgt-person>\n     `;\n  }\n\n  /**\n   * Async query to Graph for members of group if determined by developer.\n   * set's `this.groupPeople` to those members.\n   */\n  protected async loadState(): Promise<void> {\n    let people = this.people;\n    const input = this.userInput.toLowerCase();\n    const provider = Providers.globalProvider;\n\n    if (people) {\n      if (input) {\n        const displayNameMatch = people.filter(person => person?.displayName.toLowerCase().includes(input));\n        people = displayNameMatch;\n      }\n      this._showLoading = false;\n    } else if (!people && provider && provider.state === ProviderState.SignedIn) {\n      const graph = provider.graph.forComponent(this);\n\n      if (!input.length && this._isFocused) {\n        if (this.defaultPeople) {\n          people = this.defaultPeople;\n        } else {\n          if (this.groupId || this.groupIds) {\n            if (this._groupPeople === null) {\n              if (this.groupId) {\n                try {\n                  if (this.type === PersonType.group) {\n                    this._groupPeople = await findGroupMembers(\n                      graph,\n                      null,\n                      this.groupId,\n                      this.showMax,\n                      this.type,\n                      this.transitiveSearch\n                    );\n                  } else {\n                    this._groupPeople = await findGroupMembers(\n                      graph,\n                      null,\n                      this.groupId,\n                      this.showMax,\n                      this.type,\n                      this.transitiveSearch,\n                      this.userFilters,\n                      this.peopleFilters\n                    );\n                  }\n                } catch (_) {\n                  this._groupPeople = [];\n                }\n              } else if (this.groupIds) {\n                if (this.type === PersonType.group) {\n                  try {\n                    this._groupPeople = await getGroupsForGroupIds(graph, this.groupIds, this.groupFilters);\n                  } catch (_) {\n                    this._groupPeople = [];\n                  }\n                } else {\n                  try {\n                    const peopleInGroups = await findUsersFromGroupIds(\n                      graph,\n                      '',\n                      this.groupIds,\n                      this.showMax,\n                      this.type,\n                      this.transitiveSearch,\n                      this.userFilters\n                    );\n                    this._groupPeople = peopleInGroups;\n                  } catch (_) {\n                    this._groupPeople = [];\n                  }\n                }\n              }\n            }\n            people = this._groupPeople || [];\n          } else if (this.type === PersonType.person || this.type === PersonType.any) {\n            if (this.userIds) {\n              people = await getUsersForUserIds(graph, this.userIds, '', this.userFilters);\n            } else {\n              const isUserOrContactType = this.userType === UserType.user || this.userType === UserType.contact;\n              if (this._userFilters && isUserOrContactType) {\n                people = await getUsers(graph, this._userFilters, this.showMax);\n              } else {\n                people = await getPeople(graph, this.userType, this._peopleFilters);\n              }\n            }\n          } else if (this.type === PersonType.group) {\n            if (this.groupIds) {\n              try {\n                people = await this.getGroupsForGroupIds(graph, people);\n              } catch (_) {}\n            } else {\n              let groups = (await findGroups(graph, '', this.showMax, this.groupType, this._groupFilters)) || [];\n              // tslint:disable: no-string-literal\n              if (groups.length > 0 && groups[0]['value']) {\n                groups = groups[0]['value'];\n              }\n              // tslint:enable: no-string-literal\n              people = groups;\n            }\n          }\n          this.defaultPeople = people;\n        }\n      }\n      this._showLoading = false;\n\n      if (\n        (this.defaultSelectedUserIds?.length > 0 || this.defaultSelectedGroupIds?.length > 0) &&\n        !this.selectedPeople.length &&\n        !this.defaultSelectedUsers\n      ) {\n        this.defaultSelectedUsers = await getUsersForUserIds(graph, this.defaultSelectedUserIds, '', this.userFilters);\n        this.defaultSelectedGroups = await getGroupsForGroupIds(\n          graph,\n          this.defaultSelectedGroupIds,\n          this.peopleFilters\n        );\n\n        this.defaultSelectedGroups = this.defaultSelectedGroups.filter(group => {\n          return group !== null;\n        });\n\n        this.defaultSelectedUsers = this.defaultSelectedUsers.filter(user => {\n          return user !== null;\n        });\n\n        this.selectedPeople = [...this.defaultSelectedUsers, ...this.defaultSelectedGroups];\n        this.requestUpdate();\n        this.fireCustomEvent('selectionChanged', this.selectedPeople);\n      }\n\n      if (input) {\n        people = [];\n\n        if (this.groupId) {\n          people =\n            (await findGroupMembers(\n              graph,\n              input,\n              this.groupId,\n              this.showMax,\n              this.type,\n              this.transitiveSearch,\n              this.userFilters,\n              this.peopleFilters\n            )) || [];\n        } else {\n          if (this.type === PersonType.person || this.type === PersonType.any) {\n            try {\n              // Default UserType === any\n              if (this.userType === UserType.contact || this.userType === UserType.user) {\n                // we might have a user-filters property set, search for users with it.\n                if (this.userIds && this.userIds.length) {\n                  // has the user-ids proerty set\n                  people = await getUsersForUserIds(graph, this.userIds, input, this._userFilters);\n                } else {\n                  people = await findUsers(graph, input, this.showMax, this._userFilters);\n                }\n              } else {\n                if (!this.groupIds) {\n                  if (this.userIds && this.userIds.length) {\n                    // has the user-ids proerty set\n                    people = await getUsersForUserIds(graph, this.userIds, input, this._userFilters);\n                  } else {\n                    people = (await findPeople(graph, input, this.showMax, this.userType, this._peopleFilters)) || [];\n                  }\n                } else {\n                  // Does not work when the PersonType = person.\n                  try {\n                    people = await findUsersFromGroupIds(\n                      graph,\n                      input,\n                      this.groupIds,\n                      this.showMax,\n                      this.type,\n                      this.transitiveSearch,\n                      this.userFilters\n                    );\n                  } catch (_) {}\n                }\n              }\n            } catch (e) {\n              // nop\n            }\n\n            // Don't follow this path if a people-filters attribute is set on the component as the\n            // default type === PersonType.person\n            if (\n              people &&\n              people.length < this.showMax &&\n              this.userType !== UserType.contact &&\n              this.type !== PersonType.person\n            ) {\n              try {\n                const users = (await findUsers(graph, input, this.showMax, this._userFilters)) || [];\n\n                // make sure only unique people\n                const peopleIds = new Set(people.map(p => p.id));\n                for (const user of users) {\n                  if (!peopleIds.has(user.id)) {\n                    people.push(user);\n                  }\n                }\n              } catch (e) {\n                // no-op\n              }\n            }\n          }\n\n          if ((this.type === PersonType.group || this.type === PersonType.any) && people.length < this.showMax) {\n            if (this.groupIds) {\n              try {\n                people = await findGroupsFromGroupIds(\n                  graph,\n                  input,\n                  this.groupIds,\n                  this.showMax,\n                  this.groupType,\n                  this.userFilters\n                );\n              } catch (_) {\n                // no-op\n              }\n            } else {\n              let groups = [];\n              try {\n                groups = (await findGroups(graph, input, this.showMax, this.groupType, this._groupFilters)) || [];\n                people = people.concat(groups);\n              } catch (e) {\n                // nop\n              }\n            }\n          }\n        }\n      }\n    }\n    // people = this.getUniquePeople(people);\n    this._foundPeople = this.filterPeople(people);\n  }\n\n  /**\n   * Gets the Groups in a list of group IDs.\n   *\n   * @param graph the graph object\n   * @param people already found groups\n   * @returns groups found\n   */\n  private async getGroupsForGroupIds(graph: IGraph, people: IDynamicPerson[]) {\n    const groups = await getGroupsForGroupIds(graph, this.groupIds, this.groupFilters);\n    for (const group of groups as IDynamicPerson[]) {\n      people = people.concat(group);\n    }\n    people = people.filter(person => person);\n    return people;\n  }\n\n  /**\n   * Hide the results flyout.\n   *\n   * @protected\n   * @memberof MgtPeoplePicker\n   */\n  protected hideFlyout(): void {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.close();\n    }\n    if (this.input) {\n      this.input.setAttribute('aria-expanded', 'false');\n      this.input.setAttribute('aria-activedescendant', '');\n    }\n    this._arrowSelectionCount = -1;\n  }\n\n  /**\n   * Show the results flyout.\n   *\n   * @protected\n   * @memberof MgtPeoplePicker\n   */\n  protected showFlyout(): void {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.open();\n    }\n    if (this.input) {\n      this.input.setAttribute('aria-expanded', 'true');\n    }\n    this._arrowSelectionCount = -1;\n  }\n\n  /**\n   * Removes person from selected people\n   * @param person - person and details pertaining to user selected\n   */\n  protected removePerson(person: IDynamicPerson, e: UIEvent): void {\n    e.stopPropagation();\n    const filteredPersonArr = this.selectedPeople.filter(p => {\n      if (!person.id && p.displayName) {\n        return p.displayName !== person.displayName;\n      }\n      return p.id !== person.id;\n    });\n    this.selectedPeople = filteredPersonArr;\n    this.loadState();\n    this.fireCustomEvent('selectionChanged', this.selectedPeople);\n    this.input?.focus();\n  }\n\n  /**\n   * Checks if key pressed is an `Enter` key before removing person\n   * @param person\n   * @param e\n   */\n  protected handleRemovePersonKeyDown(person: IDynamicPerson, e: KeyboardEvent): void {\n    if (e.key === 'Enter') {\n      this.removePerson(person, e);\n    }\n  }\n\n  /**\n   * Tracks when user selects person from picker\n   * @param person - contains details pertaining to selected user\n   * @param event - tracks user event\n   */\n  protected addPerson(person: IDynamicPerson): void {\n    if (person) {\n      setTimeout(() => {\n        this.clearInput();\n      }, 50);\n      const duplicatePeople = this.selectedPeople.filter(p => {\n        if (!person.id && p.displayName) {\n          return p.displayName === person.displayName;\n        }\n        return p.id === person.id;\n      });\n\n      if (duplicatePeople.length === 0) {\n        this.selectedPeople = [...this.selectedPeople, person];\n        this.fireCustomEvent('selectionChanged', this.selectedPeople);\n\n        this.loadState();\n        this._foundPeople = [];\n        this._arrowSelectionCount = -1;\n      }\n    }\n  }\n\n  private clearInput() {\n    this.clearHighlighted();\n    if (this.selectionMode !== 'single') {\n      this.input.value = '';\n    }\n    this.userInput = '';\n  }\n\n  // handle input click\n  private handleInputClick() {\n    if (!this.flyout.isOpen) {\n      this.handleUserSearch();\n    }\n  }\n\n  // handle input focus\n  private gainedFocus() {\n    this.clearHighlighted();\n    this._isFocused = true;\n    void this.loadState();\n    this.showFlyout();\n  }\n\n  // handle input blur\n  private lostFocus() {\n    this._isFocused = false;\n    if (this.input) {\n      this.input.setAttribute('aria-expanded', 'false');\n      this.input.setAttribute('aria-activedescendant', '');\n    }\n\n    const peopleList = this.renderRoot.querySelector('.people-list');\n\n    if (peopleList) {\n      for (const el of peopleList.children) {\n        el.classList.remove('focused');\n        el.setAttribute('aria-selected', 'false');\n      }\n    }\n\n    this.requestUpdate();\n  }\n\n  private renderHighlightText(person: IDynamicPerson): TemplateResult {\n    let first: string = '';\n    let last: string = '';\n    let highlight: string = '';\n\n    const displayName = person.displayName;\n    const highlightLocation = displayName.toLowerCase().indexOf(this.userInput.toLowerCase());\n    if (highlightLocation !== -1) {\n      const userInputLength = this.userInput.length;\n\n      // no location\n      if (highlightLocation === 0) {\n        // highlight is at the beginning of sentence\n        first = '';\n        highlight = displayName.slice(0, userInputLength);\n        last = displayName.slice(userInputLength, displayName.length);\n      } else if (highlightLocation === displayName.length) {\n        // highlight is at end of the sentence\n        first = displayName.slice(0, highlightLocation);\n        highlight = displayName.slice(highlightLocation, displayName.length);\n        last = '';\n      } else {\n        // highlight is in middle of sentence\n        first = displayName.slice(0, highlightLocation);\n        highlight = displayName.slice(highlightLocation, highlightLocation + userInputLength);\n        last = displayName.slice(highlightLocation + userInputLength, displayName.length);\n      }\n    } else {\n      first = person.displayName;\n    }\n\n    return html`\n       <div>\n         <span class=\"people-person-text\">${first}</span\n         ><span class=\"people-person-text highlight-search-text\">${highlight}</span\n         ><span class=\"people-person-text\">${last}</span>\n       </div>\n     `;\n  }\n\n  /**\n   * Handles input from the key up events on the keyboard.\n   */\n  private onUserKeyUp(event: KeyboardEvent): void {\n    const isPaste = (event.ctrlKey || event.metaKey) && event.key === 'v';\n    const isCmdOrCtrlKey = ['ControlLeft', 'ControlRight'].includes(event.code) || event.ctrlKey || event.metaKey;\n    const isArrowKey = ['ArrowDown', 'ArrowRight', 'ArrowUp', 'ArrowLeft'].includes(event.code);\n\n    if ((!isPaste && isCmdOrCtrlKey) || isArrowKey) {\n      if (isCmdOrCtrlKey || ['ArrowLeft', 'ArrowRight'].includes(event.code)) {\n        // Only hide the flyout when you're doing selections with Left/Right Arrow key\n        this.hideFlyout();\n      }\n\n      if (['ArrowDown'].includes(event.code)) {\n        if (!this.flyout.isOpen && this._isFocused) {\n          this.handleUserSearch();\n        }\n      }\n      return;\n    }\n\n    if (event.shiftKey) {\n      return;\n    }\n\n    if (event.code === 'ShiftLeft') {\n      return;\n    }\n\n    if (event.code === 'Tab') {\n      return;\n    }\n\n    if (event.code === 'Enter') {\n      return;\n    }\n\n    if (event.code === 'Escape') {\n      this.clearInput();\n      this._foundPeople = [];\n      this._arrowSelectionCount = -1;\n      return;\n    }\n\n    if (event.code === 'Backspace' && this.userInput.length === 0 && this.selectedPeople.length > 0) {\n      this.clearHighlighted();\n      // remove last person in selected list\n      this.selectedPeople = this.selectedPeople.splice(0, this.selectedPeople.length - 1);\n      this.loadState();\n      this.hideFlyout();\n      // fire selected people changed event\n      this.fireCustomEvent('selectionChanged', this.selectedPeople);\n      return;\n    }\n\n    if (event.code === 'Comma' || event.code === 'Semicolon') {\n      if (this.allowAnyEmail) {\n        this._setAnyEmail = true;\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      return;\n    }\n  }\n\n  private onUserInput(event: InputEvent) {\n    const input = event.target as HTMLInputElement;\n    this.userInput = input.value;\n    if (this.userInput) {\n      const validEmail = isValidEmail(this.userInput);\n      if (validEmail && this.allowAnyEmail) {\n        if (this._setAnyEmail) {\n          this.handleAnyEmail();\n        }\n      } else {\n        this.handleUserSearch();\n      }\n      this._setAnyEmail = false;\n    }\n  }\n\n  private handleAnyEmail() {\n    this._showLoading = false;\n    this._arrowSelectionCount = -1;\n    if (isValidEmail(this.userInput)) {\n      const anyMailUser = {\n        mail: this.userInput,\n        displayName: this.userInput\n      };\n      this.addPerson(anyMailUser);\n    }\n    this.hideFlyout();\n    if (this.input) {\n      this.input.focus();\n      this._isFocused = true;\n    }\n  }\n\n  // handle suggestion list item click\n  private handleSuggestionClick(person: IDynamicPerson): void {\n    this.addPerson(person);\n    this.hideFlyout();\n    this.input.focus();\n  }\n\n  /**\n   * Tracks event on user input in search\n   * @param input - input text\n   */\n  private handleUserSearch() {\n    if (!this._debouncedSearch) {\n      this._debouncedSearch = debounce(async () => {\n        const loadingTimeout = setTimeout(() => {\n          this._showLoading = true;\n        }, 50);\n\n        await this.loadState();\n        clearTimeout(loadingTimeout);\n        this._showLoading = false;\n        this._arrowSelectionCount = -1;\n        this.showFlyout();\n      }, 400);\n    }\n\n    this._debouncedSearch();\n  }\n\n  /**\n   * Tracks event on user search (keydown)\n   * @param event - event tracked on user input (keydown)\n   */\n  private onUserKeyDown(event: KeyboardEvent): void {\n    const selectedList = this.renderRoot.querySelector('.selected-list');\n    const isCmdOrCtrlKey = event.ctrlKey || event.metaKey;\n    if (isCmdOrCtrlKey && selectedList) {\n      const selectedPeople = selectedList.querySelectorAll('mgt-person.selected-list__person-wrapper__person');\n      this.hideFlyout();\n      if (isCmdOrCtrlKey && event.code === 'ArrowLeft') {\n        this._currentHighlightedUserPos =\n          (this._currentHighlightedUserPos - 1 + selectedPeople.length) % selectedPeople.length;\n        if (this._currentHighlightedUserPos >= 0 && !Number.isNaN(this._currentHighlightedUserPos)) {\n          this._highlightedUsers.push(selectedPeople[this._currentHighlightedUserPos]);\n        } else {\n          this._currentHighlightedUserPos = 0;\n        }\n      } else if (isCmdOrCtrlKey && event.code === 'ArrowRight') {\n        const person = this._highlightedUsers.pop();\n        if (person) {\n          const personParent = person.parentElement;\n          if (personParent) {\n            this.clearHighlighted(personParent);\n            this._currentHighlightedUserPos++;\n          }\n        }\n      } else if (isCmdOrCtrlKey && event.code === 'KeyA') {\n        this._highlightedUsers = [];\n        selectedPeople.forEach(person => this._highlightedUsers.push(person));\n      }\n      if (this._highlightedUsers) {\n        this.highlightSelectedPeople(this._highlightedUsers);\n      }\n      return;\n    }\n\n    this.clearHighlighted();\n\n    if (!this.flyout.isOpen) {\n      return;\n    }\n\n    const input = event.target as HTMLInputElement;\n\n    if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n      this.handleArrowSelection(event);\n      // prevent page from scrolling\n      event.preventDefault();\n    }\n\n    if (event.code === 'Enter') {\n      if (!event.shiftKey && this._foundPeople) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const foundPerson = this._foundPeople[this._arrowSelectionCount];\n        if (foundPerson) {\n          this.addPerson(foundPerson);\n          this.hideFlyout();\n          this.input.value = '';\n        }\n      } else if (this.allowAnyEmail) {\n        this.handleAnyEmail();\n      }\n    }\n\n    if (event.code == 'Escape') {\n      event.stopPropagation();\n    }\n\n    if (event.code === 'Tab') {\n      this.hideFlyout();\n    }\n\n    if (event.code === 'Comma' || event.code === 'Semicolon') {\n      if (this.allowAnyEmail) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userInput = input.value;\n        this.handleAnyEmail();\n      }\n    }\n  }\n\n  /**\n   * Gets the text of the highlighed people and writes it to the clipboard\n   */\n  private async writeHighlightedText() {\n    const copyText = [];\n    for (let i = 0; i < this._highlightedUsers.length; i++) {\n      const element: any = this._highlightedUsers[i];\n      const _personDetails = element._personDetails;\n      const { id, displayName, email, userPrincipalName, scoredEmailAddresses } = _personDetails;\n      let emailAddress: string;\n      if (scoredEmailAddresses && scoredEmailAddresses.length > 0) {\n        emailAddress = scoredEmailAddresses.pop().address;\n      } else {\n        emailAddress = userPrincipalName || email;\n      }\n\n      copyText.push({ id, displayName, email: emailAddress });\n    }\n    let copiedTextStr: string = '';\n    if (copyText.length > 0) {\n      copiedTextStr = JSON.stringify(copyText);\n    }\n\n    await navigator.clipboard.writeText(copiedTextStr);\n  }\n\n  /**\n   * Handles the cut event when it is fired\n   */\n  private async handleCut() {\n    await this.writeHighlightedText();\n    this.removeHighlightedOnCut();\n  }\n\n  /**\n   * Handles the copy event when it is fired\n   */\n  private async handleCopy() {\n    await this.writeHighlightedText();\n  }\n\n  /**\n   * Parses the copied people text and adds them when you paste\n   */\n  private async handlePaste() {\n    try {\n      const copiedText = await navigator.clipboard.readText();\n      if (copiedText) {\n        try {\n          const people = JSON.parse(copiedText);\n          if (people && people.length > 0) {\n            for (const person of people) {\n              this.addPerson(person);\n            }\n          }\n        } catch (error) {\n          if (error instanceof SyntaxError) {\n            const _delimeters = [',', ';'];\n            let listOfUsers: string[];\n            try {\n              for (let i = 0; i < _delimeters.length; i++) {\n                listOfUsers = copiedText.split(_delimeters[i]);\n                if (listOfUsers.length > 1) {\n                  this.hideFlyout();\n                  this.selectUsersById(listOfUsers);\n                  break;\n                }\n              }\n              // tslint:disable-next-line: no-empty\n            } catch (error) {}\n          }\n        }\n      }\n    } catch (error) {\n      // 'navigator.clipboard.readText is not a function' error is thrown in Mozilla\n      // more information here https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/readText#browser_compatibility\n      // Firefox only supports reading the clipboard in browser extensions,\n      // using the \"clipboardRead\" extension permission.\n    }\n  }\n\n  /**\n   * Removes only the highlighted elements from the peoplePicker during cut operations.\n   */\n  private removeHighlightedOnCut() {\n    this.selectedPeople = this.selectedPeople.splice(0, this.selectedPeople.length - this._highlightedUsers.length);\n    this._highlightedUsers = [];\n    this._currentHighlightedUserPos = 0;\n    this.loadState();\n    this.hideFlyout();\n    this.fireCustomEvent('selectionChanged', this.selectedPeople);\n  }\n  /**\n   * Changes the color class to show which people are selected for copy/cut-paste\n   * @param people list of selected people classes\n   */\n  private highlightSelectedPeople(people: Element[]) {\n    for (let i = 0; i < people.length; i++) {\n      const person = people[i];\n      const parentElement = person.parentElement;\n      parentElement.setAttribute('class', 'selected-list__person-wrapper-highlighted');\n\n      const personNodes = Array.from(parentElement.getElementsByClassName('selected-list__person-wrapper__person'));\n      if (personNodes && personNodes.length > 0) {\n        const personNode = personNodes.pop();\n        personNode.setAttribute('class', 'selected-list__person-wrapper-highlighted__person');\n      }\n\n      const gradientNodes = Array.from(\n        parentElement.getElementsByClassName('selected-list__person-wrapper__overflow__gradient')\n      );\n      if (gradientNodes && gradientNodes.length > 0) {\n        const gradientNode = gradientNodes.pop();\n        gradientNode.setAttribute('class', 'selected-list__person-wrapper-highlighted__overflow__gradient');\n      }\n\n      const closeIconNodes = Array.from(\n        parentElement.getElementsByClassName('selected-list__person-wrapper__overflow__close-icon')\n      );\n      if (closeIconNodes && closeIconNodes.length > 0) {\n        const closeIconNode = closeIconNodes.pop();\n        closeIconNode.setAttribute('class', 'selected-list__person-wrapper-highlighted__overflow__close-icon');\n      }\n    }\n  }\n\n  /**\n   * Defaults the people class back to the normal view\n   */\n  private clearHighlighted(node?: Element) {\n    if (node) {\n      this.clearNodeHighlights(node);\n    } else {\n      for (let i = 0; i < this._highlightedUsers.length; i++) {\n        const person = this._highlightedUsers[i];\n        const parentElement = person.parentElement;\n        if (parentElement) {\n          this.clearNodeHighlights(parentElement);\n        }\n      }\n      this._highlightedUsers = [];\n      this._currentHighlightedUserPos = 0;\n    }\n  }\n\n  /**\n   * Returns the original classes of a highlighted person element\n   * @param node a highlighted node element\n   */\n  private clearNodeHighlights(node: Element) {\n    node.setAttribute('class', 'selected-list__person-wrapper');\n\n    const personNodes = Array.from(node.getElementsByClassName('selected-list__person-wrapper-highlighted__person'));\n    if (personNodes && personNodes.length > 0) {\n      const personNode = personNodes.pop();\n      personNode.setAttribute('class', 'selected-list__person-wrapper__person');\n    }\n\n    const gradientNodes = Array.from(\n      node.getElementsByClassName('selected-list__person-wrapper-highlighted__overflow__gradient')\n    );\n    if (gradientNodes && gradientNodes.length > 0) {\n      const gradientNode = gradientNodes.pop();\n      gradientNode.setAttribute('class', 'selected-list__person-wrapper__overflow__gradient');\n    }\n\n    const closeIconNodes = Array.from(\n      node.getElementsByClassName('selected-list__person-wrapper-highlighted__overflow__close-icon')\n    );\n    if (closeIconNodes && closeIconNodes.length > 0) {\n      const closeIconNode = closeIconNodes.pop();\n      closeIconNode.setAttribute('class', 'selected-list__person-wrapper__overflow__close-icon');\n    }\n  }\n\n  /**\n   * Tracks user key selection for arrow key selection of people\n   * @param event - tracks user key selection\n   */\n  private handleArrowSelection(event?: KeyboardEvent): void {\n    const peopleList = this.renderRoot.querySelector('.people-list');\n\n    if (peopleList && peopleList.children.length) {\n      if (event) {\n        // update arrow count\n        if (event.key === 'ArrowUp') {\n          if (this._arrowSelectionCount === -1) {\n            this._arrowSelectionCount = 0;\n          } else {\n            this._arrowSelectionCount =\n              (this._arrowSelectionCount - 1 + peopleList.children.length) % peopleList.children.length;\n          }\n        }\n        if (event.key === 'ArrowDown') {\n          if (this._arrowSelectionCount === -1) {\n            this._arrowSelectionCount = 0;\n          } else {\n            this._arrowSelectionCount =\n              (this._arrowSelectionCount + 1 + peopleList.children.length) % peopleList.children.length;\n          }\n        }\n      }\n\n      // reset background color\n      // reset aria-selected to false\n      for (const person of peopleList?.children) {\n        const p = person as HTMLElement;\n        p.setAttribute('aria-selected', 'false');\n        p.removeAttribute('tabindex');\n        p.blur();\n      }\n\n      // set selected background\n      // set aria-selected to true\n      const focusedItem = peopleList.children[this._arrowSelectionCount] as HTMLElement;\n\n      if (focusedItem) {\n        focusedItem.setAttribute('tabindex', '0');\n        focusedItem.focus();\n        focusedItem.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'nearest' });\n        focusedItem.setAttribute('aria-selected', 'true');\n        this.input.setAttribute('aria-activedescendant', focusedItem.id);\n      }\n    }\n  }\n\n  /**\n   * Filters people searched from already selected people\n   * @param people - array of people returned from query to Graph\n   */\n  private filterPeople(people: IDynamicPerson[]): IDynamicPerson[] {\n    // check if people need to be updated\n    // ensuring people list is displayed\n    // find ids from selected people\n    if (people && people.length > 0) {\n      people = people.filter(person => person);\n      const idFilter = this.selectedPeople.map(el => {\n        return el.id ? el.id : el.displayName;\n      });\n\n      // filter id's\n      const filtered = people.filter((person: IDynamicPerson) => {\n        if (person?.id) {\n          return idFilter.indexOf(person.id) === -1;\n        } else {\n          return idFilter.indexOf(person?.displayName) === -1;\n        }\n      });\n\n      // remove duplicates\n      const dupsSet: Set<string> = new Set();\n      for (let i = 0; i < filtered.length; i++) {\n        const person = JSON.stringify(filtered[i]);\n        dupsSet.add(person);\n      }\n      const uniquePeople: IDynamicPerson[] = [];\n\n      dupsSet.forEach((person: string) => {\n        const p: IDynamicPerson = JSON.parse(person) as IDynamicPerson;\n        uniquePeople.push(p);\n      });\n      return uniquePeople;\n    }\n  }\n\n  // stop propagating wheel event to flyout so mouse scrolling works\n  private handleSectionScroll(e: WheelEvent) {\n    const target = this.renderRoot.querySelector('.flyout-root') as HTMLElement;\n    if (target) {\n      if (\n        !(e.deltaY < 0 && target.scrollTop === 0) &&\n        !(e.deltaY > 0 && target.clientHeight + target.scrollTop >= target.scrollHeight - 1)\n      ) {\n        e.stopPropagation();\n      }\n    }\n  }\n}\n"]}