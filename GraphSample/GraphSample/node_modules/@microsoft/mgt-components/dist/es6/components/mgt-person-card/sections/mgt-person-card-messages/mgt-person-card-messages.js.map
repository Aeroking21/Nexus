{"version":3,"file":"mgt-person-card-messages.js","sourceRoot":"src/","sources":["components/mgt-person-card/sections/mgt-person-card-messages/mgt-person-card-messages.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { Message } from '@microsoft/microsoft-graph-types';\nimport { customElement, html, TemplateResult } from 'lit-element';\n\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getSvg, SvgIcon } from '../../../../utils/SvgHelper';\nimport { getRelativeDisplayDate } from '../../../../utils/Utils';\nimport { styles } from './mgt-person-card-messages-css';\nimport { strings } from './strings';\n\n/**\n * The email messages subsection of the person card\n *\n * @export\n * @class MgtPersonCardMessages\n * @extends {MgtTemplatedComponent}\n */\n@customElement('mgt-person-card-messages')\nexport class MgtPersonCardMessages extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  private _messages: Message[];\n\n  public constructor(messages: Message[]) {\n    super();\n    this._messages = messages;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtPersonCardMessages\n   */\n  public get displayName(): string {\n    return this.strings.emailsSectionTitle;\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtPersonCardMessages\n   */\n  public clearState(): void {\n    super.clearState();\n    this._messages = [];\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardMessages\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Messages);\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardMessages\n   */\n  public renderCompactView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (this.isLoadingState) {\n      contentTemplate = this.renderLoading();\n    } else if (!this._messages || !this._messages.length) {\n      contentTemplate = this.renderNoData();\n    } else {\n      const messageTemplates = this._messages\n        ? this._messages.slice(0, 3).map(message => this.renderMessage(message))\n        : [];\n      contentTemplate = html`\n        ${messageTemplates}\n      `;\n    }\n\n    return html`\n      <div class=\"root compact\">\n        ${contentTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardMessages\n   */\n  protected renderFullView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (this.isLoadingState) {\n      contentTemplate = this.renderLoading();\n    } else if (!this._messages || !this._messages.length) {\n      contentTemplate = this.renderNoData();\n    } else {\n      contentTemplate = html`\n        ${this._messages.slice(0, 5).map(message => this.renderMessage(message))}\n      `;\n    }\n\n    return html`\n      <div class=\"root\">\n        <div class=\"title\" tabindex=\"0\">${this.strings.emailsSectionTitle}</div>\n        ${contentTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render a message item\n   *\n   * @protected\n   * @param {IMessage} message\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardMessages\n   */\n  protected renderMessage(message: Message): TemplateResult {\n    return html`\n      <div class=\"message\" @click=${() => this.handleMessageClick(message)}>\n        <div class=\"message__detail\">\n          <div class=\"message__subject\">${message.subject}</div>\n          <div class=\"message__from\">${message.from.emailAddress.name}</div>\n          <div class=\"message__message\">${message.bodyPreview}</div>\n        </div>\n        <div class=\"message__date\">${getRelativeDisplayDate(new Date(message.receivedDateTime))}</div>\n      </div>\n    `;\n  }\n\n  private handleMessageClick(message: Message): void {\n    window.open(message.webLink, '_blank', 'noreferrer');\n  }\n}\n"]}