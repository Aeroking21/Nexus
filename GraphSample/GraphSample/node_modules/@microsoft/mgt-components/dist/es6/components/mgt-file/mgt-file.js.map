{"version":3,"file":"mgt-file.js","sourceRoot":"src/","sources":["components/mgt-file/mgt-file.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { DriveItem } from '@microsoft/microsoft-graph-types';\nimport { customElement, html, property, TemplateResult } from 'lit-element';\nimport { styles } from './mgt-file-css';\nimport { MgtTemplatedComponent, Providers, ProviderState } from '@microsoft/mgt-element';\nimport {\n  getDriveItemById,\n  getDriveItemByPath,\n  getDriveItemByQuery,\n  getGroupDriveItemById,\n  getGroupDriveItemByPath,\n  getListDriveItemById,\n  getMyDriveItemById,\n  getMyDriveItemByPath,\n  getMyInsightsDriveItemById,\n  getSiteDriveItemById,\n  getSiteDriveItemByPath,\n  getUserDriveItemById,\n  getUserDriveItemByPath,\n  getUserInsightsDriveItemById\n} from '../../graph/graph.files';\nimport { getRelativeDisplayDate } from '../../utils/Utils';\nimport { OfficeGraphInsightString, ViewType } from '../../graph/types';\nimport { getFileTypeIconUriByExtension } from '../../styles/fluent-icons';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { strings } from './strings';\n\n/**\n * The File component is used to represent an individual file/folder from OneDrive or SharePoint by displaying information such as the file/folder name, an icon indicating the file type, and other properties such as the author, last modified date, or other details selected by the developer.\n *\n * @export\n * @class MgtFile\n * @extends {MgtTemplatedComponent}\n *\n * @cssprop --file-type-icon-size - {Length} file type icon size\n * @cssprop --file-border - {String} file item border style\n * @cssprop --file-box-shadow - {String} file item box shadow style\n * @cssprop --file-background-color - {Color} file background color\n * @cssprop --font-family - {String} Font family\n * @cssprop --font-size - {Length} Font size\n * @cssprop --font-weight - {Length} Font weight\n * @cssprop --text-transform - {String} text transform\n * @cssprop --color -{Color} text color\n * @cssprop --line2-font-size - {Length} Line 2 font size\n * @cssprop --line2-font-weight - {Length} Line 2 font weight\n * @cssprop --line2-color - {Color} Line 2 color\n * @cssprop --line2-text-transform - {String} Line 2 text transform\n * @cssprop --line3-font-size - {Length} Line 2 font size\n * @cssprop --line3-font-weight - {Length} Line 2 font weight\n * @cssprop --line3-color - {Color} Line 2 color\n * @cssprop --line3-text-transform - {String} Line 2 text transform\n */\n\n@customElement('mgt-file')\nexport class MgtFile extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * allows developer to provide query for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'file-query'\n  })\n  public get fileQuery(): string {\n    return this._fileQuery;\n  }\n  public set fileQuery(value: string) {\n    if (value === this._fileQuery) {\n      return;\n    }\n\n    this._fileQuery = value;\n    this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide site id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'site-id'\n  })\n  public get siteId(): string {\n    return this._siteId;\n  }\n  public set siteId(value: string) {\n    if (value === this._siteId) {\n      return;\n    }\n\n    this._siteId = value;\n    this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide drive id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'drive-id'\n  })\n  public get driveId(): string {\n    return this._driveId;\n  }\n  public set driveId(value: string) {\n    if (value === this._driveId) {\n      return;\n    }\n\n    this._driveId = value;\n    this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide group id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'group-id'\n  })\n  public get groupId(): string {\n    return this._groupId;\n  }\n  public set groupId(value: string) {\n    if (value === this._groupId) {\n      return;\n    }\n\n    this._groupId = value;\n    this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide list id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'list-id'\n  })\n  public get listId(): string {\n    return this._listId;\n  }\n  public set listId(value: string) {\n    if (value === this._listId) {\n      return;\n    }\n\n    this._listId = value;\n    this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide user id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'user-id'\n  })\n  public get userId(): string {\n    return this._userId;\n  }\n  public set userId(value: string) {\n    if (value === this._userId) {\n      return;\n    }\n\n    this._userId = value;\n    this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide item id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'item-id'\n  })\n  public get itemId(): string {\n    return this._itemId;\n  }\n  public set itemId(value: string) {\n    if (value === this._itemId) {\n      return;\n    }\n\n    this._itemId = value;\n    this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide item path for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'item-path'\n  })\n  public get itemPath(): string {\n    return this._itemPath;\n  }\n  public set itemPath(value: string) {\n    if (value === this._itemPath) {\n      return;\n    }\n\n    this._itemPath = value;\n    this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide insight type for a file\n   * can be trending, used, or shared\n   *\n   * @type {OfficeGraphInsightString}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'insight-type'\n  })\n  public get insightType(): OfficeGraphInsightString {\n    return this._insightType;\n  }\n  public set insightType(value: OfficeGraphInsightString) {\n    if (value === this._insightType) {\n      return;\n    }\n\n    this._insightType = value;\n    this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide insight id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'insight-id'\n  })\n  public get insightId(): string {\n    return this._insightId;\n  }\n  public set insightId(value: string) {\n    if (value === this._insightId) {\n      return;\n    }\n\n    this._insightId = value;\n    this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide DriveItem object\n   *\n   * @type {MicrosoftGraph.DriveItem}\n   * @memberof MgtFile\n   */\n  @property({\n    type: Object\n  })\n  public get fileDetails(): DriveItem {\n    return this._fileDetails;\n  }\n  public set fileDetails(value: DriveItem) {\n    if (value === this._fileDetails) {\n      return;\n    }\n\n    this._fileDetails = value;\n    this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide file type icon url\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'file-icon'\n  })\n  public get fileIcon(): string {\n    return this._fileIcon;\n  }\n  public set fileIcon(value: string) {\n    if (value === this._fileIcon) {\n      return;\n    }\n\n    this._fileIcon = value;\n    this.requestStateUpdate();\n  }\n\n  /**\n   * object containing Graph details on item\n   *\n   * @type {MicrosoftGraph.DriveItem}\n   * @memberof MgtFile\n   */\n  @property({ type: Object })\n  public driveItem: DriveItem;\n\n  /**\n   * Sets the property of the file to use for the first line of text.\n   * Default is file name\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({ attribute: 'line1-property' }) public line1Property: string;\n\n  /**\n   * Sets the property of the file to use for the second line of text.\n   * Default is last modified date time\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({ attribute: 'line2-property' }) public line2Property: string;\n\n  /**\n   * Sets the property of the file to use for the second line of text.\n   * Default is file size\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({ attribute: 'line3-property' }) public line3Property: string;\n\n  /**\n   * Sets what data to be rendered (file icon only, oneLine, twoLines threeLines).\n   * Default is 'threeLines'.\n   *\n   * @type {ViewType}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'view',\n    converter: value => {\n      if (!value || value.length === 0) {\n        return ViewType.threelines;\n      }\n\n      value = value.toLowerCase();\n\n      if (typeof ViewType[value] === 'undefined') {\n        return ViewType.threelines;\n      } else {\n        return ViewType[value];\n      }\n    }\n  })\n  public view: ViewType;\n\n  /**\n   * Get the scopes required for file\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtFile\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set(['files.read', 'files.read.all', 'sites.read.all'])];\n  }\n\n  private _fileQuery: string;\n  private _siteId: string;\n  private _itemId: string;\n  private _driveId: string;\n  private _itemPath: string;\n  private _listId: string;\n  private _groupId: string;\n  private _userId: string;\n  private _insightType: OfficeGraphInsightString;\n  private _insightId: string;\n  private _fileDetails: DriveItem;\n  private _fileIcon: string;\n\n  constructor() {\n    super();\n    this.line1Property = 'name';\n    this.line2Property = 'lastModifiedDateTime';\n    this.line3Property = 'size';\n    this.view = ViewType.threelines;\n  }\n\n  public render() {\n    if (!this.driveItem && this.isLoadingState) {\n      return this.renderLoading();\n    }\n\n    if (!this.driveItem) {\n      return this.renderNoData();\n    }\n\n    const file = this.driveItem;\n    let fileTemplate;\n\n    fileTemplate = this.renderTemplate('default', { file });\n    if (!fileTemplate) {\n      const fileDetailsTemplate: TemplateResult = this.renderDetails(file);\n      const fileTypeIconTemplate: TemplateResult = this.renderFileTypeIcon();\n\n      fileTemplate = html`\n        <div class=\"item\">\n          ${fileTypeIconTemplate} ${fileDetailsTemplate}\n        </div>\n      `;\n    }\n\n    return html`\n      <span dir=${this.direction}>\n        ${fileTemplate}\n      </span>\n    `;\n  }\n\n  /**\n   * Render the loading state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFile\n   */\n  protected renderLoading(): TemplateResult {\n    return this.renderTemplate('loading', null) || html``;\n  }\n\n  /**\n   * Render the state when no data is available\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFile\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * Render the file type icon\n   *\n   * @protected\n   * @param {string} [iconSrc]\n   * @memberof MgtFile\n   */\n  protected renderFileTypeIcon(): TemplateResult {\n    if (!this.fileIcon && !this.driveItem.name) {\n      return html``;\n    }\n\n    let fileIconSrc;\n\n    if (this.fileIcon) {\n      fileIconSrc = this.fileIcon;\n    } else {\n      // get file type extension from file name\n      const re = /(?:\\.([^.]+))?$/;\n      const fileType =\n        this.driveItem.package === undefined && this.driveItem.folder === undefined\n          ? re.exec(this.driveItem.name)[1]\n            ? re.exec(this.driveItem.name)[1].toLowerCase()\n            : 'null'\n          : this.driveItem.package !== undefined\n          ? this.driveItem.package.type === 'oneNote'\n            ? 'onetoc'\n            : 'folder'\n          : 'folder';\n      fileIconSrc = getFileTypeIconUriByExtension(fileType, 48, 'svg');\n    }\n\n    return html`\n      <div class=\"item__file-type-icon\">\n        ${\n          fileIconSrc\n            ? html`\n              <img src=${fileIconSrc} alt=\"File icon\" />\n            `\n            : html`\n              ${getSvg(SvgIcon.File)}\n            `\n        }\n      </div>\n    `;\n  }\n\n  /**\n   * Render the file details\n   *\n   * @protected\n   * @param {MicrosoftGraph.DriveItem} [driveItem]\n   * @memberof MgtFile\n   */\n  protected renderDetails(driveItem: DriveItem): TemplateResult {\n    if (!driveItem || this.view === ViewType.image) {\n      return html``;\n    }\n\n    const details: TemplateResult[] = [];\n\n    if (this.view > ViewType.image) {\n      const text = this.getTextFromProperty(driveItem, this.line1Property);\n      if (text) {\n        details.push(html`\n          <div class=\"line1\" aria-label=\"${text}\">${text}</div>\n        `);\n      }\n    }\n\n    if (this.view > ViewType.oneline) {\n      const text = this.getTextFromProperty(driveItem, this.line2Property);\n      if (text) {\n        details.push(html`\n          <div class=\"line2\" aria-label=\"${text}\">${text}</div>\n        `);\n      }\n    }\n\n    if (this.view > ViewType.twolines) {\n      const text = this.getTextFromProperty(driveItem, this.line3Property);\n      if (text) {\n        details.push(html`\n          <div class=\"line3\" aria-label=\"${text}\">${text}</div>\n        `);\n      }\n    }\n\n    return html`\n      <div class=\"item__details\">\n        ${details}\n      </div>\n    `;\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtFile\n   */\n  protected async loadState() {\n    if (this.fileDetails) {\n      this.driveItem = this.fileDetails;\n      return;\n    }\n\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state === ProviderState.Loading) {\n      return;\n    }\n\n    if (provider.state === ProviderState.SignedOut) {\n      this.driveItem = null;\n      return;\n    }\n\n    const graph = provider.graph.forComponent(this);\n    let driveItem;\n\n    // evaluate to true when only item-id or item-path is provided\n    const getFromMyDrive = !this.driveId && !this.siteId && !this.groupId && !this.listId && !this.userId;\n\n    if (\n      // return null when a combination of provided properties are required\n      (this.driveId && !this.itemId && !this.itemPath) ||\n      (this.siteId && !this.itemId && !this.itemPath) ||\n      (this.groupId && !this.itemId && !this.itemPath) ||\n      (this.listId && !this.siteId && !this.itemId) ||\n      (this.insightType && !this.insightId) ||\n      (this.userId && !this.itemId && !this.itemPath && !this.insightType && !this.insightId)\n    ) {\n      driveItem = null;\n    } else if (this.fileQuery) {\n      driveItem = await getDriveItemByQuery(graph, this.fileQuery);\n    } else if (this.itemId && getFromMyDrive) {\n      driveItem = await getMyDriveItemById(graph, this.itemId);\n    } else if (this.itemPath && getFromMyDrive) {\n      driveItem = await getMyDriveItemByPath(graph, this.itemPath);\n    } else if (this.userId) {\n      if (this.itemId) {\n        driveItem = await getUserDriveItemById(graph, this.userId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getUserDriveItemByPath(graph, this.userId, this.itemPath);\n      } else if (this.insightType && this.insightId) {\n        driveItem = await getUserInsightsDriveItemById(graph, this.userId, this.insightType, this.insightId);\n      }\n    } else if (this.driveId) {\n      if (this.itemId) {\n        driveItem = await getDriveItemById(graph, this.driveId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getDriveItemByPath(graph, this.driveId, this.itemPath);\n      }\n    } else if (this.siteId && !this.listId) {\n      if (this.itemId) {\n        driveItem = await getSiteDriveItemById(graph, this.siteId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getSiteDriveItemByPath(graph, this.siteId, this.itemPath);\n      }\n    } else if (this.listId) {\n      driveItem = await getListDriveItemById(graph, this.siteId, this.listId, this.itemId);\n    } else if (this.groupId) {\n      if (this.itemId) {\n        driveItem = await getGroupDriveItemById(graph, this.groupId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getGroupDriveItemByPath(graph, this.groupId, this.itemPath);\n      }\n    } else if (this.insightType && !this.userId) {\n      driveItem = await getMyInsightsDriveItemById(graph, this.insightType, this.insightId);\n    }\n\n    this.driveItem = driveItem;\n  }\n\n  private getTextFromProperty(driveItem: DriveItem, properties: string) {\n    if (!properties || properties.length === 0) {\n      return null;\n    }\n\n    const propertyList = properties.trim().split(',');\n    let text;\n    let i = 0;\n\n    while (!text && i < propertyList.length) {\n      const current = propertyList[i].trim();\n      switch (current) {\n        case 'size':\n          // convert size to kb, mb, gb\n          let size;\n          if (driveItem.size) {\n            size = this.formatBytes(driveItem.size);\n          } else {\n            size = '0';\n          }\n          text = `${this.strings.sizeSubtitle}: ${size}`;\n          break;\n        case 'lastModifiedDateTime':\n          // convert date time\n          let relativeDateString;\n          let lastModifiedString;\n          if (driveItem.lastModifiedDateTime) {\n            const lastModifiedDateTime = new Date(driveItem.lastModifiedDateTime);\n            relativeDateString = getRelativeDisplayDate(lastModifiedDateTime);\n            lastModifiedString = `${this.strings.modifiedSubtitle} ${relativeDateString}`;\n          } else {\n            lastModifiedString = '';\n          }\n          text = lastModifiedString;\n          break;\n        default:\n          text = driveItem[current];\n      }\n      i++;\n    }\n\n    return text;\n  }\n\n  private formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n}\n"]}