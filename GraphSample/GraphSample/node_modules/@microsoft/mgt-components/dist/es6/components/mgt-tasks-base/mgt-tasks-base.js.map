{"version":3,"file":"mgt-tasks-base.js","sourceRoot":"src/","sources":["components/mgt-tasks-base/mgt-tasks-base.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, property, TemplateResult } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { ComponentMediaQuery, Providers, ProviderState, MgtTemplatedComponent } from '@microsoft/mgt-element';\nimport { strings } from './strings';\n\n/**\n * The foundation for creating task based components.\n *\n * @export\n * @class MgtTasksBase\n * @extends {MgtTemplatedComponent}\n */\nexport abstract class MgtTasksBase extends MgtTemplatedComponent {\n  /**\n   * determines if tasks are un-editable\n   * @type {boolean}\n   */\n  @property({ attribute: 'read-only', type: Boolean })\n  public readOnly: boolean;\n\n  /**\n   * sets whether the header is rendered\n   *\n   * @type {boolean}\n   * @memberof MgtTasks\n   */\n  @property({ attribute: 'hide-header', type: Boolean })\n  public hideHeader: boolean;\n\n  /**\n   * sets whether the options are rendered\n   *\n   * @type {boolean}\n   * @memberof MgtTasks\n   */\n  @property({ attribute: 'hide-options', type: Boolean })\n  public hideOptions: boolean;\n\n  /**\n   * if set, the component will only show tasks from the target list\n   * @type {string}\n   */\n  @property({ attribute: 'target-id', type: String })\n  public targetId: string;\n\n  /**\n   * if set, the component will first show tasks from this list\n   *\n   * @type {string}\n   * @memberof MgtTodo\n   */\n  @property({ attribute: 'initial-id', type: String })\n  public initialId: string;\n\n  /**\n   * The name of a potential new task\n   *\n   * @readonly\n   * @protected\n   * @type {string}\n   * @memberof MgtTasksBase\n   */\n  protected get newTaskName(): string {\n    return this._newTaskName;\n  }\n\n  private _isNewTaskBeingAdded: boolean;\n  private _isNewTaskVisible: boolean;\n  private _newTaskName: string;\n  private _previousMediaQuery: ComponentMediaQuery;\n\n  protected get strings(): { [x: string]: string } {\n    return strings;\n  }\n\n  constructor() {\n    super();\n\n    this.clearState();\n    this._previousMediaQuery = this.mediaQuery;\n    this.onResize = this.onResize.bind(this);\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * @param {*} name\n   * @param {*} oldValue\n   * @param {*} newValue\n   * @memberof MgtTasks\n   */\n  public attributeChangedCallback(name: string, oldVal: string, newVal: string) {\n    super.attributeChangedCallback(name, oldVal, newVal);\n    switch (name) {\n      case 'target-id':\n      case 'initial-id':\n        this.clearState();\n        this.requestStateUpdate();\n        break;\n    }\n  }\n\n  /**\n   * updates provider state\n   *\n   * @memberof MgtTasks\n   */\n  public connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener('resize', this.onResize);\n  }\n\n  /**\n   * removes updates on provider state\n   *\n   * @memberof MgtTasks\n   */\n  public disconnectedCallback() {\n    window.removeEventListener('resize', this.onResize);\n    super.disconnectedCallback();\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return html``;\n    }\n\n    if (this.isLoadingState) {\n      return this.renderLoadingTask();\n    }\n\n    const headerTemplate = !this.hideHeader ? this.renderHeader() : null;\n    const newTaskTemplate = this._isNewTaskVisible ? this.renderNewTaskPanel() : null;\n    const tasksTemplate = this.isLoadingState ? this.renderLoadingTask() : this.renderTasks();\n\n    return html`\n      ${headerTemplate} ${newTaskTemplate}\n      <div class=\"Tasks\" dir=${this.direction}>\n        ${tasksTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the header part of the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTodo\n   */\n  protected renderHeader() {\n    const headerContentTemplate = this.renderHeaderContent();\n\n    const addClasses = classMap({\n      AddBarItem: true,\n      NewTaskButton: true,\n      hidden: this.readOnly || this._isNewTaskVisible\n    });\n\n    return html`\n      <div class=\"Header\" dir=${this.direction}>\n        ${headerContentTemplate}\n        <button class=\"${addClasses}\" @click=\"${() => this.showNewTaskPanel()}\">\n          <span class=\"TaskIcon\"></span>\n          <span>${this.strings.addTaskButtonSubtitle}</span>\n        </button>\n      </div>\n    `;\n  }\n\n  /**\n   * Render a task in a loading state.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTodo\n   */\n  protected renderLoadingTask() {\n    return html`\n      <div class=\"Task LoadingTask\">\n        <div class=\"TaskContent\">\n          <div class=\"TaskCheckContainer\">\n            <div class=\"TaskCheck\"></div>\n          </div>\n          <div class=\"TaskDetailsContainer\">\n            <div class=\"TaskTitle\"></div>\n            <div class=\"TaskDetails\">\n              <span class=\"TaskDetail\">\n                <div class=\"TaskDetailIcon\"></div>\n                <div class=\"TaskDetailName\"></div>\n              </span>\n              <span class=\"TaskDetail\">\n                <div class=\"TaskDetailIcon\"></div>\n                <div class=\"TaskDetailName\"></div>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Render the panel for creating a new task\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtTasksBase\n   */\n  protected renderNewTaskPanel(): TemplateResult {\n    const newTaskName = this._newTaskName;\n\n    const taskTitle = html`\n      <input\n        type=\"text\"\n        placeholder=\"${this.strings.newTaskPlaceholder}\"\n        .value=\"${newTaskName}\"\n        label=\"new-taskName-input\"\n        aria-label=\"new-taskName-input\"\n        role=\"textbox\"\n        @input=\"${(e: Event) => {\n          this._newTaskName = (e.target as HTMLInputElement).value;\n          this.requestUpdate();\n        }}\"\n      />\n    `;\n\n    const taskAddClasses = classMap({\n      Disabled: !this._isNewTaskBeingAdded && (!newTaskName || !newTaskName.length),\n      TaskAddButtonContainer: true\n    });\n    const taskAddTemplate = !this._isNewTaskBeingAdded\n      ? html`\n          <div\n            tabindex='0'\n            class=\"TaskIcon TaskAdd\"\n            @click=\"${() => this.addTask()}\"\n            @keypress=\"${(e: KeyboardEvent) => {\n              if (e.key === 'Enter' || e.key === ' ') this.addTask();\n            }}\"\n          >\n          <span>${this.strings.addTaskButtonSubtitle}</span>\n          </div>\n          <div\n            role='button'\n            tabindex='0'\n            class=\"TaskIcon TaskCancel\"\n            @click=\"${() => this.hideNewTaskPanel()}\"\n            @keypress=\"${(e: KeyboardEvent) => {\n              if (e.key === 'Enter' || e.key === ' ') this.hideNewTaskPanel();\n            }}\">\n            <span>${this.strings.cancelNewTaskSubtitle}</span>\n          </div>\n        `\n      : null;\n\n    const newTaskDetailsTemplate = this.renderNewTaskDetails();\n\n    return html`\n      <div dir=${this.direction} class=\"Task NewTask Incomplete\">\n        <div class=\"TaskContent\">\n          <div class=\"TaskDetailsContainer\">\n            <div class=\"TaskTitle\">\n              ${taskTitle}\n            </div>\n            <div class=\"TaskDetails\">\n              ${newTaskDetailsTemplate}\n            </div>\n          </div>\n        </div>\n        <div class=\"${taskAddClasses}\">\n          ${taskAddTemplate}\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Render the top header part of the component.\n   *\n   * @protected\n   * @abstract\n   * @returns {TemplateResult}\n   * @memberof MgtTasksBase\n   */\n  protected abstract renderHeaderContent(): TemplateResult;\n\n  /**\n   * Render the details part of the new task panel\n   *\n   * @protected\n   * @abstract\n   * @returns {TemplateResult}\n   * @memberof MgtTasksBase\n   */\n  protected abstract renderNewTaskDetails(): TemplateResult;\n\n  /**\n   * Render the list of todo tasks\n   *\n   * @protected\n   * @abstract\n   * @param {ITask[]} tasks\n   * @returns {TemplateResult}\n   * @memberof MgtTasksBase\n   */\n  protected abstract renderTasks(): TemplateResult;\n\n  /**\n   * Render a bucket icon.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTodo\n   */\n  protected renderBucketIcon() {\n    return html`\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M14 2H2V4H3H5H6H10H11H13H14V2ZM10 5H6V6H10V5ZM5 5H3V14H13V5H11V6C11 6.55228 10.5523 7 10 7H6C5.44772 7 5 6.55228 5 6V5ZM1 5H2V14V15H3H13H14V14V5H15V4V2V1H14H2H1V2V4V5Z\"\n          fill=\"#3C3C3C\"\n        />\n      </svg>\n    `;\n  }\n\n  /**\n   * Render a calendar icon.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTodo\n   */\n  protected renderCalendarIcon() {\n    return html`\n        <svg width=\"16\" height=\"20\" viewBox=\"0 0 16 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M5 11C5.55228 11 6 10.5523 6 10C6 9.44771 5.55228 9 5 9C4.44772 9 4 9.44771 4 10C4 10.5523 4.44772 11 5 11ZM6 13C6 13.5523 5.55228 14 5 14C4.44772 14 4 13.5523 4 13C4 12.4477 4.44772 12 5 12C5.55228 12 6 12.4477 6 13ZM8 11C8.55229 11 9 10.5523 9 10C9 9.44771 8.55229 9 8 9C7.44771 9 7 9.44771 7 10C7 10.5523 7.44771 11 8 11ZM9 13C9 13.5523 8.55229 14 8 14C7.44771 14 7 13.5523 7 13C7 12.4477 7.44771 12 8 12C8.55229 12 9 12.4477 9 13ZM11 11C11.5523 11 12 10.5523 12 10C12 9.44771 11.5523 9 11 9C10.4477 9 10 9.44771 10 10C10 10.5523 10.4477 11 11 11ZM15 5.5C15 4.11929 13.8807 3 12.5 3H3.5C2.11929 3 1 4.11929 1 5.5V14.5C1 15.8807 2.11929 17 3.5 17H12.5C13.8807 17 15 15.8807 15 14.5V5.5ZM2 7H14V14.5C14 15.3284 13.3284 16 12.5 16H3.5C2.67157 16 2 15.3284 2 14.5V7ZM3.5 4H12.5C13.3284 4 14 4.67157 14 5.5V6H2V5.5C2 4.67157 2.67157 4 3.5 4Z\" fill=\"#717171\"/>\n        </svg>\n      `;\n  }\n\n  /**\n   * Create a new todo task and add it to the list\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTasksBase\n   */\n  protected async addTask() {\n    if (this._isNewTaskBeingAdded || !this.newTaskName) {\n      return;\n    }\n\n    this._isNewTaskBeingAdded = true;\n    await this.requestUpdate();\n\n    try {\n      await this.createNewTask();\n    } finally {\n      this._isNewTaskBeingAdded = false;\n      this._isNewTaskVisible = false;\n      this.requestUpdate();\n    }\n  }\n\n  /**\n   * Make a service call to create the new task object.\n   *\n   * @protected\n   * @abstract\n   * @memberof MgtTasksBase\n   */\n  protected abstract createNewTask(): Promise<void>;\n\n  /**\n   * Clear the form data from the new task panel.\n   *\n   * @protected\n   * @memberof MgtTasksBase\n   */\n  protected clearNewTaskData(): void {\n    this._newTaskName = '';\n  }\n\n  /**\n   * Clear the component state.\n   *\n   * @protected\n   * @memberof MgtTasksBase\n   */\n  protected clearState(): void {\n    this.clearNewTaskData();\n    this._isNewTaskVisible = false;\n    this.requestUpdate();\n  }\n\n  /**\n   * Handle when a task is clicked\n   *\n   * @protected\n   * @param {Event} e\n   * @param {TodoTask} task\n   * @memberof MgtTasksBase\n   */\n  protected handleTaskClick(e: Event, task: any) {\n    this.fireCustomEvent('taskClick', { task });\n  }\n\n  /**\n   * Convert a date to a properly formatted string\n   *\n   * @protected\n   * @param {Date} date\n   * @returns\n   * @memberof MgtTasksBase\n   */\n  protected dateToInputValue(date: Date) {\n    if (date) {\n      return new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString().split('T')[0];\n    }\n\n    return null;\n  }\n\n  private showNewTaskPanel(): void {\n    this._isNewTaskVisible = true;\n    this.requestUpdate();\n  }\n\n  private hideNewTaskPanel(): void {\n    this._isNewTaskVisible = false;\n    this.clearNewTaskData();\n    this.requestUpdate();\n  }\n\n  private onResize() {\n    if (this.mediaQuery !== this._previousMediaQuery) {\n      this._previousMediaQuery = this.mediaQuery;\n      this.requestUpdate();\n    }\n  }\n}\n"]}