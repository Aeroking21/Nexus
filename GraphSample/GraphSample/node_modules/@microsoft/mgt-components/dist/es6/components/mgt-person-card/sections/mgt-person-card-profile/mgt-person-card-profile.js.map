{"version":3,"file":"mgt-person-card-profile.js","sourceRoot":"src/","sources":["components/mgt-person-card/sections/mgt-person-card-profile/mgt-person-card-profile.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { EducationalActivity, PersonAnnualEvent, PersonInterest, Profile } from '@microsoft/microsoft-graph-types-beta';\nimport { customElement, html, TemplateResult } from 'lit-element';\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getSvg, SvgIcon } from '../../../../utils/SvgHelper';\nimport { styles } from './mgt-person-card-profile-css';\nimport { strings } from './strings';\n\n/**\n * The user profile subsection of the person card\n *\n * @export\n * @class MgtPersonCardProfile\n * @extends {MgtTemplatedComponent}\n */\n@customElement('mgt-person-card-profile')\nexport class MgtPersonCardProfile extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtPersonCardProfile\n   */\n  public get displayName(): string {\n    return this.strings.SkillsAndExperienceSectionTitle;\n  }\n\n  /**\n   * Returns true if the profile contains data\n   * that can be rendered\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberof MgtPersonCardProfile\n   */\n  public get hasData(): boolean {\n    if (!this.profile) {\n      return false;\n    }\n\n    const { languages, skills, positions, educationalActivities } = this.profile;\n\n    return (\n      [\n        this._birthdayAnniversary,\n        this._personalInterests && this._personalInterests.length,\n        this._professionalInterests && this._professionalInterests.length,\n        languages && languages.length,\n        skills && skills.length,\n        positions && positions.length,\n        educationalActivities && educationalActivities.length\n      ].filter(v => !!v).length > 0\n    );\n  }\n\n  /**\n   * The user's profile metadata\n   *\n   * @protected\n   * @type {IProfile}\n   * @memberof MgtPersonCardProfile\n   */\n  protected get profile(): Profile {\n    return this._profile;\n  }\n  protected set profile(value: Profile) {\n    if (value === this._profile) {\n      return;\n    }\n\n    this._profile = value;\n    this._birthdayAnniversary =\n      value && value.anniversaries ? value.anniversaries.find(this.isBirthdayAnniversary) : null;\n    this._personalInterests = value && value.interests ? value.interests.filter(this.isPersonalInterest) : null;\n    this._professionalInterests = value && value.interests ? value.interests.filter(this.isProfessionalInterest) : null;\n  }\n\n  private _profile: Profile;\n  private _personalInterests: PersonInterest[];\n  private _professionalInterests: PersonInterest[];\n  private _birthdayAnniversary: PersonAnnualEvent;\n\n  constructor(profile: Profile) {\n    super();\n\n    this.profile = profile;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardProfile\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Profile);\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtPersonCardProfile\n   */\n  public clearState(): void {\n    super.clearState();\n    this.profile = null;\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardProfile\n   */\n  protected renderCompactView(): TemplateResult {\n    return html`\n      <div class=\"root compact\" dir=${this.direction}>\n        ${this.renderSubSections().slice(0, 2)}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPersonCardProfile\n   */\n  protected renderFullView() {\n    this.initPostRenderOperations();\n\n    return html`\n      <div class=\"root\" dir=${this.direction}>\n        <div class=\"title\">${this.strings.AboutCompactSectionTitle}</div>\n        ${this.renderSubSections()}\n      </div>\n    `;\n  }\n\n  /**\n   * Renders all subSections of the profile\n   * Defines order of how they render\n   *\n   * @protected\n   * @return {*}\n   * @memberof MgtPersonCardProfile\n   */\n  protected renderSubSections() {\n    const subSections = [\n      this.renderSkills(),\n      this.renderBirthday(),\n      this.renderLanguages(),\n      this.renderWorkExperience(),\n      this.renderEducation(),\n      this.renderProfessionalInterests(),\n      this.renderPersonalInterests()\n    ];\n\n    return subSections.filter(s => !!s);\n  }\n\n  /**\n   * Render the user's known languages\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPersonCardProfile\n   */\n  protected renderLanguages(): TemplateResult {\n    const { languages } = this._profile;\n    if (!(languages && languages.length)) {\n      return null;\n    }\n\n    const languageItems: TemplateResult[] = [];\n    for (const language of languages) {\n      let proficiency = null;\n      if (language.proficiency && language.proficiency.length) {\n        proficiency = html`\n          <span class=\"language__proficiency\" tabindex=\"0\">\n            &nbsp;(${language.proficiency})\n          </span>\n        `;\n      }\n\n      languageItems.push(html`\n        <div class=\"token-list__item language\">\n          <span class=\"language__title\" tabindex=\"0\">${language.displayName}</span>\n          ${proficiency}\n        </div>\n      `);\n    }\n\n    const languageTitle = languageItems.length ? this.strings.LanguagesSubSectionTitle : '';\n\n    return html`\n      <section>\n        <div class=\"section__title\" tabindex=\"0\">${languageTitle}</div>\n        <div class=\"section__content\">\n          <div class=\"token-list\">\n            ${languageItems}\n          </div>\n        </div>\n      </section>\n    `;\n  }\n\n  /**\n   * Render the user's skills\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardProfile\n   */\n  protected renderSkills(): TemplateResult {\n    const { skills } = this._profile;\n\n    if (!(skills && skills.length)) {\n      return null;\n    }\n\n    const skillItems: TemplateResult[] = [];\n    for (const skill of skills) {\n      skillItems.push(html`\n        <div class=\"token-list__item skill\" tabindex=\"0\">\n          ${skill.displayName}\n        </div>\n      `);\n    }\n\n    const skillsTitle = skillItems.length ? this.strings.SkillsSubSectionTitle : '';\n\n    return html`\n      <section>\n        <div class=\"section__title\" tabindex=\"0\">${skillsTitle}</div>\n        <div class=\"section__content\">\n          <div class=\"token-list\">\n            ${skillItems}\n          </div>\n        </div>\n      </section>\n    `;\n  }\n\n  /**\n   * Render the user's work experience timeline\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardProfile\n   */\n  protected renderWorkExperience(): TemplateResult {\n    const { positions } = this._profile;\n\n    if (!(positions && positions.length)) {\n      return null;\n    }\n\n    const positionItems: TemplateResult[] = [];\n    for (const position of this._profile.positions) {\n      if (position.detail.description || position.detail.jobTitle !== '') {\n        positionItems.push(html`\n          <div class=\"data-list__item work-position\">\n            <div class=\"data-list__item__header\">\n              <div class=\"data-list__item__title\" tabindex=\"0\">${position.detail?.jobTitle}</div>\n              <div class=\"data-list__item__date-range\" tabindex=\"0\">\n                ${this.getDisplayDateRange(position.detail)}\n              </div>\n            </div>\n            <div class=\"data-list__item__content\">\n              <div class=\"work-position__company\" tabindex=\"0\">\n                ${position?.detail?.company?.displayName}\n              </div>\n              <div class=\"work-position__location\" tabindex=\"0\">\n                ${position?.detail?.company?.address?.city}, ${position?.detail?.company?.address?.state}\n              </div>\n            </div>\n          </div>\n        `);\n      }\n    }\n    const workExperienceTitle = positionItems.length ? this.strings.WorkExperienceSubSectionTitle : '';\n\n    return html`\n      <section>\n        <div class=\"section__title\" tabindex=\"0\">${workExperienceTitle}</div>\n        <div class=\"section__content\">\n          <div class=\"data-list\">\n            ${positionItems}\n          </div>\n        </div>\n      </section>\n    `;\n  }\n\n  /**\n   * Render the user's education timeline\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardProfile\n   */\n  protected renderEducation(): TemplateResult {\n    const { educationalActivities } = this._profile;\n\n    if (!(educationalActivities && educationalActivities.length)) {\n      return null;\n    }\n\n    const positionItems: TemplateResult[] = [];\n    for (const educationalActivity of educationalActivities) {\n      positionItems.push(html`\n        <div class=\"data-list__item educational-activity\">\n          <div class=\"data-list__item__header\">\n            <div class=\"data-list__item__title\" tabindex=\"0\">${educationalActivity.institution.displayName}</div>\n            <div class=\"data-list__item__date-range\" tabindex=\"0\">\n              ${this.getDisplayDateRange(educationalActivity)}\n            </div>\n          </div>\n          <div class=\"data-list__item__content\">\n            <div class=\"educational-activity__degree\" tabindex=\"0\">\n              ${educationalActivity.program.displayName || 'Bachelors Degree'}\n            </div>\n          </div>\n        </div>\n      `);\n    }\n\n    const educationTitle = positionItems.length ? this.strings.EducationSubSectionTitle : '';\n\n    return html`\n      <section>\n        <div class=\"section__title\" tabindex=\"0\">${educationTitle}</div>\n        <div class=\"section__content\">\n          <div class=\"data-list\">\n            ${positionItems}\n          </div>\n        </div>\n      </section>\n    `;\n  }\n\n  /**\n   * Render the user's professional interests\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardProfile\n   */\n  protected renderProfessionalInterests(): TemplateResult {\n    if (!this._professionalInterests || !this._professionalInterests.length) {\n      return null;\n    }\n\n    const interestItems: TemplateResult[] = [];\n    for (const interest of this._professionalInterests) {\n      interestItems.push(html`\n        <div class=\"token-list__item interest interest--professional\" tabindex=\"0\">\n          ${interest.displayName}\n        </div>\n      `);\n    }\n\n    const professionalInterests = interestItems.length ? this.strings.professionalInterestsSubSectionTitle : '';\n\n    return html`\n      <section>\n        <div class=\"section__title\" tabindex=\"0\">${professionalInterests}</div>\n        <div class=\"section__content\">\n          <div class=\"token-list\">\n            ${interestItems}\n          </div>\n        </div>\n      </section>\n    `;\n  }\n\n  /**\n   * Render the user's personal interests\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardProfile\n   */\n  protected renderPersonalInterests(): TemplateResult {\n    if (!this._personalInterests || !this._personalInterests.length) {\n      return null;\n    }\n\n    const interestItems: TemplateResult[] = [];\n    for (const interest of this._personalInterests) {\n      interestItems.push(html`\n        <div class=\"token-list__item interest interest--personal\" tabindex=\"0\">\n          ${interest.displayName}\n        </div>\n      `);\n    }\n\n    const personalInterests = interestItems.length ? this.strings.personalInterestsSubSectionTitle : '';\n\n    return html`\n      <section>\n        <div class=\"section__title\" tabindex=\"0\">${personalInterests}</div>\n        <div class=\"section__content\">\n          <div class=\"token-list\">\n            ${interestItems}\n          </div>\n        </div>\n      </section>\n    `;\n  }\n\n  /**\n   * Render the user's birthday\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardProfile\n   */\n  protected renderBirthday(): TemplateResult {\n    if (!this._birthdayAnniversary || !this._birthdayAnniversary.date) {\n      return null;\n    }\n\n    return html`\n      <section>\n        <div class=\"section__title\" tabindex=\"0\">Birthday</div>\n        <div class=\"section__content\">\n          <div class=\"birthday\">\n            <div class=\"birthday__icon\">\n              ${getSvg(SvgIcon.Birthday)}\n            </div>\n            <div class=\"birthday__date\" tabindex=\"0\">\n              ${this.getDisplayDate(new Date(this._birthdayAnniversary.date))}\n            </div>\n          </div>\n        </div>\n      </section>\n    `;\n  }\n\n  private isPersonalInterest(interest: PersonInterest): boolean {\n    return interest.categories && interest.categories.includes('personal');\n  }\n\n  private isProfessionalInterest(interest: PersonInterest): boolean {\n    return interest.categories && interest.categories.includes('professional');\n  }\n\n  private isBirthdayAnniversary(anniversary: PersonAnnualEvent): boolean {\n    return anniversary.type === 'birthday';\n  }\n\n  private getDisplayDate(date: Date): string {\n    return date.toLocaleString('default', {\n      day: 'numeric',\n      month: 'long'\n    });\n  }\n\n  // tslint:disable-next-line: completed-docs\n  private getDisplayDateRange(event: EducationalActivity): string {\n    const start = new Date(event.startMonthYear).getFullYear();\n    if (start === 0) {\n      return null;\n    }\n\n    const end = event.endMonthYear ? new Date(event.endMonthYear).getFullYear() : this.strings.currentYearSubtitle;\n    return `${start} — ${end}`;\n  }\n\n  private initPostRenderOperations(): void {\n    setTimeout(() => {\n      try {\n        const sections = this.shadowRoot.querySelectorAll('section');\n        sections.forEach(section => {\n          // Perform post render operations per section\n          this.handleTokenOverflow(section);\n        });\n      } catch {\n        // An exception may occur if the component is suddenly removed during post render operations.\n      }\n    }, 0);\n  }\n\n  private handleTokenOverflow(section: HTMLElement): void {\n    const tokenLists = section.querySelectorAll('.token-list');\n    if (!tokenLists || !tokenLists.length) {\n      return;\n    }\n\n    for (const tokenList of Array.from(tokenLists)) {\n      const items = tokenList.querySelectorAll('.token-list__item');\n      if (!items || !items.length) {\n        continue;\n      }\n\n      let overflowItems: Element[] = null;\n      let itemRect = items[0].getBoundingClientRect();\n      const tokenListRect = tokenList.getBoundingClientRect();\n      const maxtop = itemRect.height * 2 + tokenListRect.top;\n\n      // Use (items.length - 1) to prevent [+1 more] from appearing.\n      for (let i = 0; i < items.length - 1; i++) {\n        itemRect = items[i].getBoundingClientRect();\n        if (itemRect.top > maxtop) {\n          overflowItems = Array.from(items).slice(i, items.length);\n          break;\n        }\n      }\n\n      if (overflowItems) {\n        overflowItems.forEach(i => i.classList.add('overflow'));\n\n        const overflowToken = document.createElement('div');\n        overflowToken.classList.add('token-list__item');\n        overflowToken.classList.add('token-list__item--show-overflow');\n        overflowToken.tabIndex = 0;\n        overflowToken.innerText = `+ ${overflowItems.length} more`;\n\n        // On click or enter(accessibility), remove [+n more] token and reveal the hidden overflow tokens.\n        const revealOverflow = () => {\n          overflowToken.remove();\n          overflowItems.forEach(i => i.classList.remove('overflow'));\n        };\n        overflowToken.addEventListener('click', (e: MouseEvent) => {\n          revealOverflow();\n        });\n        overflowToken.addEventListener('keydown', (e: KeyboardEvent) => {\n          if (e.code === 'Enter') {\n            revealOverflow();\n          }\n        });\n        tokenList.appendChild(overflowToken);\n      }\n    }\n  }\n}\n"]}