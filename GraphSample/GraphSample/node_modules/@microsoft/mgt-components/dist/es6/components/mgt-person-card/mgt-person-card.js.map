{"version":3,"file":"mgt-person-card.js","sourceRoot":"src/","sources":["components/mgt-person-card/mgt-person-card.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { customElement, html, internalProperty, property, TemplateResult } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { MgtTemplatedComponent, Providers, ProviderState, TeamsHelper } from '@microsoft/mgt-element';\nimport { Presence, User, Person } from '@microsoft/microsoft-graph-types';\n\nimport { findPeople, getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { IDynamicPerson, ViewType } from '../../graph/types';\nimport { getPersonImage } from '../../graph/graph.photos';\nimport { getUserWithPhoto } from '../../graph/graph.userWithPhoto';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { getUserPresence } from '../../graph/graph.presence';\nimport { getPersonCardGraphData } from './mgt-person-card.graph';\nimport { MgtPerson } from '../mgt-person/mgt-person';\nimport { styles } from './mgt-person-card-css';\nimport { BasePersonCardSection } from './sections/BasePersonCardSection';\nimport { MgtPersonCardContact } from './sections/mgt-person-card-contact/mgt-person-card-contact';\nimport { MgtPersonCardFiles } from './sections/mgt-person-card-files/mgt-person-card-files';\nimport { MgtPersonCardMessages } from './sections/mgt-person-card-messages/mgt-person-card-messages';\nimport { MgtPersonCardOrganization } from './sections/mgt-person-card-organization/mgt-person-card-organization';\nimport { MgtPersonCardProfile } from './sections/mgt-person-card-profile/mgt-person-card-profile';\nimport { MgtPersonCardConfig, MgtPersonCardState } from './mgt-person-card.types';\nimport { strings } from './strings';\n\nimport '../sub-components/mgt-spinner/mgt-spinner';\n\nexport * from './mgt-person-card.types';\n\n// tslint:disable-next-line:completed-docs\ninterface MgtPersonCardStateHistory {\n  // tslint:disable-next-line:completed-docs\n  state: MgtPersonCardState;\n  // tslint:disable-next-line:completed-docs\n  personDetails: IDynamicPerson;\n  // tslint:disable-next-line:completed-docs\n  personImage: string;\n}\n\n/**\n * Web Component used to show detailed data for a person in the Microsoft Graph\n *\n * @export\n * @class MgtPersonCard\n * @extends {MgtTemplatedComponent}\n *\n * @fires expanded - Fired when expanded details section is opened\n *\n * @cssprop --person-card-display-name-font-size - {Length} Font size of display name title\n * @cssprop --person-card-display-name-color - {Color} Color of display name font\n * @cssprop --person-card-title-font-size - {Length} Font size of title\n * @cssprop --person-card-title-color - {Color} Color of title\n * @cssprop --person-card-subtitle-font-size - {Length} Font size of subtitle\n * @cssprop --person-card-subtitle-color - {Color} Color of subttitle\n * @cssprop --person-card-details-title-font-size - {Length} Font size additional details title\n * @cssprop --person-card-details-title-color- {Color} Color of additional details title\n * @cssprop --person-card-details-item-font-size - {Length} Font size items in additional details section\n * @cssprop --person-card-details-item-color - {Color} Color of items in additional details section\n * @cssprop --person-card-background-color - {Color} Color of person card background\n */\n@customElement('mgt-person-card')\nexport class MgtPersonCard extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Get the scopes required for the person card\n   * The scopes depend on what sections are shown\n   *\n   * Use the `MgtPersonCard.config` object to configure\n   * what sections are shown\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtPersonCard\n   */\n  public static get requiredScopes(): string[] {\n    return MgtPersonCard.getScopes();\n  }\n\n  public static getScopes(): string[] {\n    const scopes = [];\n\n    if (this.config.sections.files) {\n      scopes.push('Sites.Read.All');\n    }\n\n    if (this.config.sections.mailMessages) {\n      scopes.push('Mail.ReadBasic');\n    }\n\n    if (this.config.sections.organization) {\n      scopes.push('User.Read.All');\n\n      if (typeof this.config.sections.organization !== 'boolean' && this.config.sections.organization.showWorksWith) {\n        scopes.push('People.Read.All');\n      }\n    }\n\n    if (this.config.sections.profile) {\n      scopes.push('User.Read.All');\n    }\n\n    if (this.config.useContactApis) {\n      scopes.push('Contacts.Read');\n    }\n\n    if (scopes.indexOf('User.Read.All') < 0) {\n      // at minimum, we need these scopes\n      scopes.push('User.ReadBasic.All');\n      scopes.push('User.Read');\n    }\n\n    if (scopes.indexOf('People.Read.All') < 0) {\n      // at minimum, we need these scopes\n      scopes.push('People.Read');\n    }\n\n    // return unique\n    return [...new Set(scopes)];\n  }\n\n  /**\n   * Global configuration object for\n   * all person card components\n   *\n   * @static\n   * @type {MgtPersonCardConfig}\n   * @memberof MgtPersonCard\n   */\n  public static get config() {\n    return this._config;\n  }\n\n  private static _config: MgtPersonCardConfig = {\n    sections: {\n      files: true,\n      mailMessages: true,\n      organization: { showWorksWith: true },\n      profile: true\n    },\n    useContactApis: true\n  };\n\n  /**\n   * Set the person details to render\n   *\n   * @type {IDynamicPerson}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'person-details',\n    type: Object\n  })\n  public get personDetails(): IDynamicPerson {\n    return this._personDetails;\n  }\n  public set personDetails(value: IDynamicPerson) {\n    if (this._personDetails === value) {\n      return;\n    }\n\n    this._personDetails = value;\n    this.personImage = this.getImage();\n    this.requestStateUpdate();\n  }\n  /**\n   * allows developer to define name of person for component\n   * @type {string}\n   */\n  @property({\n    attribute: 'person-query'\n  })\n  public personQuery: string;\n\n  /**\n   * allows the locking of navigation using tabs to not flow out of the card section\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'lock-tab-navigation',\n    type: Boolean\n  })\n  public lockTabNavigation: boolean;\n\n  /**\n   * user-id property allows developer to use id value for component\n   * @type {string}\n   */\n  @property({\n    attribute: 'user-id'\n  })\n  public get userId(): string {\n    return this._userId;\n  }\n  public set userId(value: string) {\n    if (value === this._userId) {\n      return;\n    }\n    this._userId = value;\n    this.personDetails = null;\n    this.state = null;\n    this.requestStateUpdate();\n  }\n\n  /**\n   * Set the image of the person\n   * Set to '@' to look up image from the graph\n   *\n   * @type {string}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'person-image',\n    type: String\n  })\n  public personImage: string;\n\n  /**\n   * Sets whether the person image should be fetched\n   * from the Microsoft Graph based on the personDetails\n   * provided by the user\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'fetch-image',\n    type: Boolean\n  })\n  public fetchImage: boolean;\n\n  /**\n   * Gets or sets whether expanded details section is rendered\n   *\n   * @type {boolean}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'is-expanded',\n    type: Boolean\n  })\n  public isExpanded: boolean;\n\n  /**\n   * Gets or sets whether person details should be inherited from an mgt-person parent\n   * Useful when used as template in an mgt-person component\n   *\n   * @type {boolean}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'inherit-details',\n    type: Boolean\n  })\n  public inheritDetails: boolean;\n\n  /**\n   * determines if person card component renders presence\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'show-presence',\n    type: Boolean\n  })\n  public showPresence: boolean;\n\n  /**\n   * Gets or sets presence of person\n   *\n   * @type {MicrosoftGraph.Presence}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'person-presence',\n    type: Object\n  })\n  public personPresence: Presence;\n\n  /**\n   * The subsections for display in the lower part of the card\n   *\n   * @protected\n   * @type {BasePersonCardSection[]}\n   * @memberof MgtPersonCard\n   */\n  protected sections: BasePersonCardSection[];\n\n  @internalProperty() private state: MgtPersonCardState;\n  @internalProperty() private isStateLoading: boolean;\n\n  private _history: MgtPersonCardStateHistory[];\n  private _chatInput: string;\n  private _currentSection: BasePersonCardSection;\n  private _personDetails: IDynamicPerson;\n  private _me: User;\n  private _smallView;\n  private _windowHeight;\n\n  private _userId: string;\n\n  private get internalPersonDetails(): IDynamicPerson {\n    return (this.state && this.state.person) || this.personDetails;\n  }\n\n  constructor() {\n    super();\n    this._chatInput = '';\n    this._currentSection = null;\n    this._history = [];\n    this.sections = [];\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * @param {*} name\n   * @param {*} oldValue\n   * @param {*} newValue\n   * @memberof MgtPersonCard\n   */\n  public attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n\n    if (oldValue === newValue) {\n      return;\n    }\n\n    switch (name) {\n      case 'person-query':\n        this.personDetails = null;\n        this.state = null;\n        this.requestStateUpdate();\n        break;\n    }\n  }\n\n  /**\n   * Navigate the card to a different person.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  public navigate(person: IDynamicPerson): void {\n    this._history.push({\n      personDetails: this.personDetails,\n      personImage: this.getImage(),\n      state: this.state\n    });\n\n    this._personDetails = person;\n    this.state = null;\n    this.personImage = null;\n    this._currentSection = null;\n    this.sections = [];\n    this.requestStateUpdate();\n  }\n\n  /**\n   * Navigate the card back to the previous person\n   *\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  public goBack(): void {\n    if (!this._history || !this._history.length) {\n      return;\n    }\n\n    const historyState = this._history.pop();\n    this._currentSection = null;\n\n    this.state = historyState.state;\n    this._personDetails = historyState.state;\n    this.personImage = historyState.personImage;\n    this.loadSections();\n  }\n\n  /**\n   * Navigate the card back to first person and clear history\n   *\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  public clearHistory(): void {\n    this._currentSection = null;\n\n    if (!this._history || !this._history.length) {\n      return;\n    }\n\n    const historyState = this._history[0];\n    this._history = [];\n\n    this.state = historyState.state;\n    this._personDetails = historyState.state;\n    this.personImage = historyState.personImage;\n    this.loadSections();\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    // Handle no data\n    if (!this.internalPersonDetails) {\n      return this.renderNoData();\n    }\n\n    const person = this.internalPersonDetails;\n    const image = this.getImage();\n\n    // Check for a default template.\n    // tslint:disable-next-line: no-string-literal\n    if (this.hasTemplate('default')) {\n      return this.renderTemplate('default', {\n        person: this.internalPersonDetails,\n        personImage: image\n      });\n    }\n\n    const navigationTemplate =\n      this._history && this._history.length\n        ? html`\n            <div class=\"nav\">\n              <div class=\"nav__back\" tabindex=\"0\" @keydown=${(e: KeyboardEvent) => {\n                e.code === 'Enter' ? this.goBack() : '';\n              }} @click=${() => this.goBack()}>${getSvg(SvgIcon.Back)}</div>\n            </div>\n          `\n        : null;\n\n    // Check for a person-details template\n    let personDetailsTemplate = this.renderTemplate('person-details', {\n      person: this.internalPersonDetails,\n      personImage: image\n    });\n    if (!personDetailsTemplate) {\n      const personTemplate = this.renderPerson();\n      const contactIconsTemplate = this.renderContactIcons(person);\n\n      personDetailsTemplate = html`\n        ${personTemplate} ${contactIconsTemplate}\n      `;\n    }\n\n    const expandedDetailsTemplate = this.isExpanded ? this.renderExpandedDetails() : this.renderExpandedDetailsButton();\n    this._windowHeight =\n      window.innerHeight && document.documentElement.clientHeight\n        ? Math.min(window.innerHeight, document.documentElement.clientHeight)\n        : window.innerHeight || document.documentElement.clientHeight;\n\n    if (this._windowHeight < 250) {\n      this._smallView = true;\n    }\n    const tabLocker = this.lockTabNavigation\n      ? html`<div @keydown=${this.handleEndOfCard} aria-label=${this.strings.endOfCard} tabindex=\"0\" id=\"end-of-container\"></div>`\n      : html``;\n    return html`\n      <div class=\"root\" dir=${this.direction}>\n      <div class=${this._smallView ? 'small' : ''}>\n          ${navigationTemplate}\n          <div class=\"person-details-container\">${personDetailsTemplate}</div>\n          <div class=\"expanded-details-container\">${expandedDetailsTemplate}</div>\n          ${tabLocker}\n        </div>\n      </div>\n    `;\n  }\n\n  private handleEndOfCard(e: KeyboardEvent) {\n    if (e && e.code === 'Tab') {\n      const endOfCardEl = this.renderRoot.querySelector('#end-of-container') as HTMLElement;\n      if (endOfCardEl) {\n        endOfCardEl.blur();\n        const imageCardEl = this.renderRoot.querySelector('mgt-person') as HTMLElement;\n        if (imageCardEl) {\n          imageCardEl.focus();\n        }\n      }\n    }\n  }\n\n  /**\n   * Render the state when no data is available.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * Render a display image for the person.\n   *\n   * @protected\n   * @param {*} image\n   * @memberof MgtPersonCard\n   */\n  protected renderPerson(): TemplateResult {\n    const avatarSize = 'large';\n    return html`\n      <mgt-person\n        tabindex=\"0\"\n        class=\"person-image\"\n        .personDetails=${this.internalPersonDetails}\n        .personImage=${this.getImage()}\n        .personPresence=${this.personPresence}\n        .showPresence=${this.showPresence}\n        .avatarSize=${avatarSize}\n        .view=${ViewType.threelines}\n        .line2Property=${'jobTitle'}\n        .line3Property=${'department'}\n      ></mgt-person>\n    `;\n  }\n\n  /**\n   * Render person subtitle.\n   *\n   * @protected\n   * @param {IDynamicPerson} person\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderPersonSubtitle(person?: IDynamicPerson): TemplateResult {\n    person = person || this.internalPersonDetails;\n    if (!person.department) {\n      return;\n    }\n    return html`\n      <div class=\"department\">${person.department}</div>\n    `;\n  }\n\n  /**\n   * Render the various icons for contacting the person.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderContactIcons(person?: IDynamicPerson): TemplateResult {\n    if (this.isExpanded) {\n      return;\n    }\n\n    person = person || this.internalPersonDetails;\n    const userPerson = person as User;\n\n    // Email\n    let email: TemplateResult;\n    if (getEmailFromGraphEntity(person)) {\n      email = html`\n        <div class=\"icon\" @click=${() => this.emailUser()} tabindex=0>\n          ${getSvg(SvgIcon.SmallEmail)}\n          <span>${this.strings.sendEmailLinkSubtitle}</span>\n        </div>\n      `;\n    }\n\n    // Chat\n    let chat: TemplateResult;\n    if (userPerson.userPrincipalName) {\n      chat = html`\n        <div class=\"icon\" @click=${() => this.chatUser()} tabindex=0>\n          ${getSvg(SvgIcon.SmallChat)}\n          <span>${this.strings.startChatLinkSubtitle}</span>\n        </div>\n      `;\n    }\n\n    return html`\n      <div class=\"base-icons\">\n        ${email} ${chat}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the button used to expand the expanded details.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderExpandedDetailsButton(): TemplateResult {\n    return html`\n      <div \n        class=\"expanded-details-button\" \n        @click=${() => this.showExpandedDetails()} \n        @keydown=${this.handleKeyDown}\n        tabindex=0>\n          ${getSvg(SvgIcon.ExpandDown)}\n      </div>\n    `;\n  }\n\n  /**\n   * Render expanded details.\n   *\n   * @protected\n   * @param {IDynamicPerson} [person]\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderExpandedDetails(person?: IDynamicPerson): TemplateResult {\n    if (!this.state && this.isStateLoading) {\n      return html`\n        <div class=\"loading\">\n          <mgt-spinner></mgt-spinner>\n        </div>\n      `;\n    }\n    // load sections when details are expanded\n    // when not singed in\n    const provider = Providers.globalProvider;\n    if (provider.state === ProviderState.SignedOut) {\n      this.loadSections();\n    }\n\n    person = person || this.internalPersonDetails;\n\n    const sectionNavTemplate = this.renderSectionNavigation();\n    const currentSectionTemplate = this.renderCurrentSection();\n\n    return html`\n      <div class=\"section-nav\">\n        ${sectionNavTemplate}\n      </div>\n      <div class=\"section-host ${this._smallView ? 'small' : ''}\" @wheel=${(e: WheelEvent) =>\n      this.handleSectionScroll(e)} tabindex=0>\n        ${currentSectionTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the navigation ribbon for subsections\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderSectionNavigation(): TemplateResult {\n    if (!this.sections || (this.sections.length < 2 && !this.hasTemplate('additional-details'))) {\n      return;\n    }\n\n    const currentSectionIndex = this._currentSection ? this.sections.indexOf(this._currentSection) : -1;\n\n    const navIcons = this.sections.map((section, i) => {\n      const classes = classMap({\n        active: i === currentSectionIndex,\n        'section-nav__icon': true\n      });\n      const tagName = section.tagName;\n      const ariaLabel = tagName.substring(16, tagName.length).toLowerCase();\n      return html`\n        <button\n          aria-label=${ariaLabel}\n          tabindex=0\n          class=${classes}\n          @click=${() => this.updateCurrentSection(section)}>\n            ${section.renderIcon()}</button>\n      `;\n    });\n\n    const overviewClasses = classMap({\n      active: currentSectionIndex === -1,\n      'section-nav__icon': true\n    });\n    return html`\n      <button \n        aria-label=\"overview\"\n        tabindex=0 \n        class=${overviewClasses}\n        @click=${() => this.updateCurrentSection(null)}>\n          ${getSvg(SvgIcon.Overview)}\n      </button>\n      ${navIcons}\n    `;\n  }\n\n  /**\n   * Render the default section with compact views for each subsection.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderOverviewSection(): TemplateResult {\n    function handleKeyDown(e: KeyboardEvent, section: BasePersonCardSection) {\n      e.code === 'Enter' ? this.updateCurrentSection(section) : '';\n    }\n\n    const compactTemplates = this.sections.map(\n      (section: BasePersonCardSection) => html`\n        <div class=\"section\">\n          <div class=\"section__header\">\n            <div class=\"section__title\" tabindex=\"0\">${section.displayName}</div>\n            <a \n              class=\"section__show-more\"\n              tabindex=0\n              @keydown=${(e: KeyboardEvent) => handleKeyDown(e, section)}\n              @click=${() => this.updateCurrentSection(section)}>\n                ${this.strings.showMoreSectionButton}</a>\n          </div>\n          <div class=\"section__content\">${section.asCompactView()}</div>\n        </div>\n      `\n    );\n\n    const additionalDetails = this.renderTemplate('additional-details', {\n      person: this.internalPersonDetails,\n      personImage: this.getImage(),\n      state: this.state\n    });\n    if (additionalDetails) {\n      compactTemplates.splice(\n        1,\n        0,\n        html`\n          <div class=\"section\">\n            <div class=\"additional-details\">${additionalDetails}</div>\n          </div>\n        `\n      );\n    }\n\n    // To be included when support for direct messaging is added\n    // ${this.internalPersonDetails.id !== this._me.id && MgtPersonCard.config.isSendMessageVisible\n    //   ? html`\n    //       <div class=\"quick-message\">\n    //         <input\n    //           type=\"text\"\n    //           class=\"quick-message__input\"\n    //           placeholder=\"Message ${this.internalPersonDetails.displayName}\"\n    //           .value=${this._chatInput}\n    //           @input=${(e: Event) => {\n    //             this._chatInput = (e.target as HTMLInputElement).value;\n    //           }}\n    //         />\n    //         <button class=\"quick-message__send\" @click=${() => this.sendQuickMessage()}>\n    //           ${getSvg(SvgIcon.Send)}\n    //         </button>\n    //       </div>\n    //     `\n    //   : null}\n\n    return html`\n      <div class=\"sections\">\n        ${compactTemplates}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the actively selected section.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderCurrentSection(): TemplateResult {\n    if ((!this.sections || !this.sections.length) && !this.hasTemplate('additional-details')) {\n      return;\n    }\n\n    if (this.sections.length === 1 && !this.hasTemplate('additional-details')) {\n      return html`\n        ${this.sections[0].asFullView()}\n      `;\n    }\n\n    if (!this._currentSection) {\n      return this.renderOverviewSection();\n    }\n\n    return html`\n      ${this._currentSection.asFullView()}\n    `;\n  }\n\n  /**\n   * load state into the component\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPersonCard\n   */\n  protected async loadState() {\n    if (this.state) {\n      return;\n    }\n\n    if (!this.personDetails && this.inheritDetails) {\n      // User person details inherited from parent tree\n      let parent = this.parentElement;\n      while (parent && parent.tagName !== 'MGT-PERSON') {\n        parent = parent.parentElement;\n      }\n\n      let parentPerson = (parent as MgtPerson).personDetails || parent['personDetailsInternal'];\n\n      if (parent && parentPerson) {\n        this.personDetails = parentPerson;\n        this.personImage = (parent as MgtPerson).personImage;\n      }\n    }\n\n    const provider = Providers.globalProvider;\n\n    // check if user is signed in\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return;\n    }\n\n    const graph = provider.graph.forComponent(this);\n\n    this.isStateLoading = true;\n\n    if (!this._me) {\n      this._me = await Providers.me();\n    }\n\n    // check if personDetail already populated\n    if (this.personDetails) {\n      const user = this.personDetails as User;\n      const id = user.userPrincipalName || user.id;\n\n      // if we have an id but no email, we should get data from the graph\n      // in some graph calls, the user object does not contain the email\n      if (id && !getEmailFromGraphEntity(user)) {\n        const person = await getUserWithPhoto(graph, id);\n        this.personDetails = person;\n        this.personImage = this.getImage();\n      }\n    } else if (this.userId || this.personQuery === 'me') {\n      // Use userId or 'me' query to get the person and image\n      const person = await getUserWithPhoto(graph, this.userId);\n      this.personDetails = person;\n      this.personImage = this.getImage();\n    } else if (this.personQuery) {\n      // Use the personQuery to find our person.\n      const people = await findPeople(graph, this.personQuery, 1);\n\n      if (people && people.length) {\n        this.personDetails = people[0];\n        getPersonImage(graph, this.personDetails, MgtPersonCard.config.useContactApis).then(image => {\n          if (image) {\n            this.personDetails.personImage = image;\n            this.personImage = image;\n          }\n        });\n      }\n    }\n\n    // populate presence\n    const defaultPresence = {\n      activity: 'Offline',\n      availability: 'Offline',\n      id: null\n    };\n    if (!this.personPresence && this.showPresence) {\n      try {\n        if (this.personDetails && this.personDetails.id) {\n          getUserPresence(graph, this.personDetails.id).then(presence => {\n            this.personPresence = presence;\n          });\n        } else {\n          this.personPresence = defaultPresence;\n        }\n      } catch (_) {\n        // set up a default Presence in case beta api changes or getting error code\n        this.personPresence = defaultPresence;\n      }\n    }\n\n    // populate state\n    if (this.personDetails?.id) {\n      this.state = await getPersonCardGraphData(\n        graph,\n        this.personDetails,\n        this._me === this.personDetails.id,\n        MgtPersonCard.config\n      );\n    }\n\n    this.loadSections();\n\n    this.isStateLoading = false;\n  }\n\n  /**\n   * Send a chat message to the user from the quick message input.\n   *\n   * @protected\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  protected sendQuickMessage(): void {\n    const message = this._chatInput.trim();\n    if (!message || !message.length) {\n      return;\n    }\n\n    this.chatUser(message);\n  }\n\n  /**\n   * Use the mailto: protocol to initiate a new email to the user.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected emailUser() {\n    const user = this.internalPersonDetails;\n    if (user) {\n      const email = getEmailFromGraphEntity(user);\n      if (email) {\n        window.open('mailto:' + email, '_blank', 'noreferrer');\n      }\n    }\n  }\n\n  /**\n   * Use the tel: protocol to initiate a new call to the user.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected callUser() {\n    const user = this.personDetails as User;\n    const person = this.personDetails as microsoftgraph.Person;\n\n    if (user && user.businessPhones && user.businessPhones.length) {\n      const phone = user.businessPhones[0];\n      if (phone) {\n        window.open('tel:' + phone, '_blank', 'noreferrer');\n      }\n    } else if (person && person.phones && person.phones.length) {\n      const businessPhones = this.getPersonBusinessPhones(person);\n      const phone = businessPhones[0];\n      if (phone) {\n        window.open('tel:' + phone, '_blank', 'noreferrer');\n      }\n    }\n  }\n\n  /**\n   * Initiate a chat message to the user via deeplink.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected chatUser(message: string = null) {\n    const user = this.personDetails as User;\n    if (user && user.userPrincipalName) {\n      const users: string = user.userPrincipalName;\n\n      let url = `https://teams.microsoft.com/l/chat/0/0?users=${users}`;\n      if (message && message.length) {\n        url += `&message=${message}`;\n      }\n\n      const openWindow = () => window.open(url, '_blank', 'noreferrer');\n\n      if (TeamsHelper.isAvailable) {\n        TeamsHelper.executeDeepLink(url, (status: boolean) => {\n          if (!status) {\n            openWindow();\n          }\n        });\n      } else {\n        openWindow();\n      }\n    }\n  }\n\n  /**\n   * Display the expanded details panel.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected showExpandedDetails() {\n    const root = this.renderRoot.querySelector('.root');\n    if (root && root.animate) {\n      // play back\n      root.animate(\n        [\n          {\n            height: 'auto',\n            transformOrigin: 'top left'\n          },\n          {\n            height: 'auto',\n            transformOrigin: 'top left'\n          }\n        ],\n        {\n          duration: 1000,\n          easing: 'ease-in-out',\n          fill: 'both'\n        }\n      );\n    }\n    this.isExpanded = true;\n\n    this.fireCustomEvent('expanded', null, true);\n  }\n\n  private loadSections() {\n    this.sections = [];\n\n    if (!this.internalPersonDetails) {\n      return;\n    }\n\n    const contactSections = new MgtPersonCardContact(this.internalPersonDetails as User);\n    if (contactSections.hasData) {\n      this.sections.push(contactSections);\n    }\n\n    if (!this.state) {\n      return;\n    }\n\n    const { person, directReports, messages, files, profile } = this.state;\n\n    if (\n      MgtPersonCard.config.sections.organization &&\n      ((person && person.manager) || (directReports && directReports.length))\n    ) {\n      this.sections.push(new MgtPersonCardOrganization(this.state, this._me));\n    }\n\n    if (MgtPersonCard.config.sections.mailMessages && messages && messages.length) {\n      this.sections.push(new MgtPersonCardMessages(messages));\n    }\n\n    if (MgtPersonCard.config.sections.files && files && files.length) {\n      this.sections.push(new MgtPersonCardFiles(files));\n    }\n\n    if (MgtPersonCard.config.sections.profile && profile) {\n      const profileSection = new MgtPersonCardProfile(profile);\n      if (profileSection.hasData) {\n        this.sections.push(profileSection);\n      }\n    }\n  }\n\n  private getImage(): string {\n    if (this.personImage) {\n      return this.personImage;\n    }\n\n    const person = this.personDetails;\n    return person && person.personImage ? person.personImage : null;\n  }\n\n  private getPersonBusinessPhones(person: Person): string[] {\n    const phones = person.phones;\n    const businessPhones: string[] = [];\n    for (const p of phones) {\n      if (p.type === 'business') {\n        businessPhones.push(p.number);\n      }\n    }\n    return businessPhones;\n  }\n\n  private updateCurrentSection(section) {\n    const sectionHost = this.renderRoot.querySelector('.section-host');\n    sectionHost.scrollTop = 0;\n\n    this._currentSection = section;\n    this.requestUpdate();\n  }\n\n  private handleSectionScroll(e: WheelEvent) {\n    const target = this.renderRoot.querySelector('.section-host') as HTMLElement;\n    if (target) {\n      if (\n        !(e.deltaY < 0 && target.scrollTop === 0) &&\n        !(e.deltaY > 0 && target.clientHeight + target.scrollTop >= target.scrollHeight - 1)\n      ) {\n        e.stopPropagation();\n      }\n    }\n  }\n\n  private handleKeyDown(e: KeyboardEvent) {\n    //enter activates person-card\n    if (e) {\n      if (e.keyCode === 13) {\n        this.showExpandedDetails();\n      }\n    }\n  }\n}\n"]}