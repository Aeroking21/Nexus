{"version":3,"file":"mgt-login.js","sourceRoot":"src/","sources":["components/mgt-login/mgt-login.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { customElement, html, property } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { Providers, ProviderState, MgtTemplatedComponent } from '@microsoft/mgt-element';\n\nimport { IDynamicPerson, ViewType } from '../../graph/types';\nimport { MgtFlyout } from '../sub-components/mgt-flyout/mgt-flyout';\nimport { getUserWithPhoto } from '../../graph/graph.userWithPhoto';\nimport { MgtPerson, PersonViewType } from '../mgt-person/mgt-person';\n\nimport { styles } from './mgt-login-css';\nimport { strings } from './strings';\n\nimport '../../styles/style-helper';\n\n/**\n * Web component button and flyout control to facilitate Microsoft identity platform authentication\n *\n * @export\n * @class MgtLogin\n * @extends {MgtBaseComponent}\n *\n * @fires loginInitiated - Fired when login is initiated by the user\n * @fires loginCompleted - Fired when login completes\n * @fires loginFailed - Fired when login fails\n * @fires logoutInitiated - Fired when logout is initiated by the user\n * @fires logoutCompleted - Fired when logout completed\n *\n * @template signed-in-button-content (dataContext: {personDetails, personImage})\n * @template signed-out-button-content (dataContext: null)\n * @template flyout-commands (dataContext: {handleSignOut})\n * @template flyout-person-details (dataContext: {personDetails, personImage})\n *\n * @cssprop --font-size - {Length} Login font size\n * @cssprop --font-weight - {Length} Login font weight\n * @cssprop --height - {String} Login height percentage\n * @cssprop --margin - {String} Margin size\n * @cssprop --padding - {String} Padding size\n * @cssprop --button-color - {Color} Login button font color\n * @cssprop --button-color--hover - {Color} Login button font hover color\n * @cssprop --button-background-color - {Color} Login button background color\n * @cssprop --button-background-color--hover - {Color} Login background hover color\n * @cssprop --popup-background-color - {Color} Popup background color\n * @cssprop --popup-color - {Color} Popup font color\n * @cssprop --popup-command-font-size - {Length} Popup command font size\n */\n@customElement('mgt-login')\nexport class MgtLogin extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * allows developer to use specific user details for login\n   * @type {IDynamicPerson}\n   */\n  @property({\n    attribute: 'user-details',\n    type: Object\n  })\n  public userDetails: IDynamicPerson;\n\n  /**\n   * Gets the flyout element\n   *\n   * @protected\n   * @type {MgtFlyout}\n   * @memberof MgtLogin\n   */\n  protected get flyout(): MgtFlyout {\n    return this.renderRoot.querySelector('.flyout');\n  }\n\n  /**\n   * Get the scopes required for login\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtLogin\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set(['user.read', ...MgtPerson.requiredScopes])];\n  }\n\n  /**\n   * determines if login menu popup should be showing\n   * @type {boolean}\n   */\n  @property({ attribute: false }) private _isFlyoutOpen: boolean;\n\n  private _image: string;\n\n  constructor() {\n    super();\n    this._isFlyoutOpen = false;\n  }\n\n  /**\n   * Invoked each time the custom element is appended into a document-connected element\n   *\n   * @memberof MgtLogin\n   */\n  public connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('click', e => e.stopPropagation());\n  }\n\n  /**\n   * Initiate login\n   *\n   * @returns {Promise<void>}\n   * @memberof MgtLogin\n   */\n  public async login(): Promise<void> {\n    if (this.userDetails || !this.fireCustomEvent('loginInitiated')) {\n      return;\n    }\n\n    const provider = Providers.globalProvider;\n\n    if (provider && provider.login) {\n      await provider.login();\n\n      if (provider.state === ProviderState.SignedIn) {\n        this.fireCustomEvent('loginCompleted');\n      } else {\n        this.fireCustomEvent('loginFailed');\n      }\n    }\n  }\n\n  /**\n   * Initiate logout\n   *\n   * @returns {Promise<void>}\n   * @memberof MgtLogin\n   */\n  public async logout(): Promise<void> {\n    if (!this.fireCustomEvent('logoutInitiated')) {\n      return;\n    }\n\n    const provider = Providers.globalProvider;\n    if (provider && provider.logout) {\n      await provider.logout();\n      this.userDetails = null;\n      this.hideFlyout();\n      this.fireCustomEvent('logoutCompleted');\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    return html`\n      <div class=\"root\" dir=${this.direction}>\n        <div>\n          ${this.renderButton()}\n        </div>\n        ${this.renderFlyout()}\n      </div>\n    `;\n  }\n\n  /**\n   * Load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n    if (provider && !this.userDetails) {\n      if (provider.state === ProviderState.SignedIn) {\n        this.userDetails = await getUserWithPhoto(provider.graph.forComponent(this));\n\n        if (this.userDetails.personImage) {\n          this._image = this.userDetails.personImage;\n        }\n\n        this.fireCustomEvent('loginCompleted');\n      } else {\n        this.userDetails = null;\n      }\n    }\n  }\n\n  /**\n   * Render the button.\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected renderButton() {\n    const provider = Providers.globalProvider;\n    const signedInState = ProviderState.SignedIn;\n\n    let ariaLabel = this.strings.signInLinkSubtitle;\n    if (provider) {\n      if (provider.state === signedInState) {\n        ariaLabel = this.userDetails ? this.userDetails.displayName : this.strings.signInLinkSubtitle;\n      }\n    }\n\n    const classes = {\n      'login-button': true,\n      'no-click': this._isFlyoutOpen\n    };\n    return html`\n      <button aria-label=${ariaLabel} ?disabled=\"${this.isLoadingState}\" @click=${this.onClick} class=${classMap(\n      classes\n    )} role=\"button\">\n        ${this.renderButtonContent()}\n      </button>\n    `;\n  }\n\n  /**\n   * Render the details flyout.\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected renderFlyout() {\n    return html`\n      <mgt-flyout\n        class=\"flyout\"\n        light-dismiss\n        @opened=${() => (this._isFlyoutOpen = true)}\n        @closed=${() => (this._isFlyoutOpen = false)}\n      >\n        <div slot=\"flyout\">\n          ${this.renderFlyoutContent()}\n        </div>\n      </mgt-flyout>\n    `;\n  }\n\n  /**\n   * Render the flyout menu content.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderFlyoutContent() {\n    if (!this.userDetails) {\n      return;\n    }\n    return html`\n      <div class=\"popup\">\n        <div class=\"popup-content\">\n          <div>\n            ${this.renderFlyoutPersonDetails(this.userDetails, this._image)}\n          </div>\n          <div class=\"popup-commands\">\n            ${this.renderFlyoutCommands()}\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Render the flyout person details.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderFlyoutPersonDetails(personDetails: IDynamicPerson, personImage: string) {\n    const template = this.renderTemplate('flyout-person-details', { personDetails, personImage });\n    return (\n      template ||\n      html`\n        <mgt-person .personDetails=${personDetails} .personImage=${personImage} .view=${ViewType.twolines} />\n      `\n    );\n  }\n\n  /**\n   * Render the flyout commands.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderFlyoutCommands() {\n    const template = this.renderTemplate('flyout-commands', { handleSignOut: () => this.logout() });\n    return (\n      template ||\n      html`\n        <ul>\n          <li>\n            <button class=\"popup-command\" @click=${this.logout} aria-label=${this.strings.signOutLinkSubtitle}>\n              ${this.strings.signOutLinkSubtitle}\n            </button>\n          </li>\n        </ul>\n      `\n    );\n  }\n\n  /**\n   * Render the button content.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderButtonContent() {\n    if (this.userDetails) {\n      return this.renderSignedInButtonContent(this.userDetails, this._image);\n    } else {\n      return this.renderSignedOutButtonContent();\n    }\n  }\n\n  /**\n   * Render the button content when the user is signed in.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderSignedInButtonContent(personDetails: IDynamicPerson, personImage: string) {\n    const template = this.renderTemplate('signed-in-button-content', { personDetails, personImage });\n    return (\n      template ||\n      html`\n        <mgt-person .personDetails=${this.userDetails} .personImage=${this._image} .view=${ViewType.oneline} />\n      `\n    );\n  }\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected clearState() {\n    this.userDetails = null;\n    this._image = null;\n  }\n\n  /**\n   * Render the button content when the user is not signed in.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderSignedOutButtonContent() {\n    const template = this.renderTemplate('signed-out-button-content', null);\n    return (\n      template ||\n      html`\n        <i class=\"login-icon ms-Icon ms-Icon--Contact\"></i>\n        <span>${this.strings.signInLinkSubtitle}</span>\n      `\n    );\n  }\n\n  /**\n   * Show the flyout and its content.\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected showFlyout(): void {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.open();\n    }\n  }\n\n  /**\n   * Dismiss the flyout.\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected hideFlyout(): void {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.close();\n    }\n  }\n\n  private onClick() {\n    if (this.userDetails) {\n      this.showFlyout();\n    } else {\n      this.login();\n    }\n  }\n}\n"]}