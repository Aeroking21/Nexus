{"version":3,"file":"mgt-agenda.js","sourceRoot":"src/","sources":["components/mgt-agenda/mgt-agenda.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\nimport { customElement, html, property, TemplateResult } from 'lit-element';\nimport { Providers, ProviderState, MgtTemplatedComponent, prepScopes } from '@microsoft/mgt-element';\nimport '../../styles/style-helper';\nimport { getDayOfWeekString, getMonthString } from '../../utils/Utils';\nimport '../mgt-person/mgt-person';\nimport { styles } from './mgt-agenda-css';\nimport { getEventsPageIterator } from './mgt-agenda.graph';\nimport { SvgIcon, getSvg } from '../../utils/SvgHelper';\nimport { MgtPeople } from '../mgt-people/mgt-people';\n\n/**\n * Web Component which represents events in a user or group calendar.\n *\n * @export\n * @class MgtAgenda\n * @extends {MgtTemplatedComponent}\n *\n * @fires eventClick - Fired when user click an event\n *\n * @cssprop --event-box-shadow - {String} Event box shadow color and size\n * @cssprop --event-margin - {String} Event margin\n * @cssprop --event-padding - {String} Event padding\n * @cssprop --event-background-color - {Color} Event background color\n * @cssprop --event-border - {String} Event border style\n * @cssprop --agenda-header-margin - {String} Agenda header margin size\n * @cssprop --agenda-header-font-size - {Length} Agenda header font size\n * @cssprop --agenda-header-color - {Color} Agenda header color\n * @cssprop --event-time-font-size - {Length} Event time font size\n * @cssprop --event-time-color - {Color} Event time color\n * @cssprop --event-subject-font-size - {Length} Event subject font size\n * @cssprop --event-subject-color - {Color} Event subject color\n * @cssprop --event-location-font-size - {Length} Event location font size\n * @cssprop --event-location-color - {Color} Event location color\n */\n@customElement('mgt-agenda')\nexport class MgtAgenda extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * stores current date for initial calender selection in events.\n   * @type {string}\n   */\n  @property({\n    attribute: 'date',\n    type: String\n  })\n  public get date(): string {\n    return this._date;\n  }\n  public set date(value) {\n    if (this._date === value) {\n      return;\n    }\n\n    this._date = value;\n    this.reloadState();\n  }\n\n  /**\n   * determines if agenda events come from specific group\n   * @type {string}\n   */\n  @property({\n    attribute: 'group-id',\n    type: String\n  })\n  public get groupId(): string {\n    return this._groupId;\n  }\n  public set groupId(value) {\n    if (this._groupId === value) {\n      return;\n    }\n\n    this._groupId = value;\n    this.reloadState();\n  }\n\n  /**\n   * sets number of days until end date, 3 is the default\n   * @type {number}\n   */\n  @property({\n    attribute: 'days',\n    type: Number\n  })\n  public get days(): number {\n    return this._days;\n  }\n  public set days(value) {\n    if (this._days === value) {\n      return;\n    }\n\n    this._days = value;\n    this.reloadState();\n  }\n\n  /**\n   * allows developer to specify a different graph query that retrieves events\n   * @type {string}\n   */\n  @property({\n    attribute: 'event-query',\n    type: String\n  })\n  public get eventQuery(): string {\n    return this._eventQuery;\n  }\n  public set eventQuery(value) {\n    if (this._eventQuery === value) {\n      return;\n    }\n\n    this._eventQuery = value;\n    this.reloadState();\n  }\n\n  /**\n   * array containing events from user agenda.\n   * @type {MicrosoftGraph.Event[]}\n   */\n  @property({\n    attribute: 'events',\n    type: Array\n  })\n  public events: MicrosoftGraph.Event[];\n\n  /**\n   * allows developer to define max number of events shown\n   * @type {number}\n   */\n  @property({\n    attribute: 'show-max',\n    type: Number\n  })\n  public showMax: number;\n\n  /**\n   * allows developer to define agenda to group events by day.\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'group-by-day',\n    type: Boolean\n  })\n  public groupByDay: boolean;\n\n  /**\n   * allows developer to specify preferred timezone that should be used for\n   * retrieving events from Graph, eg. `Pacific Standard Time`. The preferred timezone for\n   * the current user can be retrieved by calling `me/mailboxSettings` and\n   * retrieving the value of the `timeZone` property.\n   * @type {string}\n   */\n  @property({\n    attribute: 'preferred-timezone',\n    type: String\n  })\n  public get preferredTimezone(): string {\n    return this._preferredTimezone;\n  }\n  public set preferredTimezone(value) {\n    if (this._preferredTimezone === value) {\n      return;\n    }\n\n    this._preferredTimezone = value;\n    this.reloadState();\n  }\n\n  /**\n   * Get the scopes required for agenda\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtAgenda\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set(['calendars.read', ...MgtPeople.requiredScopes])];\n  }\n\n  /**\n   * determines width available for agenda component.\n   * @type {boolean}\n   */\n  @property({ attribute: false }) private _isNarrow: boolean;\n\n  private _eventQuery: string;\n  private _days: number = 3;\n  private _groupId: string;\n  private _date: string;\n  private _preferredTimezone: string;\n\n  constructor() {\n    super();\n    this.onResize = this.onResize.bind(this);\n  }\n\n  /**\n   * Determines width available if resize is necessary, adds onResize event listener to window\n   *\n   * @memberof MgtAgenda\n   */\n  public connectedCallback() {\n    this._isNarrow = this.offsetWidth < 600;\n    super.connectedCallback();\n    window.addEventListener('resize', this.onResize);\n  }\n\n  /**\n   * Removes onResize event listener from window\n   *\n   * @memberof MgtAgenda\n   */\n  public disconnectedCallback() {\n    window.removeEventListener('resize', this.onResize);\n    super.disconnectedCallback();\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return a lit-html TemplateResult.\n   * Setting properties inside this method will not trigger the element to update\n   *\n   * @returns\n   * @memberof MgtAgenda\n   */\n  public render(): TemplateResult {\n    // Loading\n    if (!this.events && this.isLoadingState) {\n      return this.renderLoading();\n    }\n\n    // No data\n    if (!this.events || this.events.length === 0) {\n      return this.renderNoData();\n    }\n\n    // Prep data\n    const events = this.showMax && this.showMax > 0 ? this.events.slice(0, this.showMax) : this.events;\n\n    // Default template\n    const renderedTemplate = this.renderTemplate('default', { events });\n    if (renderedTemplate) {\n      return renderedTemplate;\n    }\n\n    // Update narrow state\n    this._isNarrow = this.offsetWidth < 600;\n\n    // Render list\n    return html`\n      <div dir=${this.direction} class=\"agenda${this._isNarrow ? ' narrow' : ''}${this.groupByDay ? ' grouped' : ''}\">\n        ${this.groupByDay ? this.renderGroups(events) : this.renderEvents(events)}\n        ${this.isLoadingState ? this.renderLoading() : html``}\n      </div>\n    `;\n  }\n\n  /**\n   * Reloads the component with its current settings and potential new data\n   *\n   * @memberof MgtAgenda\n   */\n  public async reload() {\n    this.events = await this.loadEvents();\n  }\n\n  /**\n   * Render the loading state\n   *\n   * @protected\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderLoading(): TemplateResult {\n    return (\n      this.renderTemplate('loading', null) ||\n      html`\n        <div class=\"event\">\n          <div class=\"event-time-container\">\n            <div class=\"event-time-loading loading-element\"></div>\n          </div>\n          <div class=\"event-details-container\">\n            <div class=\"event-subject-loading loading-element\"></div>\n            <div class=\"event-location-container\">\n              <div class=\"event-location-icon-loading loading-element\"></div>\n              <div class=\"event-location-loading loading-element\"></div>\n            </div>\n            <div class=\"event-location-container\">\n              <div class=\"event-attendee-loading loading-element\"></div>\n              <div class=\"event-attendee-loading loading-element\"></div>\n              <div class=\"event-attendee-loading loading-element\"></div>\n            </div>\n          </div>\n        </div>\n      `\n    );\n  }\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtAgenda\n   */\n  protected clearState(): void {\n    this.events = null;\n  }\n\n  /**\n   * Render the no-data state.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtAgenda\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * Render an individual Event.\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event} event\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderEvent(event: MicrosoftGraph.Event): TemplateResult {\n    return html`\n      <div class=\"event\">\n        <div class=\"event-time-container\">\n          <div class=\"event-time\" aria-label=\"${this.getEventTimeString(event)}\">${this.getEventTimeString(event)}</div>\n        </div>\n        <div class=\"event-details-container\">\n          ${this.renderTitle(event)} ${this.renderLocation(event)} ${this.renderAttendees(event)}\n        </div>\n        <div class=\"event-other-container\">${this.renderOther(event)}</div>\n      </div>\n    `;\n  }\n\n  /**\n   * Render the header for a group.\n   * Only relevant for grouped Events.\n   *\n   * @protected\n   * @param {Date} date\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderHeader(header: string): TemplateResult {\n    return (\n      this.renderTemplate('header', { header }, 'header-' + header) ||\n      html`\n        <div class=\"header\" aria-label=\"${header}\">${header}</div>\n      `\n    );\n  }\n\n  /**\n   * Render the title field of an Event\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event} event\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderTitle(event: MicrosoftGraph.Event): TemplateResult {\n    return html`\n      <div aria-label=${event.subject} class=\"event-subject\">${event.subject}</div>\n    `;\n  }\n\n  /**\n   * Render the location field of an Event\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event} event\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderLocation(event: MicrosoftGraph.Event): TemplateResult {\n    if (!event.location.displayName) {\n      return null;\n    }\n\n    return html`\n      <div class=\"event-location-container\">\n        <div class=\"event-location-icon\">${getSvg(SvgIcon.OfficeLocation)}</div>\n        <div class=\"event-location\" aria-label=\"${event.location.displayName}\">${event.location.displayName}</div>\n      </div>\n    `;\n  }\n\n  /**\n   * Render the attendees field of an Event\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event} event\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderAttendees(event: MicrosoftGraph.Event): TemplateResult {\n    if (!event.attendees.length) {\n      return null;\n    }\n    return html`\n      <mgt-people\n        class=\"event-attendees\"\n        .peopleQueries=${event.attendees.map(attendee => {\n          return attendee.emailAddress.address;\n        })}\n      ></mgt-people>\n    `;\n  }\n\n  /**\n   * Render the event other field of an Event\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event} event\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderOther(event: MicrosoftGraph.Event): TemplateResult {\n    return this.hasTemplate('event-other')\n      ? html`\n          ${this.renderTemplate('event-other', { event }, event.id + '-other')}\n        `\n      : null;\n  }\n\n  /**\n   * Render the events in groups, each with a header.\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event[]} events\n   * @returns {TemplateResult}\n   * @memberof MgtAgenda\n   */\n  protected renderGroups(events: MicrosoftGraph.Event[]): TemplateResult {\n    // Render list, grouped by day\n    const grouped = {};\n\n    events.forEach(event => {\n      let dateString = event?.start?.dateTime;\n      if (event.end.timeZone === 'UTC') {\n        dateString += 'Z';\n      }\n\n      const header = this.getDateHeaderFromDateTimeString(dateString);\n      grouped[header] = grouped[header] || [];\n      grouped[header].push(event);\n    });\n\n    return html`\n      ${Object.keys(grouped).map(\n        header =>\n          html`\n            <div class=\"group\">${this.renderHeader(header)} ${this.renderEvents(grouped[header])}</div>\n          `\n      )}\n    `;\n  }\n\n  /**\n   * Render a list of events.\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event[]} events\n   * @returns {TemplateResult}\n   * @memberof MgtAgenda\n   */\n  protected renderEvents(events: MicrosoftGraph.Event[]): TemplateResult {\n    return html`\n      <ul class=\"agenda-list\">\n        ${events.map(\n          event =>\n            html`\n              <li @click=${() => this.eventClicked(event)}>\n                ${this.renderTemplate('event', { event }, event.id) || this.renderEvent(event)}\n              </li>\n            `\n        )}\n      </ul>\n    `;\n  }\n\n  /**\n   * Load state into the component\n   *\n   * @protected\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected async loadState() {\n    if (this.events) {\n      return;\n    }\n\n    const events = await this.loadEvents();\n    if (events && events.length > 0) {\n      this.events = events;\n    }\n  }\n\n  private async reloadState() {\n    this.events = null;\n    this.requestStateUpdate(true);\n  }\n\n  private onResize() {\n    this._isNarrow = this.offsetWidth < 600;\n  }\n\n  private eventClicked(event: MicrosoftGraph.Event) {\n    this.fireCustomEvent('eventClick', { event });\n  }\n\n  private getEventTimeString(event: MicrosoftGraph.Event) {\n    if (event.isAllDay) {\n      return 'ALL DAY';\n    }\n\n    // #937 When not specifying a preferred time zone using the\n    // preferred-timezone attribute, MGT treats the dates retrieved from\n    // Microsoft Graph as local time, rather than UTC.\n    let startString = event.start.dateTime;\n    if (event.start.timeZone === 'UTC') {\n      startString += 'Z';\n    }\n    let endString = event.end.dateTime;\n    if (event.end.timeZone === 'UTC') {\n      endString += 'Z';\n    }\n\n    const start = this.prettyPrintTimeFromDateTime(new Date(startString));\n    const end = this.prettyPrintTimeFromDateTime(new Date(endString));\n\n    return `${start} - ${end}`;\n  }\n\n  private async loadEvents(): Promise<MicrosoftGraph.Event[]> {\n    const p = Providers.globalProvider;\n    let events: MicrosoftGraph.Event[] = [];\n\n    if (p && p.state === ProviderState.SignedIn) {\n      const graph = p.graph.forComponent(this);\n\n      if (this.eventQuery) {\n        try {\n          const tokens = this.eventQuery.split('|');\n          let scope: string;\n          let query: string;\n          if (tokens.length > 1) {\n            query = tokens[0].trim();\n            scope = tokens[1].trim();\n          } else {\n            query = this.eventQuery;\n          }\n\n          let request = graph.api(query);\n\n          if (scope) {\n            request = request.middlewareOptions(prepScopes(scope));\n          }\n\n          const results = await request.get();\n\n          if (results && results.value) {\n            events = results.value;\n          }\n          // tslint:disable-next-line: no-empty\n        } catch (e) {}\n      } else {\n        const start = this.date ? new Date(this.date) : new Date();\n        const end = new Date(start.getTime());\n        end.setDate(start.getDate() + this.days);\n\n        try {\n          const iterator = await getEventsPageIterator(graph, start, end, this.groupId);\n          if (iterator && iterator.value) {\n            events = iterator.value;\n\n            while (iterator.hasNext) {\n              await iterator.next();\n              events = iterator.value;\n            }\n          }\n        } catch (error) {\n          // noop - possible error with graph\n        }\n      }\n    }\n\n    return events;\n  }\n\n  private prettyPrintTimeFromDateTime(date: Date) {\n    return date.toLocaleTimeString(navigator.language, {\n      timeStyle: 'short',\n      timeZone: this.preferredTimezone\n    });\n  }\n\n  private getDateHeaderFromDateTimeString(dateTimeString: string) {\n    const date = new Date(dateTimeString);\n    return date.toLocaleDateString(navigator.language, {\n      dateStyle: 'full',\n      timeZone: this.preferredTimezone\n    });\n  }\n}\n"]}