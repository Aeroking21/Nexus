/**
 * -------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.
 * See License in the project root for license information.
 * -------------------------------------------------------------------------------------------
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { customElement, html } from 'lit-element';
import { BasePersonCardSection } from '../BasePersonCardSection';
import { getFileTypeIconUri } from '../../../../styles/fluent-icons';
import { getSvg, SvgIcon } from '../../../../utils/SvgHelper';
import { getRelativeDisplayDate } from '../../../../utils/Utils';
import { styles } from './mgt-person-card-files-css';
import { strings } from './strings';
/**
 * The files subsection of the person card
 *
 * @export
 * @class MgtPersonCardProfile
 * @extends {MgtTemplatedComponent}
 */
let MgtPersonCardFiles = class MgtPersonCardFiles extends BasePersonCardSection {
    /**
     * Array of styles to apply to the element. The styles should be defined
     * using the `css` tag function.
     */
    static get styles() {
        return styles;
    }
    get strings() {
        return strings;
    }
    constructor(files) {
        super();
        this._files = files;
    }
    /**
     * The name for display in the overview section.
     *
     * @readonly
     * @type {string}
     * @memberof MgtPersonCardFiles
     */
    get displayName() {
        return this.strings.filesSectionTitle;
    }
    /**
     * Reset any state in the section
     *
     * @protected
     * @memberof MgtPersonCardFiles
     */
    clearState() {
        super.clearState();
        this._files = null;
    }
    /**
     * Render the icon for display in the navigation ribbon.
     *
     * @returns {TemplateResult}
     * @memberof MgtPersonCardFiles
     */
    renderIcon() {
        return getSvg(SvgIcon.Files);
    }
    /**
     * Render the compact view
     *
     * @returns {TemplateResult}
     * @memberof MgtPersonCardFiles
     */
    renderCompactView() {
        let contentTemplate;
        if (this.isLoadingState) {
            contentTemplate = this.renderLoading();
        }
        else if (!this._files || !this._files.length) {
            contentTemplate = this.renderNoData();
        }
        else {
            contentTemplate = html `
        ${this._files.slice(0, 3).map(file => this.renderFile(file))}
      `;
        }
        return html `
      <div class="root compact" dir=${this.direction}>
        ${contentTemplate}
      </div>
    `;
    }
    /**
     * Render the full view
     *
     * @protected
     * @returns {TemplateResult}
     * @memberof MgtPersonCardFiles
     */
    renderFullView() {
        let contentTemplate;
        if (this.isLoadingState) {
            contentTemplate = this.renderLoading();
        }
        else if (!this._files || !this._files.length) {
            contentTemplate = this.renderNoData();
        }
        else {
            contentTemplate = html `
        ${this._files.map(file => this.renderFile(file))}
      `;
        }
        return html `
      <div class="root" dir=${this.direction}>
        <div class="title">${this.strings.filesSectionTitle}</div>
        ${contentTemplate}
      </div>
    `;
    }
    /**
     * Render a file item
     *
     * @protected
     * @param {IFile} file
     * @returns {TemplateResult}
     * @memberof MgtPersonCardFiles
     */
    renderFile(file) {
        const lastModifiedTemplate = file.lastShared
            ? html `
          <div class="file__last-modified">
            ${this.strings.sharedTextSubtitle} ${getRelativeDisplayDate(new Date(file.lastShared.sharedDateTime))}
          </div>
        `
            : null;
        return html `
      <div class="file" @click=${e => this.handleFileClick(file)} tabindex="0">
        <div class="file__icon">
          <img alt="${file.resourceVisualization.title}" src=${getFileTypeIconUri(file.resourceVisualization.type, 48, 'svg')} />
        </div>
        <div class="file__details">
          <div class="file__name">${file.resourceVisualization.title}</div>
          ${lastModifiedTemplate}
        </div>
      </div>
    `;
    }
    handleFileClick(file) {
        if (file.resourceReference && file.resourceReference.webUrl) {
            window.open(file.resourceReference.webUrl, '_blank', 'noreferrer');
        }
    }
};
MgtPersonCardFiles = __decorate([
    customElement('mgt-person-card-files'),
    __metadata("design:paramtypes", [Array])
], MgtPersonCardFiles);
export { MgtPersonCardFiles };
//# sourceMappingURL=mgt-person-card-files.js.map