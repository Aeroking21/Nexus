{"version":3,"file":"mgt-dot-options.js","sourceRoot":"src/","sources":["components/sub-components/mgt-dot-options/mgt-dot-options.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { customElement, html, property } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { MgtBaseComponent } from '@microsoft/mgt-element';\nimport { styles } from './mgt-dot-options-css';\n/**\n * Custom Component used to handle an arrow rendering for TaskGroups utilized in the task component.\n *\n * @export MgtDotOptions\n * @class MgtDotOptions\n * @extends {MgtBaseComponent}\n */\n@customElement('mgt-dot-options')\nexport class MgtDotOptions extends MgtBaseComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * user the `css` tag function.\n   */\n  public static get styles() {\n    return styles;\n  }\n  /**\n   * Determines if header menu is rendered or hidden.\n   *\n   * @type {boolean}\n   * @memberof MgtDotOptions\n   */\n  @property({ type: Boolean }) public open: boolean;\n\n  /**\n   * Menu options to be rendered with an attached MouseEvent handler for expansion of details\n   *\n   * @memberof MgtDotOptions\n   */\n  @property({ type: Object }) public options: { [option: string]: (e: Event) => void | any };\n\n  private _clickHandler: (e: MouseEvent) => void | any = null;\n\n  constructor() {\n    super();\n    this._clickHandler = (e: MouseEvent) => (this.open = false);\n  }\n\n  // tslint:disable-next-line: completed-docs\n  public connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener('click', this._clickHandler);\n  }\n\n  // tslint:disable-next-line: completed-docs\n  public disconnectedCallback() {\n    window.removeEventListener('click', this._clickHandler);\n    super.disconnectedCallback();\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  public render() {\n    return html`\n      <div tabindex=\"0\" class=${classMap({ DotMenu: true, Open: this.open })}\n        @click=${e => this.onDotClick(e)}\n        @keydown=${e => this.onDotKeydown(e)}>\n        <span class=\"DotIcon\">\\uE712</span>\n        <div tabindex=\"0\" class=\"Menu\">\n          ${Object.keys(this.options).map(prop => this.getMenuOption(prop, this.options[prop]))}\n        </div>\n      </div>\n    `;\n  }\n  /**\n   * Used by the render method to attach click handler to each dot item\n   *\n   * @param {string} name\n   * @param {((e: Event) => void | any)} click\n   * @returns\n   * @memberof MgtDotOptions\n   */\n  public getMenuOption(name: string, click: (e: Event) => void | any) {\n    return html`\n      <div\n        class=\"DotItem\"\n        @click=\"${e => {\n          e.preventDefault();\n          e.stopPropagation();\n          click(e);\n          this.open = false;\n        }}\"\n        @keydown=\"${e => {\n          this.handleKeydownMenuOption;\n          click(e);\n          this.open = false;\n        }}\"\n      >\n        <span class=\"DotItemName\">\n          ${name}\n        </span>\n      </div>\n    `;\n  }\n\n  private onDotClick(e: MouseEvent) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.open = !this.open;\n  }\n\n  private onDotKeydown(e: KeyboardEvent) {\n    if (e.code === 'Enter') {\n      e.preventDefault();\n      e.stopPropagation();\n\n      this.open = !this.open;\n    }\n  }\n\n  private handleKeydownMenuOption(e: KeyboardEvent) {\n    if (e.code === 'Enter') {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n}\n"]}