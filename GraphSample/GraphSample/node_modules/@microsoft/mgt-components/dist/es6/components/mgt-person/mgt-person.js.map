{"version":3,"file":"mgt-person.js","sourceRoot":"src/","sources":["components/mgt-person/mgt-person.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { Contact, Presence } from '@microsoft/microsoft-graph-types';\nimport { customElement, html, internalProperty, property, TemplateResult } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport { findPeople, getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { getGroupImage, getPersonImage } from '../../graph/graph.photos';\nimport { getUserPresence } from '../../graph/graph.presence';\nimport { getUserWithPhoto } from '../../graph/graph.userWithPhoto';\nimport { findUsers, getMe, getUser } from '../../graph/graph.user';\nimport { AvatarSize, IDynamicPerson, ViewType } from '../../graph/types';\nimport { Providers, ProviderState, MgtTemplatedComponent } from '@microsoft/mgt-element';\nimport '../../styles/style-helper';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { MgtPersonCard } from '../mgt-person-card/mgt-person-card';\nimport '../sub-components/mgt-flyout/mgt-flyout';\nimport { MgtFlyout } from '../sub-components/mgt-flyout/mgt-flyout';\nimport { PersonCardInteraction } from './../PersonCardInteraction';\nimport { styles } from './mgt-person-css';\nimport { strings } from './strings';\n\nexport { PersonCardInteraction } from '../PersonCardInteraction';\n\n/**\n * Enumeration to define what parts of the person component render\n *\n * @export\n * @enum {number}\n */\nexport enum PersonViewType {\n  /**\n   * Render only the avatar\n   */\n  avatar = 2,\n\n  /**\n   * Render the avatar and one line of text\n   */\n  oneline = 3,\n\n  /**\n   * Render the avatar and two lines of text\n   */\n  twolines = 4,\n\n  /**\n   * Render the avatar and three lines of text\n   */\n  threelines = 5\n}\n\nexport enum avatarType {\n  /**\n   * Renders avatar photo if available, falls back to initials\n   */\n  photo = 'photo',\n\n  /**\n   * Forces render avatar initials\n   */\n  initials = 'initials'\n}\n\n/**\n * Configuration object for the Person component\n *\n * @export\n * @interface MgtPersonConfig\n */\nexport interface MgtPersonConfig {\n  /**\n   * Sets or gets whether the person component can use Contacts APIs to\n   * find contacts and their images\n   *\n   * @type {boolean}\n   */\n  useContactApis: boolean;\n}\n\n/**\n * Person properties part of original set provided by graph by default\n */\nconst defaultPersonProperties = [\n  'businessPhones',\n  'displayName',\n  'givenName',\n  'jobTitle',\n  'mail',\n  'mobilePhone',\n  'officeLocation',\n  'preferredLanguage',\n  'surname',\n  'userPrincipalName',\n  'id'\n];\n\n/**\n * The person component is used to display a person or contact by using their photo, name, and/or email address.\n *\n * @export\n * @class MgtPerson\n * @extends {MgtTemplatedComponent}\n *\n * @fires line1clicked - Fired when line1 is clicked\n * @fires line2clicked - Fired when line2 is clicked\n * @fires line3clicked - Fired when line3 is clicked\n *\n * @cssprop --avatar-size - {Length} Avatar size\n * @cssprop --avatar-border - {String} Avatar border\n * @cssprop --avatar-border-radius - {String} Avatar border radius\n * @cssprop --avatar-cursor - {String} Avatar cursor\n * @cssprop --initials-color - {Color} Initials color\n * @cssprop --initials-background-color - {Color} Initials background color\n * @cssprop --font-family - {String} Font family\n * @cssprop --font-size - {Length} Font size\n * @cssprop --font-weight - {Length} Font weight\n * @cssprop --color - {Color} Color\n * @cssprop --presence-background-color - {Color} Presence badge background color\n * @cssprop --presence-icon-color - {Color} Presence badge icon color\n * @cssprop --text-transform - {String} text transform\n * @cssprop --line2-font-size - {Length} Line 2 font size\n * @cssprop --line2-font-weight - {Length} Line 2 font weight\n * @cssprop --line2-color - {Color} Line 2 color\n * @cssprop --line2-text-transform - {String} Line 2 text transform\n * @cssprop --line3-font-size - {Length} Line 2 font size\n * @cssprop --line3-font-weight - {Length} Line 2 font weight\n * @cssprop --line3-color - {Color} Line 2 color\n * @cssprop --line3-text-transform - {String} Line 2 text transform\n * @cssprop --details-spacing - {Length} spacing between avatar and person details\n */\n@customElement('mgt-person')\nexport class MgtPerson extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Global Configuration object for all\n   * person components\n   *\n   * @static\n   * @type {MgtPersonConfig}\n   * @memberof MgtPerson\n   */\n  public static config: MgtPersonConfig = {\n    useContactApis: true\n  };\n\n  /**\n   * allows developer to define name of person for component\n   * @type {string}\n   */\n  @property({\n    attribute: 'person-query'\n  })\n  public get personQuery(): string {\n    return this._personQuery;\n  }\n  public set personQuery(value: string) {\n    if (value === this._personQuery) {\n      return;\n    }\n\n    this._personQuery = value;\n    this.personDetailsInternal = null;\n    this.requestStateUpdate();\n  }\n\n  /**\n   * Fallback when no user is found\n   * @type {IDynamicPerson}\n   */\n  @property({\n    attribute: 'fallback-details',\n    type: Object\n  })\n  public get fallbackDetails(): IDynamicPerson {\n    return this._fallbackDetails;\n  }\n  public set fallbackDetails(value: IDynamicPerson) {\n    if (value === this._fallbackDetails) {\n      return;\n    }\n\n    this._fallbackDetails = value;\n\n    if (this.personDetailsInternal) {\n      return;\n    }\n\n    if (value && value.displayName) {\n      this._personAvatarBg = this.getColorFromName(value.displayName);\n    } else {\n      this._personAvatarBg = 'gray20';\n    }\n    this.requestStateUpdate();\n  }\n\n  /**\n   * user-id property allows developer to use id value to determine person\n   * @type {string}\n   */\n  @property({\n    attribute: 'user-id'\n  })\n  public get userId(): string {\n    return this._userId;\n  }\n  public set userId(value: string) {\n    if (value === this._userId) {\n      return;\n    }\n\n    this._userId = value;\n    this.personDetailsInternal = null;\n    this.requestStateUpdate();\n  }\n\n  /**\n   * determines if person component renders presence\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'show-presence',\n    type: Boolean\n  })\n  public showPresence: boolean;\n\n  /**\n   * determines person component avatar size and apply presence badge accordingly\n   * @type {AvatarSize}\n   */\n  @property({\n    attribute: 'avatar-size',\n    type: String\n  })\n  public avatarSize: AvatarSize;\n\n  /**\n   * object containing Graph details on person\n   * a copy of person-details attribute\n   * @type {IDynamicPerson}\n   */\n  @property({\n    attribute: null,\n    type: Object\n  })\n  private get personDetailsInternal(): IDynamicPerson {\n    return this._personDetailsInternal;\n  }\n\n  private set personDetailsInternal(value: IDynamicPerson) {\n    if (this._personDetailsInternal === value) {\n      return;\n    }\n\n    this._personDetailsInternal = value;\n    if (value && value.displayName) {\n      this._personAvatarBg = this.getColorFromName(value.displayName);\n    } else {\n      this._personAvatarBg = 'gray20';\n    }\n\n    this._fetchedImage = null;\n    this._fetchedPresence = null;\n\n    this.requestStateUpdate();\n    this.requestUpdate('personDetailsInternal');\n  }\n\n  /**\n   * object containing Graph details on person\n   * @type {IDynamicPerson}\n   */\n  @property({\n    attribute: 'person-details',\n    type: Object\n  })\n  public get personDetails(): IDynamicPerson {\n    return this._personDetails;\n  }\n\n  public set personDetails(value: IDynamicPerson) {\n    if (this._personDetails === value) {\n      return;\n    }\n\n    this._personDetails = value;\n    if (value && value.displayName) {\n      this._personAvatarBg = this.getColorFromName(value.displayName);\n    } else {\n      this._personAvatarBg = 'gray20';\n    }\n\n    this._fetchedImage = null;\n    this._fetchedPresence = null;\n\n    this.requestStateUpdate();\n    this.requestUpdate('personDetails');\n  }\n\n  /**\n   * Set the image of the person\n   *\n   * @type {string}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'person-image',\n    type: String\n  })\n  public get personImage(): string {\n    return this._personImage || this._fetchedImage;\n  }\n  public set personImage(value: string) {\n    if (value === this._personImage) {\n      return;\n    }\n\n    this._isInvalidImageSrc = !value;\n    const oldValue = this._personImage;\n    this._personImage = value;\n    this.requestUpdate('personImage', oldValue);\n  }\n\n  /**\n   * Sets whether the person image should be fetched\n   * from the Microsoft Graph based on the personDetailsInternal\n   * provided by the user\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'fetch-image',\n    type: Boolean\n  })\n  public fetchImage: boolean;\n\n  /**\n   * Sets whether to disable the person image fetch\n   * from the Microsoft Graph\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'disable-image-fetch',\n    type: Boolean\n  })\n  public disableImageFetch: boolean;\n\n  /**\n   * Determines and sets person avatar\n   *\n   *\n   * @type {string}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'avatar-type',\n    converter: value => {\n      value = value.toLowerCase();\n\n      if (value === 'initials') {\n        return avatarType.initials;\n      } else {\n        return avatarType.photo;\n      }\n    }\n  })\n  public get avatarType(): string {\n    return this._avatarType;\n  }\n  public set avatarType(value: string) {\n    if (value === this._avatarType) {\n      return;\n    }\n\n    this._avatarType = value;\n    this.requestStateUpdate();\n  }\n\n  /**\n   * Gets or sets presence of person\n   *\n   * @type {MicrosoftGraph.Presence}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'person-presence',\n    type: Object\n  })\n  public get personPresence(): Presence {\n    return this._personPresence || this._fetchedPresence;\n  }\n  public set personPresence(value: Presence) {\n    if (value === this._personPresence) {\n      return;\n    }\n\n    const oldValue = this._personPresence;\n    this._personPresence = value;\n    this.requestUpdate('personPresence', oldValue);\n  }\n\n  /**\n   * Sets how the person-card is invoked\n   * Set to PersonCardInteraction.none to not show the card\n   *\n   * @type {PersonCardInteraction}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'person-card',\n    converter: (value, type) => {\n      value = value.toLowerCase();\n      if (typeof PersonCardInteraction[value] === 'undefined') {\n        return PersonCardInteraction.none;\n      } else {\n        return PersonCardInteraction[value];\n      }\n    }\n  })\n  public personCardInteraction: PersonCardInteraction;\n\n  /**\n   * Get the scopes required for person\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtPerson\n   */\n  public static get requiredScopes(): string[] {\n    const scopes = ['user.readbasic.all', 'user.read', 'people.read', 'presence.read.all', 'presence.read'];\n\n    if (MgtPerson.config.useContactApis) {\n      scopes.push('contacts.read');\n    }\n\n    return scopes;\n  }\n\n  /**\n   * Gets the flyout element\n   *\n   * @protected\n   * @type {MgtFlyout}\n   * @memberof MgtPerson\n   */\n  protected get flyout(): MgtFlyout {\n    return this.renderRoot.querySelector('.flyout');\n  }\n\n  /**\n   * Sets the property of the personDetailsInternal to use for the first line of text.\n   * Default is displayName.\n   *\n   * @type {string}\n   * @memberof MgtPerson\n   */\n  @property({ attribute: 'line1-property' }) public line1Property: string;\n\n  /**\n   * Sets the property of the personDetailsInternal to use for the second line of text.\n   * Default is mail.\n   *\n   * @type {string}\n   * @memberof MgtPerson\n   */\n  @property({ attribute: 'line2-property' }) public line2Property: string;\n\n  /**\n   * Sets the property of the personDetailsInternal to use for the second line of text.\n   * Default is mail.\n   *\n   * @type {string}\n   * @memberof MgtPerson\n   */\n  @property({ attribute: 'line3-property' }) public line3Property: string;\n\n  /**\n   * Sets what data to be rendered (image only, oneLine, twoLines).\n   * Default is 'image'.\n   *\n   * @type {ViewType | PersonViewType}\n   * @memberof MgtPerson\n   */\n  @property({\n    converter: value => {\n      if (!value || value.length === 0) {\n        return ViewType.image;\n      }\n\n      value = value.toLowerCase();\n\n      if (typeof ViewType[value] === 'undefined') {\n        return ViewType.image;\n      } else {\n        return ViewType[value];\n      }\n    }\n  })\n  public view: ViewType | PersonViewType;\n\n  @internalProperty() private _fetchedImage: string;\n  @internalProperty() private _fetchedPresence: Presence;\n  @internalProperty() private _isInvalidImageSrc: boolean;\n  @internalProperty() private _personCardShouldRender: boolean;\n\n  private _personDetailsInternal: IDynamicPerson;\n  private _personDetails: IDynamicPerson;\n  private _fallbackDetails: IDynamicPerson;\n  private _personAvatarBg: string;\n  private _personImage: string;\n  private _personPresence: Presence;\n  private _personQuery: string;\n  private _userId: string;\n  private _avatarType: string;\n\n  private _mouseLeaveTimeout;\n  private _mouseEnterTimeout;\n\n  constructor() {\n    super();\n\n    // defaults\n    this.personCardInteraction = PersonCardInteraction.none;\n    this.line1Property = 'displayName';\n    this.line2Property = 'email';\n    this.line3Property = 'jobTitle';\n    this.view = ViewType.image;\n    this.avatarSize = 'auto';\n    this.disableImageFetch = false;\n    this._isInvalidImageSrc = false;\n    this._avatarType = 'photo';\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  public render() {\n    // Loading\n    if (this.isLoadingState && !this.personDetails && !this.personDetailsInternal && !this.fallbackDetails) {\n      return this.renderLoading();\n    }\n\n    // Prep data\n    const person = this.personDetails || this.personDetailsInternal || this.fallbackDetails;\n    const image = this.getImage();\n    const presence = this.personPresence || this._fetchedPresence;\n\n    if (!person && !image) {\n      return this.renderNoData();\n    }\n    if (!(person && person.personImage) && image) {\n      person.personImage = image;\n    }\n\n    // Default template\n    let personTemplate = this.renderTemplate('default', { person, personImage: image, personPresence: presence });\n\n    if (!personTemplate) {\n      const detailsTemplate: TemplateResult = this.renderDetails(person, presence);\n      const imageWithPresenceTemplate: TemplateResult = this.renderAvatar(person, image, presence);\n\n      const rootClasses = {\n        'person-root': true,\n        clickable: this.personCardInteraction === PersonCardInteraction.click,\n        small: !this.isLargeAvatar()\n      };\n\n      personTemplate = html`\n        <div \n          class=${classMap(rootClasses)}\n          tabindex=${ifDefined(this.personCardInteraction === PersonCardInteraction.click ? '0' : undefined)}\n        >\n          ${imageWithPresenceTemplate} ${detailsTemplate}\n        </div>\n      `;\n    }\n\n    if (this.personCardInteraction !== PersonCardInteraction.none) {\n      personTemplate = this.renderFlyout(personTemplate, person, image, presence);\n    }\n\n    return html`\n      <div\n        class=\"root\"\n        dir=${this.direction}\n        @click=${this.handleMouseClick}\n        @mouseenter=${this.handleMouseEnter}\n        @mouseleave=${this.handleMouseLeave}\n        @keydown=${this.handleKeyDown}\n      >\n        ${personTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the loading state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPerson\n   */\n  protected renderLoading(): TemplateResult {\n    return this.renderTemplate('loading', null) || html``;\n  }\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtPerson\n   */\n  protected clearState(): void {\n    this._personImage = '';\n    this._personDetailsInternal = null;\n    this._fetchedImage = null;\n    this._fetchedPresence = null;\n  }\n\n  /**\n   * Render the state when no data is available\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPerson\n   */\n  protected renderNoData(): TemplateResult {\n    const noDataTemplate = this.renderTemplate('no-data', null);\n    if (noDataTemplate) {\n      return noDataTemplate;\n    }\n\n    const avatarClasses = {\n      'avatar-icon': true,\n      'ms-Icon': true,\n      'ms-Icon--Contact': true,\n      small: !this.isLargeAvatar()\n    };\n\n    return html`\n      <i class=${classMap(avatarClasses)}></i>\n    `;\n  }\n\n  /**\n   * Render the image part of the person template.\n   * If the image is unavailable, the person's initials will be used instead.\n   *\n   * @protected\n   * @param {string} [imageSrc]\n   * @param {IDynamicPerson} [personDetailsInternal]\n   * @returns\n   * @memberof MgtPerson\n   */\n  protected renderImage(personDetailsInternal: IDynamicPerson, imageSrc: string) {\n    if (imageSrc && !this._isInvalidImageSrc && this._avatarType === 'photo') {\n      const altText = `${this.strings.photoFor} ${personDetailsInternal.displayName}`;\n      return html`\n        <div class=\"img-wrapper\">\n          <img alt=${altText} src=${imageSrc} @error=${() => (this._isInvalidImageSrc = true)} />\n        </div>\n      `;\n    } else if (personDetailsInternal) {\n      const initials = this.getInitials(personDetailsInternal);\n\n      return html`\n        <span class=\"initials-text\" aria-label=\"${this.strings.initials} ${initials}\">\n          ${\n            initials && initials.length\n              ? html`\n                ${initials}\n              `\n              : html`\n                <i class=\"ms-Icon ms-Icon--Contact contact-icon\"></i>\n              `\n          }\n        </span>\n      `;\n    }\n  }\n\n  /**\n   * Render presence for the person.\n   *\n   * @protected\n   * @param\n   * @memberof MgtPersonCard\n   */\n  protected renderPresence(presence: Presence): TemplateResult {\n    if (!this.showPresence || !presence) {\n      return html``;\n    }\n\n    let statusClass = null;\n    // attach appropriate css class to show different icons\n    switch (presence.availability) {\n      case 'DoNotDisturb':\n        switch (presence.activity) {\n          case 'OutOfOffice':\n            statusClass = 'presence-oof-dnd';\n            break;\n          default:\n            statusClass = 'presence-dnd';\n            break;\n        }\n        break;\n      case 'BeRightBack':\n        statusClass = 'presence-away';\n        break;\n      case 'Available':\n        switch (presence.activity) {\n          case 'Available':\n            statusClass = 'presence-available';\n            break;\n          case 'OutOfOffice':\n            statusClass = 'presence-oof-available';\n            break;\n        }\n        break;\n      case 'Busy':\n        switch (presence.activity) {\n          case 'OutOfOffice':\n            statusClass = 'presence-oof-busy';\n            break;\n          default:\n            // 'Busy', 'InACall', 'InAMeeting'\n            statusClass = 'presence-busy';\n            break;\n        }\n        break;\n      case 'Away':\n        switch (presence.activity) {\n          case 'Away':\n            statusClass = 'presence-away';\n            break;\n          case 'OutOfOffice':\n            statusClass = 'presence-oof-offline';\n            break;\n        }\n        break;\n      case 'Offline':\n        switch (presence.activity) {\n          case 'Offline':\n            statusClass = 'presence-offline';\n            break;\n          case 'OutOfOffice':\n            statusClass = 'presence-oof-offline';\n            break;\n          case 'OffWork':\n            statusClass = 'presence-offline';\n            break;\n        }\n        break;\n      default:\n        statusClass = 'presence-offline';\n        break;\n    }\n\n    const presenceClasses = {\n      'ms-Icon': true,\n      'presence-basic': true\n    };\n\n    presenceClasses[statusClass] = true;\n    // workaround because SkypeArrow icon from fluent doesn't work ¯\\_(ツ)_/¯\n    let iconHtml = null;\n    if (statusClass === 'presence-oof-offline') {\n      iconHtml = html`\n        <div class=\"ms-Icon presence-basic presence-oof-offline-wrapper\">\n          <i class=\"presence-oof-offline\">\n            ${getSvg(SvgIcon.SkypeArrow, '#666666')}\n          </i>\n        </div>\n      `;\n    } else {\n      iconHtml = html`\n        <i class=${classMap(presenceClasses)} aria-hidden=\"true\"></i>\n      `;\n    }\n\n    return html`\n      <div class=\"user-presence\" title=${presence.activity} aria-label=${presence.activity} role=\"img\">\n        ${iconHtml}\n      </div>\n    `;\n  }\n\n  /**\n   * Render image with presence for the person.\n   *\n   * @protected\n   * @param\n   * @memberof MgtPersonCard\n   */\n  protected renderAvatar(personDetailsInternal: IDynamicPerson, image: string, presence: Presence): TemplateResult {\n    const hasInitials = !image || this._isInvalidImageSrc || this._avatarType === avatarType.initials;\n    const imageClasses = {\n      initials: hasInitials,\n      small: !this.isLargeAvatar(),\n      'user-avatar': true\n    };\n\n    let title = '';\n\n    if (hasInitials && personDetailsInternal) {\n      // add avatar background color\n      imageClasses[this._personAvatarBg] = true;\n      title = `${this.strings.initials} ${this.getInitials(personDetailsInternal)}`;\n    } else {\n      title = personDetailsInternal ? personDetailsInternal.displayName || '' : '';\n      if (title !== '') {\n        title = `${this.strings.photoFor} ${title}`;\n      }\n    }\n\n    if (title === '') {\n      const emailAddress = getEmailFromGraphEntity(personDetailsInternal);\n      if (emailAddress !== null) {\n        title = `${this.strings.emailAddress} ${emailAddress}`;\n      }\n    }\n\n    const imageTemplate: TemplateResult = this.renderImage(personDetailsInternal, image);\n    const presenceTemplate: TemplateResult = this.renderPresence(presence);\n\n    return html`\n      <div class=${classMap(imageClasses)} title=${title} aria-label=${title}>\n        ${imageTemplate} ${presenceTemplate}\n      </div>\n    `;\n  }\n\n  private handleLine1Clicked() {\n    this.fireCustomEvent('line1clicked', this.personDetailsInternal);\n  }\n\n  private handleLine2Clicked() {\n    this.fireCustomEvent('line2clicked', this.personDetailsInternal);\n  }\n\n  private handleLine3Clicked() {\n    this.fireCustomEvent('line3clicked', this.personDetailsInternal);\n  }\n\n  /**\n   * Render the details part of the person template.\n   *\n   * @protected\n   * @param {IDynamicPerson} [person]\n   * @param {string} [image]\n   * @returns {TemplateResult}\n   * @memberof MgtPerson\n   */\n  protected renderDetails(personProps: IDynamicPerson, presence?: Presence): TemplateResult {\n    if (!personProps || this.view === ViewType.image || this.view === PersonViewType.avatar) {\n      return html``;\n    }\n\n    let person: IDynamicPerson & { presenceActivity?: string; presenceAvailability?: string } = personProps;\n    if (presence) {\n      person.presenceActivity = presence?.activity;\n      person.presenceAvailability = presence?.availability;\n    }\n\n    const details: TemplateResult[] = [];\n\n    if (this.view > ViewType.image) {\n      if (this.hasTemplate('line1')) {\n        // Render the line1 template\n        const template = this.renderTemplate('line1', { person });\n        details.push(html`\n          <div class=\"line1\" @click=${() => this.handleLine1Clicked()}>${template}</div>\n        `);\n      } else {\n        // Render the line1 property value\n        const text = this.getTextFromProperty(person, this.line1Property);\n        if (text) {\n          details.push(html`\n            <div class=\"line1\" @click=${() =>\n              this.handleLine1Clicked()} role=\"presentation\" aria-label=\"${text}\">${text}</div>\n          `);\n        }\n      }\n    }\n\n    if (this.view > ViewType.oneline) {\n      if (this.hasTemplate('line2')) {\n        // Render the line2 template\n        const template = this.renderTemplate('line2', { person });\n        details.push(html`\n          <div class=\"line2\" @click=${() => this.handleLine2Clicked()}>${template}</div>\n        `);\n      } else {\n        // Render the line2 property value\n        const text = this.getTextFromProperty(person, this.line2Property);\n        if (text) {\n          details.push(html`\n            <div class=\"line2\" @click=${() =>\n              this.handleLine2Clicked()} role=\"presentation\" aria-label=\"${text}\">${text}</div>\n          `);\n        }\n      }\n    }\n\n    if (this.view > ViewType.twolines) {\n      if (this.hasTemplate('line3')) {\n        // Render the line3 template\n        const template = this.renderTemplate('line3', { person });\n        details.push(html`\n          <div class=\"line3\" @click=${() => this.handleLine3Clicked()}>${template}</div>\n        `);\n      } else {\n        // Render the line3 property value\n        const text = this.getTextFromProperty(person, this.line3Property);\n        if (text) {\n          details.push(html`\n            <div class=\"line3\" @click=${() =>\n              this.handleLine3Clicked()} role=\"presentation\" aria-label=\"${text}\">${text}</div>\n          `);\n        }\n      }\n    }\n\n    const detailsClasses = classMap({\n      details: true,\n      small: !this.isLargeAvatar()\n    });\n\n    return html`\n      <div class=\"${detailsClasses}\">\n        ${details}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the details flyout.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPerson\n   */\n  protected renderFlyout(\n    anchor: TemplateResult,\n    personDetails: IDynamicPerson,\n    image: string,\n    presence: Presence\n  ): TemplateResult {\n    const flyoutContent = this._personCardShouldRender\n      ? html`\n          <div slot=\"flyout\">\n            ${this.renderFlyoutContent(personDetails, image, presence)}\n          </div>\n        `\n      : html``;\n\n    return html`\n      <mgt-flyout light-dismiss class=\"flyout\" .avoidHidingAnchor=${false}>\n        ${anchor} ${flyoutContent}\n      </mgt-flyout>\n    `;\n  }\n\n  /**\n   * Render the flyout menu content.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPerson\n   */\n  protected renderFlyoutContent(personDetails: IDynamicPerson, image: string, presence: Presence): TemplateResult {\n    return (\n      this.renderTemplate('person-card', { person: personDetails, personImage: image }) ||\n      html`\n        <mgt-person-card\n          lock-tab-navigation\n          .personDetails=${personDetails}\n          .personImage=${image}\n          .personPresence=${presence}\n          .showPresence=${this.showPresence}\n        ></mgt-person-card>\n      `\n    );\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPerson\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state === ProviderState.Loading) {\n      return;\n    }\n\n    if (provider && provider.state === ProviderState.SignedOut) {\n      this.personDetailsInternal = null;\n      return;\n    }\n\n    const graph = provider.graph.forComponent(this);\n\n    // Prepare person props\n    let personProps = [...defaultPersonProperties, this.line1Property, this.line2Property, this.line3Property];\n    personProps = personProps.filter(email => email !== 'email');\n\n    let details = this.personDetailsInternal || this.personDetails;\n\n    if (details) {\n      if (\n        !details.personImage &&\n        this.fetchImage &&\n        this._avatarType === 'photo' &&\n        !this.personImage &&\n        !this._fetchedImage\n      ) {\n        let image: string;\n        if ('groupTypes' in details) {\n          image = await getGroupImage(graph, details, MgtPerson.config.useContactApis);\n        } else {\n          image = await getPersonImage(graph, details, MgtPerson.config.useContactApis);\n        }\n        if (image) {\n          details.personImage = image;\n          this._fetchedImage = image;\n        }\n      }\n    } else if (this.userId || this.personQuery === 'me') {\n      // Use userId or 'me' query to get the person and image\n      let person;\n      if (this._avatarType === 'photo' && !this.disableImageFetch) {\n        person = await getUserWithPhoto(graph, this.userId, personProps);\n      } else {\n        if (this.personQuery === 'me') {\n          person = await getMe(graph, personProps);\n        } else {\n          person = await getUser(graph, this.userId, personProps);\n        }\n      }\n      this.personDetailsInternal = person;\n      this.personDetails = person;\n      this._fetchedImage = this.getImage();\n    } else if (this.personQuery) {\n      // Use the personQuery to find our person.\n      let people = await findPeople(graph, this.personQuery, 1);\n\n      if (!people || people.length === 0) {\n        people = (await findUsers(graph, this.personQuery, 1)) || [];\n      }\n\n      if (people && people.length) {\n        this.personDetailsInternal = people[0];\n        this.personDetails = people[0];\n        if (this._avatarType === 'photo' && !this.disableImageFetch) {\n          const image = await getPersonImage(graph, people[0], MgtPerson.config.useContactApis);\n\n          if (image) {\n            this.personDetailsInternal.personImage = image;\n            this.personDetails.personImage = image;\n            this._fetchedImage = image;\n          }\n        }\n      }\n    }\n\n    // populate presence\n    const defaultPresence: Presence = {\n      activity: 'Offline',\n      availability: 'Offline',\n      id: null\n    };\n\n    if (this.showPresence && !this.personPresence && !this._fetchedPresence) {\n      try {\n        details = this.personDetailsInternal || this.personDetails;\n        if (details) {\n          // setting userId to 'me' ensures only the presence.read permission is required\n          const userId = this.personQuery !== 'me' ? details?.id : null;\n          this._fetchedPresence = await getUserPresence(graph, userId);\n        } else {\n          this._fetchedPresence = defaultPresence;\n        }\n      } catch (_) {\n        // set up a default Presence in case beta api changes or getting error code\n        this._fetchedPresence = defaultPresence;\n      }\n    }\n  }\n\n  /**\n   * Gets the user initials\n   *\n   * @protected\n   * @returns {string}\n   * @memberof MgtPerson\n   */\n  protected getInitials(person?: IDynamicPerson): string {\n    if (!person) {\n      person = this.personDetailsInternal;\n    }\n\n    if ((person as Contact).initials) {\n      return (person as Contact).initials;\n    }\n\n    let initials = '';\n    if (person.givenName) {\n      initials += person.givenName[0].toUpperCase();\n    }\n    if (person.surname) {\n      initials += person.surname[0].toUpperCase();\n    }\n\n    if (!initials && person.displayName) {\n      const name = person.displayName.split(/\\s+/);\n      for (let i = 0; i < 2 && i < name.length; i++) {\n        if (name[i][0] && this.isLetter(name[i][0])) {\n          initials += name[i][0].toUpperCase();\n        }\n      }\n    }\n\n    return initials;\n  }\n\n  /**\n   * Gets color from name\n   *\n   * @protected\n   * @param {string} name\n   * @returns {string}\n   * @memberof MgtPerson\n   */\n  protected getColorFromName(name: string): string {\n    const charCodes = name\n      .split('')\n      .map(char => char.charCodeAt(0))\n      .join('');\n    const nameInt = parseInt(charCodes, 10);\n    const colors = [\n      'pinkRed10',\n      'red20',\n      'red10',\n      'orange20',\n      'orangeYellow20',\n      'green10',\n      'green20',\n      'cyan20',\n      'cyan30',\n      'cyanBlue10',\n      'cyanBlue20',\n      'blue10',\n      'blueMagenta30',\n      'blueMagenta20',\n      'magenta20',\n      'magenta10',\n      'magentaPink10',\n      'orange30',\n      'gray30',\n      'gray20'\n    ];\n    return colors[nameInt % colors.length];\n  }\n\n  private getImage(): string {\n    if (this.personImage) {\n      return this.personImage;\n    }\n\n    if (this._fetchedImage) {\n      return this._fetchedImage;\n    }\n\n    const person = this.personDetailsInternal || this.personDetails;\n    return person && person.personImage ? person.personImage : null;\n  }\n\n  private isLetter(char: string) {\n    try {\n      return char.match(new RegExp('\\\\p{L}', 'u'));\n    } catch (e) {\n      return char.toLowerCase() !== char.toUpperCase();\n    }\n  }\n\n  private getTextFromProperty(personDetailsInternal: IDynamicPerson, prop: string) {\n    if (!prop || prop.length === 0) {\n      return null;\n    }\n\n    const properties = prop.trim().split(',');\n    let text;\n    let i = 0;\n\n    while (!text && i < properties.length) {\n      const currentProp = properties[i].trim();\n      switch (currentProp) {\n        case 'mail':\n        case 'email':\n          text = getEmailFromGraphEntity(personDetailsInternal);\n          break;\n        default:\n          text = personDetailsInternal[currentProp];\n      }\n      i++;\n    }\n\n    return text;\n  }\n\n  private isLargeAvatar() {\n    return this.avatarSize === 'large' || (this.avatarSize === 'auto' && this.view > ViewType.oneline);\n  }\n\n  private handleMouseClick(e: MouseEvent) {\n    if (this.personCardInteraction === PersonCardInteraction.click) {\n      this.showPersonCard();\n    }\n  }\n\n  private handleKeyDown(e: KeyboardEvent) {\n    //enter activates person-card\n    if (e) {\n      if (e.key === 'Enter') {\n        this.showPersonCard();\n      }\n    }\n  }\n\n  private handleMouseEnter(e: MouseEvent) {\n    clearTimeout(this._mouseEnterTimeout);\n    clearTimeout(this._mouseLeaveTimeout);\n    if (this.personCardInteraction !== PersonCardInteraction.hover) {\n      return;\n    }\n    this._mouseEnterTimeout = setTimeout(this.showPersonCard.bind(this), 500);\n  }\n\n  private handleMouseLeave(e: MouseEvent) {\n    clearTimeout(this._mouseEnterTimeout);\n    clearTimeout(this._mouseLeaveTimeout);\n    this._mouseLeaveTimeout = setTimeout(this.hidePersonCard.bind(this), 500);\n  }\n\n  private hidePersonCard() {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.close();\n    }\n    const personCard = (this.querySelector('mgt-person-card') ||\n      this.renderRoot.querySelector('mgt-person-card')) as MgtPersonCard;\n    if (personCard) {\n      personCard.isExpanded = false;\n      personCard.clearHistory();\n    }\n  }\n\n  private showPersonCard() {\n    if (!this._personCardShouldRender) {\n      this._personCardShouldRender = true;\n    }\n\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.open();\n    }\n  }\n}\n"]}