/**
 * -------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.
 * See License in the project root for license information.
 * -------------------------------------------------------------------------------------------
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { GraphPageIterator, prepScopes } from '@microsoft/mgt-element';
/**
 * returns Calender events iterator associated with either the logged in user or a specific groupId
 *
 * @param {Date} startDateTime
 * @param {Date} endDateTime
 * @param {string} [groupId]
 * @param {string} preferredTimezone
 * @returns {(Promise<Event[]>)}
 * @memberof Graph
 */
export function getEventsPageIterator(graph, startDateTime, endDateTime, groupId) {
    return __awaiter(this, void 0, void 0, function* () {
        const scopes = 'calendars.read';
        const sdt = `startdatetime=${startDateTime.toISOString()}`;
        const edt = `enddatetime=${endDateTime.toISOString()}`;
        let uri;
        if (groupId) {
            uri = `groups/${groupId}/calendar`;
        }
        else {
            uri = 'me';
        }
        uri += `/calendarview?${sdt}&${edt}`;
        let request = graph.api(uri).middlewareOptions(prepScopes(scopes)).orderby('start/dateTime');
        return GraphPageIterator.create(graph, request);
    });
}
//# sourceMappingURL=mgt-agenda.graph.js.map