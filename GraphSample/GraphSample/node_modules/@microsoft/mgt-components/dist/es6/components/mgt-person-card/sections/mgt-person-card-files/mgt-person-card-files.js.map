{"version":3,"file":"mgt-person-card-files.js","sourceRoot":"src/","sources":["components/mgt-person-card/sections/mgt-person-card-files/mgt-person-card-files.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { SharedInsight } from '@microsoft/microsoft-graph-types';\nimport { customElement, html, TemplateResult } from 'lit-element';\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getFileTypeIconUri } from '../../../../styles/fluent-icons';\nimport { getSvg, SvgIcon } from '../../../../utils/SvgHelper';\nimport { getRelativeDisplayDate } from '../../../../utils/Utils';\nimport { styles } from './mgt-person-card-files-css';\nimport { strings } from './strings';\n\n/**\n * The files subsection of the person card\n *\n * @export\n * @class MgtPersonCardProfile\n * @extends {MgtTemplatedComponent}\n */\n@customElement('mgt-person-card-files')\nexport class MgtPersonCardFiles extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  private _files: SharedInsight[];\n\n  public constructor(files: SharedInsight[]) {\n    super();\n    this._files = files;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtPersonCardFiles\n   */\n  public get displayName(): string {\n    return this.strings.filesSectionTitle;\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtPersonCardFiles\n   */\n  public clearState(): void {\n    super.clearState();\n    this._files = null;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardFiles\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Files);\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardFiles\n   */\n  public renderCompactView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (this.isLoadingState) {\n      contentTemplate = this.renderLoading();\n    } else if (!this._files || !this._files.length) {\n      contentTemplate = this.renderNoData();\n    } else {\n      contentTemplate = html`\n        ${this._files.slice(0, 3).map(file => this.renderFile(file))}\n      `;\n    }\n\n    return html`\n      <div class=\"root compact\" dir=${this.direction}>\n        ${contentTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardFiles\n   */\n  protected renderFullView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (this.isLoadingState) {\n      contentTemplate = this.renderLoading();\n    } else if (!this._files || !this._files.length) {\n      contentTemplate = this.renderNoData();\n    } else {\n      contentTemplate = html`\n        ${this._files.map(file => this.renderFile(file))}\n      `;\n    }\n\n    return html`\n      <div class=\"root\" dir=${this.direction}>\n        <div class=\"title\">${this.strings.filesSectionTitle}</div>\n        ${contentTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render a file item\n   *\n   * @protected\n   * @param {IFile} file\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardFiles\n   */\n  protected renderFile(file: SharedInsight): TemplateResult {\n    const lastModifiedTemplate = file.lastShared\n      ? html`\n          <div class=\"file__last-modified\">\n            ${this.strings.sharedTextSubtitle} ${getRelativeDisplayDate(new Date(file.lastShared.sharedDateTime))}\n          </div>\n        `\n      : null;\n\n    return html`\n      <div class=\"file\" @click=${e => this.handleFileClick(file)} tabindex=\"0\">\n        <div class=\"file__icon\">\n          <img alt=\"${file.resourceVisualization.title}\" src=${getFileTypeIconUri(\n      file.resourceVisualization.type,\n      48,\n      'svg'\n    )} />\n        </div>\n        <div class=\"file__details\">\n          <div class=\"file__name\">${file.resourceVisualization.title}</div>\n          ${lastModifiedTemplate}\n        </div>\n      </div>\n    `;\n  }\n\n  private handleFileClick(file: SharedInsight) {\n    if (file.resourceReference && file.resourceReference.webUrl) {\n      window.open(file.resourceReference.webUrl, '_blank', 'noreferrer');\n    }\n  }\n}\n"]}