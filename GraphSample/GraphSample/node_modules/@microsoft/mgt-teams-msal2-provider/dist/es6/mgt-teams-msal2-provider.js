/**
 * -------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.
 * See License in the project root for license information.
 * -------------------------------------------------------------------------------------------
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { customElement, property } from 'lit-element';
import { Providers, MgtBaseProvider } from '@microsoft/mgt-element';
import { HttpMethod, TeamsMsal2Provider } from './TeamsMsal2Provider';
/**
 * Authentication Library Provider for Microsoft Teams accounts
 *
 * @export
 * @class MgtTeamsMsal2Provider
 * @extends {MgtBaseProvider}
 */
let MgtTeamsMsal2Provider = class MgtTeamsMsal2Provider extends MgtBaseProvider {
    constructor() {
        super(...arguments);
        /**
         * String alphanumerical value relation to a specific user
         *
         * @memberof MgtTeamsMsal2Provider
         */
        this.clientId = '';
        /**
         * The relative or absolute path of the html page that will handle the authentication
         *
         * @memberof MgtTeamsMsal2Provider
         */
        this.authPopupUrl = '';
        /**
         * The relative or absolute path to the token exchange backend service
         *
         * @memberof MgtTeamsMsal2Provider
         */
        this.ssoUrl = '';
    }
    /**
     * Gets whether this provider can be used in this environment
     *
     * @readonly
     * @memberof MgtTeamsMsal2Provider
     */
    get isAvailable() {
        return TeamsMsal2Provider.isAvailable;
    }
    /**
     * method called to initialize the provider. Each derived class should provide their own implementation
     *
     * @protected
     * @memberof MgtTeamsMsal2Provider
     */
    initializeProvider() {
        if (this.clientId && this.authPopupUrl) {
            const config = {
                authPopupUrl: this.authPopupUrl,
                clientId: this.clientId
            };
            if (this.scopes) {
                const scope = this.scopes.split(',');
                if (scope && scope.length > 0) {
                    config.scopes = scope;
                }
            }
            if (this.authority) {
                const msalConfig = {
                    auth: {
                        authority: this.authority,
                        clientId: this.clientId
                    }
                };
                config.msalOptions = msalConfig;
            }
            if (this.ssoUrl) {
                config.ssoUrl = this.ssoUrl;
            }
            if (this.isAutoConsentDisabled) {
                config.autoConsent = false;
            }
            if (this.httpMethod) {
                let httpMethod = this.httpMethod.toUpperCase();
                const httpMethodEnum = HttpMethod[httpMethod];
                config.httpMethod = httpMethodEnum;
            }
            this.provider = new TeamsMsal2Provider(config);
            Providers.globalProvider = this.provider;
        }
    }
};
__decorate([
    property({
        attribute: 'client-id',
        type: String
    }),
    __metadata("design:type", Object)
], MgtTeamsMsal2Provider.prototype, "clientId", void 0);
__decorate([
    property({
        attribute: 'auth-popup-url',
        type: String
    }),
    __metadata("design:type", Object)
], MgtTeamsMsal2Provider.prototype, "authPopupUrl", void 0);
__decorate([
    property({
        attribute: 'sso-url',
        type: String
    }),
    __metadata("design:type", Object)
], MgtTeamsMsal2Provider.prototype, "ssoUrl", void 0);
__decorate([
    property(),
    __metadata("design:type", Object)
], MgtTeamsMsal2Provider.prototype, "authority", void 0);
__decorate([
    property({
        attribute: 'scopes',
        type: String
    }),
    __metadata("design:type", Object)
], MgtTeamsMsal2Provider.prototype, "scopes", void 0);
__decorate([
    property({
        attribute: 'auto-consent-disabled',
        type: Boolean
    }),
    __metadata("design:type", Object)
], MgtTeamsMsal2Provider.prototype, "isAutoConsentDisabled", void 0);
__decorate([
    property({
        attribute: 'http-method',
        type: String
    }),
    __metadata("design:type", Object)
], MgtTeamsMsal2Provider.prototype, "httpMethod", void 0);
MgtTeamsMsal2Provider = __decorate([
    customElement('mgt-teams-msal2-provider')
], MgtTeamsMsal2Provider);
export { MgtTeamsMsal2Provider };
//# sourceMappingURL=mgt-teams-msal2-provider.js.map