import { ElementStyles, } from "@microsoft/fast-element";
import { DI } from "../di/di";
const presentationKeys = new Map();
/**
 * @alpha
 * A gateway for utilities associated with component presentation.
 */
export const ComponentPresentation = Object.freeze({
    /**
     * @alpha
     * Creates element-specific DI keys for resolving component presentations.
     */
    keyFrom(tagName) {
        const lookup = tagName.toLowerCase();
        let key = presentationKeys.get(lookup);
        if (key === void 0) {
            key = DI.createInterface(`${lookup}:presentation`);
            presentationKeys.set(lookup, key);
        }
        return key;
    },
});
/**
 * @alpha
 * The default implementation of ComponentPresentation, used by FoundationElement.
 */
export class DefaultComponentPresentation {
    constructor(template, styles) {
        this.template = template || null;
        this.styles =
            styles === void 0
                ? null
                : Array.isArray(styles)
                    ? ElementStyles.create(styles)
                    : styles instanceof ElementStyles
                        ? styles
                        : ElementStyles.create([styles]);
    }
    applyTo(element) {
        const controller = element.$fastController;
        if (controller.template === null) {
            controller.template = this.template;
        }
        if (controller.styles === null) {
            controller.styles = this.styles;
        }
    }
}
