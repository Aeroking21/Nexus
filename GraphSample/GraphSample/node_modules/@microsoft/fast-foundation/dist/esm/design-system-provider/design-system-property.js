import { attr, observable, } from "@microsoft/fast-element";
/**
 * Decorator to declare a property as a design-system property.
 * Intended to be used with the {@link @microsoft/fast-foundation#DesignSystemProvider}
 * @param config - {@link DecoratorDesignSystemPropertyConfiguration}
 *
 * @public
 */
export function designSystemProperty(config) {
    const decorator = (source, prop, config) => {
        const { cssCustomProperty, attribute } = config;
        if (!source.designSystemProperties) {
            source.designSystemProperties = {};
        }
        if (attribute === false) {
            observable(source, prop);
        }
        else {
            /**
             * Default to fromView so we don't perform un-necessary DOM writes
             */
            if (config.mode === void 0) {
                config = Object.assign(Object.assign({}, config), { mode: "fromView" });
            }
            attr(config)(source, prop);
        }
        source.designSystemProperties[prop] = {
            cssCustomProperty: cssCustomProperty === false
                ? false
                : typeof cssCustomProperty === "string"
                    ? cssCustomProperty
                    : typeof attribute === "string"
                        ? attribute
                        : prop,
            default: config.default,
        };
    };
    return (source, prop) => {
        decorator(source, prop, config);
    };
}
