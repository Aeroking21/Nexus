import { ComposableStyles, ElementStyles, ElementViewTemplate, FASTElement } from "@microsoft/fast-element";
import { InterfaceSymbol } from "../di/di";
/**
 * @alpha
 * Applies presentation details, such as template and styles, to a component instance.
 */
export interface ComponentPresentation {
    applyTo(element: FASTElement): void;
}
/**
 * @alpha
 * A gateway for utilities associated with component presentation.
 */
export declare const ComponentPresentation: Readonly<{
    /**
     * @alpha
     * Creates element-specific DI keys for resolving component presentations.
     */
    keyFrom(tagName: string): InterfaceSymbol<ComponentPresentation>;
}>;
/**
 * @alpha
 * The default implementation of ComponentPresentation, used by FoundationElement.
 */
export declare class DefaultComponentPresentation implements ComponentPresentation {
    readonly styles: ElementStyles | null;
    readonly template: ElementViewTemplate | null;
    constructor(template?: ElementViewTemplate, styles?: ComposableStyles | ComposableStyles[]);
    applyTo(element: FASTElement): void;
}
